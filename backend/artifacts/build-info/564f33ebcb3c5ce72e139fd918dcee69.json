{"id":"564f33ebcb3c5ce72e139fd918dcee69","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC5267.sol)\n\npragma solidity >=0.4.16;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC-20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Permit} from \"./IERC20Permit.sol\";\nimport {ERC20} from \"../ERC20.sol\";\nimport {ECDSA} from \"../../../utils/cryptography/ECDSA.sol\";\nimport {EIP712} from \"../../../utils/cryptography/EIP712.sol\";\nimport {Nonces} from \"../../../utils/Nonces.sol\";\n\n/**\n * @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC-20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /// @inheritdoc IERC20Permit\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /// @inheritdoc IERC20Permit\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /// @inheritdoc IERC20Permit\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    // slither-disable-next-line constable-states\n    string private _nameFallback;\n    // slither-disable-next-line constable-states\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /// @inheritdoc IERC5267\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Nonces.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {toShortStringWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/NigerianStockFactory.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"./NigerianStockToken.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\n/**\n * @title NigerianStockFactory\n * @dev Factory contract for deploying Nigerian Stock Exchange tokens on Bitfinity EVM\n */\ncontract NigerianStockFactory is Ownable, ReentrancyGuard {\n    // Deployed token tracking\n    mapping(string => address) public stockTokens;\n    mapping(address => bool) public isStockToken;\n    address[] public allTokens;\n    \n    // Events\n    event StockTokenDeployed(\n        string indexed stockSymbol,\n        address indexed tokenAddress,\n        string name,\n        string companyName,\n        uint256 maxSupply\n    );\n    \n    event TokenUpdated(string indexed stockSymbol, address indexed oldAddress, address indexed newAddress);\n\n    constructor() Ownable(msg.sender) {}\n\n    /**\n     * @dev Deploy a new Nigerian stock token\n     * @param _name Token name\n     * @param _symbol Token symbol\n     * @param _stockSymbol NGX stock symbol\n     * @param _companyName Company name\n     * @param _maxSupply Maximum supply\n     * @param _initialSupply Initial supply\n     * @param _admin Admin address for the token\n     */\n    function deployStockToken(\n        string memory _name,\n        string memory _symbol,\n        string memory _stockSymbol,\n        string memory _companyName,\n        uint256 _maxSupply,\n        uint256 _initialSupply,\n        address _admin\n    ) external onlyOwner nonReentrant returns (address) {\n        require(bytes(_stockSymbol).length > 0, \"Stock symbol cannot be empty\");\n        require(stockTokens[_stockSymbol] == address(0), \"Stock token already exists\");\n        require(_admin != address(0), \"Admin cannot be zero address\");\n\n        // Deploy new token\n        NigerianStockToken newToken = new NigerianStockToken(\n            _name,\n            _symbol,\n            _stockSymbol,\n            _companyName,\n            _maxSupply,\n            _initialSupply,\n            _admin\n        );\n\n        address tokenAddress = address(newToken);\n        \n        // Register token\n        stockTokens[_stockSymbol] = tokenAddress;\n        isStockToken[tokenAddress] = true;\n        allTokens.push(tokenAddress);\n\n        emit StockTokenDeployed(_stockSymbol, tokenAddress, _name, _companyName, _maxSupply);\n        \n        return tokenAddress;\n    }\n\n    /**\n     * @dev Update token address for a stock symbol (in case of redeployment)\n     * @param _stockSymbol Stock symbol\n     * @param _newTokenAddress New token address\n     */\n    function updateStockToken(string memory _stockSymbol, address _newTokenAddress) external onlyOwner {\n        require(bytes(_stockSymbol).length > 0, \"Stock symbol cannot be empty\");\n        require(_newTokenAddress != address(0), \"New token address cannot be zero\");\n        \n        address oldAddress = stockTokens[_stockSymbol];\n        stockTokens[_stockSymbol] = _newTokenAddress;\n        \n        if (oldAddress != address(0)) {\n            isStockToken[oldAddress] = false;\n        }\n        \n        isStockToken[_newTokenAddress] = true;\n        allTokens.push(_newTokenAddress);\n\n        emit TokenUpdated(_stockSymbol, oldAddress, _newTokenAddress);\n    }\n\n    /**\n     * @dev Get token address by stock symbol\n     * @param _stockSymbol Stock symbol\n     * @return Token address\n     */\n    function getTokenAddress(string memory _stockSymbol) external view returns (address) {\n        return stockTokens[_stockSymbol];\n    }\n\n    /**\n     * @dev Check if address is a registered stock token\n     * @param _tokenAddress Token address to check\n     * @return True if registered stock token\n     */\n    function isRegisteredStockToken(address _tokenAddress) external view returns (bool) {\n        return isStockToken[_tokenAddress];\n    }\n\n    /**\n     * @dev Get all deployed token addresses\n     * @return Array of token addresses\n     */\n    function getAllTokens() external view returns (address[] memory) {\n        return allTokens;\n    }\n\n    /**\n     * @dev Get total number of deployed tokens\n     * @return Number of tokens\n     */\n    function getTokenCount() external view returns (uint256) {\n        return allTokens.length;\n    }\n\n    /**\n     * @dev Get token information by stock symbol\n     * @param _stockSymbol Stock symbol\n     * @return tokenAddress Token contract address\n     * @return name Token name\n     * @return symbol Token symbol\n     * @return companyName Company name\n     * @return totalSupply Total token supply\n     * @return maxSupply Maximum token supply\n     * @return decimals Token decimals\n     */\n    function getTokenInfo(string memory _stockSymbol) external view returns (\n        address tokenAddress,\n        string memory name,\n        string memory symbol,\n        string memory companyName,\n        uint256 totalSupply,\n        uint256 maxSupply,\n        uint8 decimals\n    ) {\n        address token = stockTokens[_stockSymbol];\n        require(token != address(0), \"Token not found\");\n        \n        NigerianStockToken stockToken = NigerianStockToken(token);\n        \n        return (\n            token,\n            stockToken.name(),\n            stockToken.symbol(),\n            stockToken.companyName(),\n            stockToken.totalSupply(),\n            stockToken.maxSupply(),\n            stockToken.decimals()\n        );\n    }\n\n    /**\n     * @dev Batch deploy multiple stock tokens\n     * @param _tokenData Array of token deployment data\n     * @param _admin Admin address for all tokens\n     */\n    function batchDeployStockTokens(\n        TokenDeploymentData[] memory _tokenData,\n        address _admin\n    ) external onlyOwner nonReentrant returns (address[] memory) {\n        require(_tokenData.length > 0, \"No token data provided\");\n        require(_admin != address(0), \"Admin cannot be zero address\");\n        \n        address[] memory deployedTokens = new address[](_tokenData.length);\n        \n        for (uint256 i = 0; i < _tokenData.length; i++) {\n            TokenDeploymentData memory data = _tokenData[i];\n            \n            require(bytes(data.stockSymbol).length > 0, \"Stock symbol cannot be empty\");\n            require(stockTokens[data.stockSymbol] == address(0), \"Stock token already exists\");\n            \n            // Deploy token\n            NigerianStockToken newToken = new NigerianStockToken(\n                data.name,\n                data.symbol,\n                data.stockSymbol,\n                data.companyName,\n                data.maxSupply,\n                data.initialSupply,\n                _admin\n            );\n            \n            address tokenAddress = address(newToken);\n            \n            // Register token\n            stockTokens[data.stockSymbol] = tokenAddress;\n            isStockToken[tokenAddress] = true;\n            allTokens.push(tokenAddress);\n            deployedTokens[i] = tokenAddress;\n            \n            emit StockTokenDeployed(\n                data.stockSymbol,\n                tokenAddress,\n                data.name,\n                data.companyName,\n                data.maxSupply\n            );\n        }\n        \n        return deployedTokens;\n    }\n\n    // Struct for batch deployment\n    struct TokenDeploymentData {\n        string name;\n        string symbol;\n        string stockSymbol;\n        string companyName;\n        uint256 maxSupply;\n        uint256 initialSupply;\n    }\n}\n"},"contracts/NigerianStockToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\n/**\n * @title NigerianStockToken\n * @dev ERC20 token representing Nigerian Stock Exchange (NGX) stocks on Bitfinity EVM\n * \n * Features:\n * - ERC20 compliant with permit functionality\n * - Role-based access control\n * - Pausable for emergency stops\n * - Reentrancy protection\n * - Minting and burning capabilities\n * - Transfer restrictions for compliance\n */\ncontract NigerianStockToken is ERC20, ERC20Permit, ERC20Pausable, AccessControl, ReentrancyGuard {\n    // Role definitions\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\");\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    bytes32 public constant COMPLIANCE_ROLE = keccak256(\"COMPLIANCE_ROLE\");\n\n    // Token metadata\n    string public stockSymbol;\n    string public companyName;\n    uint256 public maxSupply;\n    \n    // Compliance and security features\n    mapping(address => bool) public blacklisted;\n    mapping(address => uint256) public dailyTransferLimits;\n    mapping(address => mapping(uint256 => uint256)) public dailyTransferAmounts;\n    \n    uint256 public defaultDailyLimit = 1000000 * 10**18; // 1M tokens default\n    uint256 public maxTransactionAmount = 100000 * 10**18; // 100K tokens per transaction\n    \n    // Events\n    event Blacklisted(address indexed account, bool status);\n    event DailyLimitSet(address indexed account, uint256 limit);\n    event MaxTransactionAmountUpdated(uint256 newAmount);\n    event TokensMinted(address indexed to, uint256 amount);\n    event TokensBurned(address indexed from, uint256 amount);\n\n    /**\n     * @dev Constructor\n     * @param _name Token name (e.g., \"Dangote Cement Token\")\n     * @param _symbol Token symbol (e.g., \"DANGCEM\")\n     * @param _stockSymbol NGX stock symbol (e.g., \"DANGCEM\")\n     * @param _companyName Full company name\n     * @param _maxSupply Maximum token supply\n     * @param _initialSupply Initial token supply to mint\n     * @param _admin Admin address\n     */\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        string memory _stockSymbol,\n        string memory _companyName,\n        uint256 _maxSupply,\n        uint256 _initialSupply,\n        address _admin\n    ) ERC20(_name, _symbol) ERC20Permit(_name) {\n        require(_admin != address(0), \"Admin cannot be zero address\");\n        require(_maxSupply > 0, \"Max supply must be greater than 0\");\n        require(_initialSupply <= _maxSupply, \"Initial supply exceeds max supply\");\n        \n        stockSymbol = _stockSymbol;\n        companyName = _companyName;\n        maxSupply = _maxSupply;\n        \n        // Setup roles\n        _grantRole(DEFAULT_ADMIN_ROLE, _admin);\n        _grantRole(MINTER_ROLE, _admin);\n        _grantRole(BURNER_ROLE, _admin);\n        _grantRole(PAUSER_ROLE, _admin);\n        _grantRole(COMPLIANCE_ROLE, _admin);\n        \n        // Mint initial supply\n        if (_initialSupply > 0) {\n            _mint(_admin, _initialSupply);\n            emit TokensMinted(_admin, _initialSupply);\n        }\n    }\n\n    /**\n     * @dev Mint tokens to specified address\n     * @param to Address to mint tokens to\n     * @param amount Amount of tokens to mint\n     */\n    function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) nonReentrant {\n        require(to != address(0), \"Cannot mint to zero address\");\n        require(totalSupply() + amount <= maxSupply, \"Exceeds maximum supply\");\n        \n        _mint(to, amount);\n        emit TokensMinted(to, amount);\n    }\n\n    /**\n     * @dev Burn tokens from specified address\n     * @param from Address to burn tokens from\n     * @param amount Amount of tokens to burn\n     */\n    function burn(address from, uint256 amount) external onlyRole(BURNER_ROLE) nonReentrant {\n        require(from != address(0), \"Cannot burn from zero address\");\n        require(balanceOf(from) >= amount, \"Insufficient balance to burn\");\n        \n        _burn(from, amount);\n        emit TokensBurned(from, amount);\n    }\n\n    /**\n     * @dev Pause all token transfers\n     */\n    function pause() external onlyRole(PAUSER_ROLE) {\n        _pause();\n    }\n\n    /**\n     * @dev Unpause all token transfers\n     */\n    function unpause() external onlyRole(PAUSER_ROLE) {\n        _unpause();\n    }\n\n    /**\n     * @dev Add/remove address from blacklist\n     * @param account Address to blacklist/unblacklist\n     * @param status True to blacklist, false to unblacklist\n     */\n    function setBlacklisted(address account, bool status) external onlyRole(COMPLIANCE_ROLE) {\n        blacklisted[account] = status;\n        emit Blacklisted(account, status);\n    }\n\n    /**\n     * @dev Set daily transfer limit for an address\n     * @param account Address to set limit for\n     * @param limit Daily transfer limit\n     */\n    function setDailyLimit(address account, uint256 limit) external onlyRole(COMPLIANCE_ROLE) {\n        dailyTransferLimits[account] = limit;\n        emit DailyLimitSet(account, limit);\n    }\n\n    /**\n     * @dev Set maximum transaction amount\n     * @param amount New maximum transaction amount\n     */\n    function setMaxTransactionAmount(uint256 amount) external onlyRole(COMPLIANCE_ROLE) {\n        maxTransactionAmount = amount;\n        emit MaxTransactionAmountUpdated(amount);\n    }\n\n    /**\n     * @dev Get current day (for daily limits)\n     */\n    function getCurrentDay() public view returns (uint256) {\n        return block.timestamp / 1 days;\n    }\n\n    /**\n     * @dev Check if transfer is allowed\n     * @param from Sender address\n     * @param to Recipient address\n     * @param amount Transfer amount\n     */\n    function _isTransferAllowed(address from, address to, uint256 amount) internal view returns (bool) {\n        // Check blacklist\n        if (blacklisted[from] || blacklisted[to]) {\n            return false;\n        }\n        \n        // Check max transaction amount\n        if (amount > maxTransactionAmount) {\n            return false;\n        }\n        \n        // Check daily limits\n        uint256 currentDay = getCurrentDay();\n        uint256 dailyLimit = dailyTransferLimits[from] > 0 ? dailyTransferLimits[from] : defaultDailyLimit;\n        uint256 dailyAmount = dailyTransferAmounts[from][currentDay];\n        \n        if (dailyAmount + amount > dailyLimit) {\n            return false;\n        }\n        \n        return true;\n    }\n\n    /**\n     * @dev Override transfer to add compliance checks\n     */\n    function _update(address from, address to, uint256 value) internal override(ERC20, ERC20Pausable) {\n        // Skip checks for minting and burning\n        if (from != address(0) && to != address(0)) {\n            require(_isTransferAllowed(from, to, value), \"Transfer not allowed\");\n            \n            // Update daily transfer amount\n            uint256 currentDay = getCurrentDay();\n            dailyTransferAmounts[from][currentDay] += value;\n        }\n        \n        super._update(from, to, value);\n    }\n\n    /**\n     * @dev Get token information\n     */\n    function getTokenInfo() external view returns (\n        string memory _name,\n        string memory _symbol,\n        string memory _stockSymbol,\n        string memory _companyName,\n        uint256 _totalSupply,\n        uint256 _maxSupply,\n        uint8 _decimals\n    ) {\n        return (\n            name(),\n            symbol(),\n            stockSymbol,\n            companyName,\n            totalSupply(),\n            maxSupply,\n            decimals()\n        );\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[296],"Context":[1562],"ERC165":[4287],"IAccessControl":[379],"IERC165":[4299]},"id":297,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":380,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":1563,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":8,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":4288,"src":"233:66:0","symbolAliases":[{"foreign":{"id":6,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"241:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":7,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"250:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":10,"name":"Context","nameLocations":["1997:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1562,"src":"1997:7:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"1997:7:0"},{"baseName":{"id":12,"name":"IAccessControl","nameLocations":["2006:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"2006:14:0"},"id":13,"nodeType":"InheritanceSpecifier","src":"2006:14:0"},{"baseName":{"id":14,"name":"ERC165","nameLocations":["2022:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":4287,"src":"2022:6:0"},"id":15,"nodeType":"InheritanceSpecifier","src":"2022:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"301:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":296,"linearizedBaseContracts":[296,4287,4299,379,1562],"name":"AccessControl","nameLocation":"1980:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":22,"members":[{"constant":false,"id":19,"mutability":"mutable","name":"hasRole","nameLocation":"2094:7:0","nodeType":"VariableDeclaration","scope":22,"src":"2061:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":18,"keyName":"account","keyNameLocation":"2077:7:0","keyType":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"2069:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2061:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":17,"name":"bool","nodeType":"ElementaryTypeName","src":"2088:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"adminRole","nameLocation":"2119:9:0","nodeType":"VariableDeclaration","scope":22,"src":"2111:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2042:8:0","nodeType":"StructDefinition","scope":296,"src":"2035:100:0","visibility":"public"},{"constant":false,"id":27,"mutability":"mutable","name":"_roles","nameLocation":"2183:6:0","nodeType":"VariableDeclaration","scope":296,"src":"2141:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":26,"keyName":"role","keyNameLocation":"2157:4:0","keyType":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2141:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":25,"nodeType":"UserDefinedTypeName","pathNode":{"id":24,"name":"RoleData","nameLocations":["2165:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":22,"src":"2165:8:0"},"referencedDeclaration":22,"src":"2165:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":30,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2220:18:0","nodeType":"VariableDeclaration","scope":296,"src":"2196:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2196:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":29,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":40,"nodeType":"Block","src":"2463:44:0","statements":[{"expression":{"arguments":[{"id":36,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2484:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":35,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[94,115],"referencedDeclaration":94,"src":"2473:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2473:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":38,"nodeType":"ExpressionStatement","src":"2473:16:0"},{"id":39,"nodeType":"PlaceholderStatement","src":"2499:1:0"}]},"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"2252:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":41,"name":"onlyRole","nameLocation":"2440:8:0","nodeType":"ModifierDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"role","nameLocation":"2457:4:0","nodeType":"VariableDeclaration","scope":41,"src":"2449:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:14:0"},"src":"2431:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[4286],"body":{"id":62,"nodeType":"Block","src":"2632:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":55,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":50,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2649:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":52,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"2669:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$379_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$379_$","typeString":"type(contract IAccessControl)"}],"id":51,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2664:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2664:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$379","typeString":"type(contract IAccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2685:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2664:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2649:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":58,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2724:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":56,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2700:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$296_$","typeString":"type(contract super AccessControl)"}},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2706:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":4286,"src":"2700:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2700:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2649:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":49,"id":61,"nodeType":"Return","src":"2642:94:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"2513:23:0","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":63,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2550:17:0","nodeType":"FunctionDefinition","overrides":{"id":46,"nodeType":"OverrideSpecifier","overrides":[],"src":"2608:8:0"},"parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"interfaceId","nameLocation":"2575:11:0","nodeType":"VariableDeclaration","scope":63,"src":"2568:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":43,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2568:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2567:20:0"},"returnParameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63,"src":"2626:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":47,"name":"bool","nodeType":"ElementaryTypeName","src":"2626:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2625:6:0"},"scope":296,"src":"2541:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[346],"body":{"id":80,"nodeType":"Block","src":"2913:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":73,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2930:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":75,"indexExpression":{"id":74,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"2937:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2930:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":76,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2943:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"2930:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":78,"indexExpression":{"id":77,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"2951:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2930:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":72,"id":79,"nodeType":"Return","src":"2923:36:0"}]},"documentation":{"id":64,"nodeType":"StructuredDocumentation","src":"2749:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":81,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2839:7:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"role","nameLocation":"2855:4:0","nodeType":"VariableDeclaration","scope":81,"src":"2847:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":65,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2847:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"account","nameLocation":"2869:7:0","nodeType":"VariableDeclaration","scope":81,"src":"2861:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"2861:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2846:31:0"},"returnParameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":81,"src":"2907:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":70,"name":"bool","nodeType":"ElementaryTypeName","src":"2907:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2906:6:0"},"scope":296,"src":"2830:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":93,"nodeType":"Block","src":"3231:47:0","statements":[{"expression":{"arguments":[{"id":88,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"3252:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":89,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"3258:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":87,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[94,115],"referencedDeclaration":115,"src":"3241:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3241:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":92,"nodeType":"ExpressionStatement","src":"3241:30:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2972:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":94,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3184:10:0","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"mutability":"mutable","name":"role","nameLocation":"3203:4:0","nodeType":"VariableDeclaration","scope":94,"src":"3195:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":83,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3194:14:0"},"returnParameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"3231:0:0"},"scope":296,"src":"3175:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":114,"nodeType":"Block","src":"3481:124:0","statements":[{"condition":{"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3495:23:0","subExpression":{"arguments":[{"id":103,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3504:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":104,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"3510:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":102,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"3496:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3496:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":113,"nodeType":"IfStatement","src":"3491:108:0","trueBody":{"id":112,"nodeType":"Block","src":"3520:79:0","statements":[{"errorCall":{"arguments":[{"id":108,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"3574:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":109,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3583:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":107,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"3541:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3541:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":111,"nodeType":"RevertStatement","src":"3534:54:0"}]}}]},"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"3284:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":115,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3417:10:0","nodeType":"FunctionDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97,"mutability":"mutable","name":"role","nameLocation":"3436:4:0","nodeType":"VariableDeclaration","scope":115,"src":"3428:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":96,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3428:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"account","nameLocation":"3450:7:0","nodeType":"VariableDeclaration","scope":115,"src":"3442:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"3442:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3427:31:0"},"returnParameters":{"id":101,"nodeType":"ParameterList","parameters":[],"src":"3481:0:0"},"scope":296,"src":"3408:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[354],"body":{"id":128,"nodeType":"Block","src":"3860:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":123,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"3877:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":125,"indexExpression":{"id":124,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"3884:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3877:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3890:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":21,"src":"3877:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":122,"id":127,"nodeType":"Return","src":"3870:29:0"}]},"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"3611:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":129,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3795:12:0","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"role","nameLocation":"3816:4:0","nodeType":"VariableDeclaration","scope":129,"src":"3808:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3808:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3807:14:0"},"returnParameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":129,"src":"3851:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3850:9:0"},"scope":296,"src":"3786:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[362],"body":{"id":147,"nodeType":"Block","src":"4296:42:0","statements":[{"expression":{"arguments":[{"id":143,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4317:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":144,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4323:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":142,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4306:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4306:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":146,"nodeType":"ExpressionStatement","src":"4306:25:0"}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"3912:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":148,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":138,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4289:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":137,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"4276:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":140,"kind":"modifierInvocation","modifierName":{"id":136,"name":"onlyRole","nameLocations":["4267:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4267:8:0"},"nodeType":"ModifierInvocation","src":"4267:28:0"}],"name":"grantRole","nameLocation":"4211:9:0","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"role","nameLocation":"4229:4:0","nodeType":"VariableDeclaration","scope":148,"src":"4221:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4221:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"account","nameLocation":"4243:7:0","nodeType":"VariableDeclaration","scope":148,"src":"4235:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4235:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4220:31:0"},"returnParameters":{"id":141,"nodeType":"ParameterList","parameters":[],"src":"4296:0:0"},"scope":296,"src":"4202:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[370],"body":{"id":166,"nodeType":"Block","src":"4713:43:0","statements":[{"expression":{"arguments":[{"id":162,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4735:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":163,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4741:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":161,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"4723:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4723:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":165,"nodeType":"ExpressionStatement","src":"4723:26:0"}]},"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"4344:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":167,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":157,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4706:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":156,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"4693:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4693:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":159,"kind":"modifierInvocation","modifierName":{"id":155,"name":"onlyRole","nameLocations":["4684:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4684:8:0"},"nodeType":"ModifierInvocation","src":"4684:28:0"}],"name":"revokeRole","nameLocation":"4627:10:0","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"role","nameLocation":"4646:4:0","nodeType":"VariableDeclaration","scope":167,"src":"4638:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4638:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"account","nameLocation":"4660:7:0","nodeType":"VariableDeclaration","scope":167,"src":"4652:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"4652:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4637:31:0"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"4713:0:0"},"scope":296,"src":"4618:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[378],"body":{"id":189,"nodeType":"Block","src":"5383:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":175,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"5397:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":176,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"5419:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5419:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5397:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":183,"nodeType":"IfStatement","src":"5393:102:0","trueBody":{"id":182,"nodeType":"Block","src":"5433:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":179,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5454:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5454:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":181,"nodeType":"RevertStatement","src":"5447:37:0"}]}},{"expression":{"arguments":[{"id":185,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"5517:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":186,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"5523:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5505:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5505:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"5505:37:0"}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"4762:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":190,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5313:12:0","nodeType":"FunctionDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"role","nameLocation":"5334:4:0","nodeType":"VariableDeclaration","scope":190,"src":"5326:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5326:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5348:18:0","nodeType":"VariableDeclaration","scope":190,"src":"5340:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"5340:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5325:42:0"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"5383:0:0"},"scope":296,"src":"5304:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":217,"nodeType":"Block","src":"5747:174:0","statements":[{"assignments":[199],"declarations":[{"constant":false,"id":199,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5765:17:0","nodeType":"VariableDeclaration","scope":217,"src":"5757:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5757:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":203,"initialValue":{"arguments":[{"id":201,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5798:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":200,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"5785:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5785:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5757:46:0"},{"expression":{"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":204,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"5813:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":206,"indexExpression":{"id":205,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5820:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5813:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5826:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":21,"src":"5813:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":208,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5838:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5813:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":210,"nodeType":"ExpressionStatement","src":"5813:34:0"},{"eventCall":{"arguments":[{"id":212,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5879:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"5885:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":214,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5904:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":211,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5862:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5862:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":216,"nodeType":"EmitStatement","src":"5857:57:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"5555:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":218,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5683:13:0","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"role","nameLocation":"5705:4:0","nodeType":"VariableDeclaration","scope":218,"src":"5697:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5697:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"adminRole","nameLocation":"5719:9:0","nodeType":"VariableDeclaration","scope":218,"src":"5711:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5711:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5696:33:0"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"5747:0:0"},"scope":296,"src":"5674:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":256,"nodeType":"Block","src":"6238:233:0","statements":[{"condition":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6252:23:0","subExpression":{"arguments":[{"id":229,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6261:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":230,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6267:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":228,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"6253:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6253:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":254,"nodeType":"Block","src":"6428:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6449:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":227,"id":253,"nodeType":"Return","src":"6442:12:0"}]},"id":255,"nodeType":"IfStatement","src":"6248:217:0","trueBody":{"id":251,"nodeType":"Block","src":"6277:145:0","statements":[{"expression":{"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":233,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"6291:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":235,"indexExpression":{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6298:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6291:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6304:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6291:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":238,"indexExpression":{"id":237,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6312:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6291:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6323:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6291:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":241,"nodeType":"ExpressionStatement","src":"6291:36:0"},{"eventCall":{"arguments":[{"id":243,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6358:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":244,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6364:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":245,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"6373:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":242,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"6346:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":248,"nodeType":"EmitStatement","src":"6341:45:0"},{"expression":{"hexValue":"74727565","id":249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6407:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":227,"id":250,"nodeType":"Return","src":"6400:11:0"}]}}]},"documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"5927:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":257,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6164:10:0","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"role","nameLocation":"6183:4:0","nodeType":"VariableDeclaration","scope":257,"src":"6175:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6175:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"account","nameLocation":"6197:7:0","nodeType":"VariableDeclaration","scope":257,"src":"6189:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"6189:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6174:31:0"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":257,"src":"6232:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"6232:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6231:6:0"},"scope":296,"src":"6155:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":294,"nodeType":"Block","src":"6792:233:0","statements":[{"condition":{"arguments":[{"id":268,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6814:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":269,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6820:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":267,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"6806:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6806:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":292,"nodeType":"Block","src":"6982:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7003:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":266,"id":291,"nodeType":"Return","src":"6996:12:0"}]},"id":293,"nodeType":"IfStatement","src":"6802:217:0","trueBody":{"id":289,"nodeType":"Block","src":"6830:146:0","statements":[{"expression":{"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":271,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"6844:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":273,"indexExpression":{"id":272,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6851:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6844:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6857:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6844:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":276,"indexExpression":{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6865:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6844:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6876:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6844:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":279,"nodeType":"ExpressionStatement","src":"6844:37:0"},{"eventCall":{"arguments":[{"id":281,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6912:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":282,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6918:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":283,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"6927:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6927:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":280,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"6900:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6900:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":286,"nodeType":"EmitStatement","src":"6895:45:0"},{"expression":{"hexValue":"74727565","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6961:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":266,"id":288,"nodeType":"Return","src":"6954:11:0"}]}}]},"documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"6477:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":295,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6717:11:0","nodeType":"FunctionDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"role","nameLocation":"6737:4:0","nodeType":"VariableDeclaration","scope":295,"src":"6729:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6729:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":262,"mutability":"mutable","name":"account","nameLocation":"6751:7:0","nodeType":"VariableDeclaration","scope":295,"src":"6743:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"6743:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6728:31:0"},"returnParameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":295,"src":"6786:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":264,"name":"bool","nodeType":"ElementaryTypeName","src":"6786:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6785:6:0"},"scope":296,"src":"6708:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":297,"src":"1962:5065:0","usedErrors":[306,309],"usedEvents":[318,327,336]}],"src":"108:6920:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[379]},"id":380,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":298,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":379,"linearizedBaseContracts":[379],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":306,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":306,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":306,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":309,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":318,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":318,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":314,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":318,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":316,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":318,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":327,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":327,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":327,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":327,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":336,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":336,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":336,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":336,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":346,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":346,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":346,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":346,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":343,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":379,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":354,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":354,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":354,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":379,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":362,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":362,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":359,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":362,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":361,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":379,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":363,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":370,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":370,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":367,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":370,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":379,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":378,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":378,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":378,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":379,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":380,"src":"226:3116:1","usedErrors":[306,309],"usedEvents":[318,327,336]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1562],"Ownable":[527]},"id":528,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":381,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":383,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":528,"sourceUnit":1563,"src":"128:45:2","symbolAliases":[{"foreign":{"id":382,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"136:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":385,"name":"Context","nameLocations":["692:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":1562,"src":"692:7:2"},"id":386,"nodeType":"InheritanceSpecifier","src":"692:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"175:487:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":527,"linearizedBaseContracts":[527,1562],"name":"Ownable","nameLocation":"681:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":388,"mutability":"mutable","name":"_owner","nameLocation":"722:6:2","nodeType":"VariableDeclaration","scope":527,"src":"706:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"735:85:2","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":393,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:2","nodeType":"ErrorDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"account","nameLocation":"866:7:2","nodeType":"VariableDeclaration","scope":393,"src":"858:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":390,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:2"},"src":"825:50:2"},{"documentation":{"id":394,"nodeType":"StructuredDocumentation","src":"881:82:2","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":398,"name":"OwnableInvalidOwner","nameLocation":"974:19:2","nodeType":"ErrorDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":396,"mutability":"mutable","name":"owner","nameLocation":"1002:5:2","nodeType":"VariableDeclaration","scope":398,"src":"994:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:2"},"src":"968:41:2"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":404,"name":"OwnershipTransferred","nameLocation":"1021:20:2","nodeType":"EventDefinition","parameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:2","nodeType":"VariableDeclaration","scope":404,"src":"1042:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":402,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:2","nodeType":"VariableDeclaration","scope":404,"src":"1073:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":401,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:2"},"src":"1015:84:2"},{"body":{"id":429,"nodeType":"Block","src":"1259:153:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":410,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"1273:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:2","typeDescriptions":{}}},"id":414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":424,"nodeType":"IfStatement","src":"1269:95:2","trueBody":{"id":423,"nodeType":"Block","src":"1301:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:2","typeDescriptions":{}}},"id":420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":416,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"1322:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":422,"nodeType":"RevertStatement","src":"1315:38:2"}]}},{"expression":{"arguments":[{"id":426,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"1392:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":425,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"1373:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":428,"nodeType":"ExpressionStatement","src":"1373:32:2"}]},"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"1105:115:2","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":430,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":407,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:2","nodeType":"VariableDeclaration","scope":430,"src":"1237:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:2"},"returnParameters":{"id":409,"nodeType":"ParameterList","parameters":[],"src":"1259:0:2"},"scope":527,"src":"1225:187:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"1521:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"1531:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":435,"nodeType":"ExpressionStatement","src":"1531:13:2"},{"id":436,"nodeType":"PlaceholderStatement","src":"1554:1:2"}]},"documentation":{"id":431,"nodeType":"StructuredDocumentation","src":"1418:77:2","text":" @dev Throws if called by any account other than the owner."},"id":438,"name":"onlyOwner","nameLocation":"1509:9:2","nodeType":"ModifierDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[],"src":"1518:2:2"},"src":"1500:62:2","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"1693:30:2","statements":[{"expression":{"id":444,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"1710:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":443,"id":445,"nodeType":"Return","src":"1703:13:2"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"1568:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":447,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:2","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"1652:2:2"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":447,"src":"1684:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":441,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:2"},"scope":527,"src":"1638:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":463,"nodeType":"Block","src":"1841:117:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":451,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"1855:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":453,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"1866:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":462,"nodeType":"IfStatement","src":"1851:101:2","trueBody":{"id":461,"nodeType":"Block","src":"1880:72:2","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":457,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"1928:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":456,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"1901:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":460,"nodeType":"RevertStatement","src":"1894:47:2"}]}}]},"documentation":{"id":448,"nodeType":"StructuredDocumentation","src":"1729:62:2","text":" @dev Throws if the sender is not the owner."},"id":464,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:2","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[],"src":"1816:2:2"},"returnParameters":{"id":450,"nodeType":"ParameterList","parameters":[],"src":"1841:0:2"},"scope":527,"src":"1796:162:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":477,"nodeType":"Block","src":"2347:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:2","typeDescriptions":{}}},"id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":470,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"2357:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":476,"nodeType":"ExpressionStatement","src":"2357:30:2"}]},"documentation":{"id":465,"nodeType":"StructuredDocumentation","src":"1964:324:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":478,"implemented":true,"kind":"function","modifiers":[{"id":468,"kind":"modifierInvocation","modifierName":{"id":467,"name":"onlyOwner","nameLocations":["2337:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"2337:9:2"},"nodeType":"ModifierInvocation","src":"2337:9:2"}],"name":"renounceOwnership","nameLocation":"2302:17:2","nodeType":"FunctionDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[],"src":"2319:2:2"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[],"src":"2347:0:2"},"scope":527,"src":"2293:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":505,"nodeType":"Block","src":"2613:145:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":486,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"2627:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:2","typeDescriptions":{}}},"id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":500,"nodeType":"IfStatement","src":"2623:91:2","trueBody":{"id":499,"nodeType":"Block","src":"2651:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:2","typeDescriptions":{}}},"id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":492,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"2672:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":498,"nodeType":"RevertStatement","src":"2665:38:2"}]}},{"expression":{"arguments":[{"id":502,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"2742:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":501,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"2723:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"ExpressionStatement","src":"2723:28:2"}]},"documentation":{"id":479,"nodeType":"StructuredDocumentation","src":"2400:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":506,"implemented":true,"kind":"function","modifiers":[{"id":484,"kind":"modifierInvocation","modifierName":{"id":483,"name":"onlyOwner","nameLocations":["2603:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"2603:9:2"},"nodeType":"ModifierInvocation","src":"2603:9:2"}],"name":"transferOwnership","nameLocation":"2552:17:2","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:2","nodeType":"VariableDeclaration","scope":506,"src":"2570:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":480,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:2"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[],"src":"2613:0:2"},"scope":527,"src":"2543:215:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":525,"nodeType":"Block","src":"2975:124:2","statements":[{"assignments":[513],"declarations":[{"constant":false,"id":513,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:2","nodeType":"VariableDeclaration","scope":525,"src":"2985:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":515,"initialValue":{"id":514,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"3004:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:2"},{"expression":{"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":516,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"3020:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":517,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"3029:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":519,"nodeType":"ExpressionStatement","src":"3020:17:2"},{"eventCall":{"arguments":[{"id":521,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"3073:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":522,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":509,"src":"3083:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":520,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"3052:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"EmitStatement","src":"3047:45:2"}]},"documentation":{"id":507,"nodeType":"StructuredDocumentation","src":"2764:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":526,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:2","nodeType":"FunctionDefinition","parameters":{"id":510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":509,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:2","nodeType":"VariableDeclaration","scope":526,"src":"2940:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:2"},"returnParameters":{"id":511,"nodeType":"ParameterList","parameters":[],"src":"2975:0:2"},"scope":527,"src":"2912:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":528,"src":"663:2438:2","usedErrors":[393,398],"usedEvents":[404]}],"src":"102:3000:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[552]},"id":553,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":529,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"107:25:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":552,"linearizedBaseContracts":[552],"name":"IERC5267","nameLocation":"144:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"159:84:3","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":532,"name":"EIP712DomainChanged","nameLocation":"254:19:3","nodeType":"EventDefinition","parameters":{"id":531,"nodeType":"ParameterList","parameters":[],"src":"273:2:3"},"src":"248:28:3"},{"documentation":{"id":533,"nodeType":"StructuredDocumentation","src":"282:140:3","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":551,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"436:12:3","nodeType":"FunctionDefinition","parameters":{"id":534,"nodeType":"ParameterList","parameters":[],"src":"448:2:3"},"returnParameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"mutability":"mutable","name":"fields","nameLocation":"518:6:3","nodeType":"VariableDeclaration","scope":551,"src":"511:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":535,"name":"bytes1","nodeType":"ElementaryTypeName","src":"511:6:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":538,"mutability":"mutable","name":"name","nameLocation":"552:4:3","nodeType":"VariableDeclaration","scope":551,"src":"538:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":537,"name":"string","nodeType":"ElementaryTypeName","src":"538:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":540,"mutability":"mutable","name":"version","nameLocation":"584:7:3","nodeType":"VariableDeclaration","scope":551,"src":"570:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":539,"name":"string","nodeType":"ElementaryTypeName","src":"570:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":542,"mutability":"mutable","name":"chainId","nameLocation":"613:7:3","nodeType":"VariableDeclaration","scope":551,"src":"605:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":541,"name":"uint256","nodeType":"ElementaryTypeName","src":"605:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":544,"mutability":"mutable","name":"verifyingContract","nameLocation":"642:17:3","nodeType":"VariableDeclaration","scope":551,"src":"634:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":543,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":546,"mutability":"mutable","name":"salt","nameLocation":"681:4:3","nodeType":"VariableDeclaration","scope":551,"src":"673:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":545,"name":"bytes32","nodeType":"ElementaryTypeName","src":"673:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":549,"mutability":"mutable","name":"extensions","nameLocation":"716:10:3","nodeType":"VariableDeclaration","scope":551,"src":"699:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":547,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":548,"nodeType":"ArrayTypeName","src":"699:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"497:239:3"},"scope":552,"src":"427:310:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":553,"src":"134:605:3","usedErrors":[],"usedEvents":[532]}],"src":"107:633:3"},"id":3},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[689],"IERC20Errors":[594],"IERC721Errors":[642]},"id":690,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":554,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"138:141:4","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":594,"linearizedBaseContracts":[594],"name":"IERC20Errors","nameLocation":"290:12:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":556,"nodeType":"StructuredDocumentation","src":"309:309:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":564,"name":"ERC20InsufficientBalance","nameLocation":"629:24:4","nodeType":"ErrorDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":558,"mutability":"mutable","name":"sender","nameLocation":"662:6:4","nodeType":"VariableDeclaration","scope":564,"src":"654:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":557,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":560,"mutability":"mutable","name":"balance","nameLocation":"678:7:4","nodeType":"VariableDeclaration","scope":564,"src":"670:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":559,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"needed","nameLocation":"695:6:4","nodeType":"VariableDeclaration","scope":564,"src":"687:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:4"},"src":"623:80:4"},{"documentation":{"id":565,"nodeType":"StructuredDocumentation","src":"709:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":569,"name":"ERC20InvalidSender","nameLocation":"872:18:4","nodeType":"ErrorDefinition","parameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"sender","nameLocation":"899:6:4","nodeType":"VariableDeclaration","scope":569,"src":"891:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":566,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:4"},"src":"866:41:4"},{"documentation":{"id":570,"nodeType":"StructuredDocumentation","src":"913:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":574,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:4","nodeType":"ErrorDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":572,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:4","nodeType":"VariableDeclaration","scope":574,"src":"1104:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":571,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:4"},"src":"1077:45:4"},{"documentation":{"id":575,"nodeType":"StructuredDocumentation","src":"1128:345:4","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":583,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:4","nodeType":"ErrorDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"spender","nameLocation":"1519:7:4","nodeType":"VariableDeclaration","scope":583,"src":"1511:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:4","nodeType":"VariableDeclaration","scope":583,"src":"1528:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":578,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"needed","nameLocation":"1555:6:4","nodeType":"VariableDeclaration","scope":583,"src":"1547:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:4"},"src":"1478:85:4"},{"documentation":{"id":584,"nodeType":"StructuredDocumentation","src":"1569:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":588,"name":"ERC20InvalidApprover","nameLocation":"1754:20:4","nodeType":"ErrorDefinition","parameters":{"id":587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":586,"mutability":"mutable","name":"approver","nameLocation":"1783:8:4","nodeType":"VariableDeclaration","scope":588,"src":"1775:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":585,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:4"},"src":"1748:45:4"},{"documentation":{"id":589,"nodeType":"StructuredDocumentation","src":"1799:195:4","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":593,"name":"ERC20InvalidSpender","nameLocation":"2005:19:4","nodeType":"ErrorDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":591,"mutability":"mutable","name":"spender","nameLocation":"2033:7:4","nodeType":"VariableDeclaration","scope":593,"src":"2025:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":590,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:4"},"src":"1999:43:4"}],"scope":690,"src":"280:1764:4","usedErrors":[564,569,574,583,588,593],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"2046:143:4","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":642,"linearizedBaseContracts":[642],"name":"IERC721Errors","nameLocation":"2200:13:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"2220:219:4","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":600,"name":"ERC721InvalidOwner","nameLocation":"2450:18:4","nodeType":"ErrorDefinition","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"owner","nameLocation":"2477:5:4","nodeType":"VariableDeclaration","scope":600,"src":"2469:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":597,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:4"},"src":"2444:40:4"},{"documentation":{"id":601,"nodeType":"StructuredDocumentation","src":"2490:132:4","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":605,"name":"ERC721NonexistentToken","nameLocation":"2633:22:4","nodeType":"ErrorDefinition","parameters":{"id":604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:4","nodeType":"VariableDeclaration","scope":605,"src":"2656:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":602,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:4"},"src":"2627:46:4"},{"documentation":{"id":606,"nodeType":"StructuredDocumentation","src":"2679:289:4","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":614,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:4","nodeType":"ErrorDefinition","parameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"mutability":"mutable","name":"sender","nameLocation":"3008:6:4","nodeType":"VariableDeclaration","scope":614,"src":"3000:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":607,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":610,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:4","nodeType":"VariableDeclaration","scope":614,"src":"3016:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":609,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":612,"mutability":"mutable","name":"owner","nameLocation":"3041:5:4","nodeType":"VariableDeclaration","scope":614,"src":"3033:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":611,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:4"},"src":"2973:75:4"},{"documentation":{"id":615,"nodeType":"StructuredDocumentation","src":"3054:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":619,"name":"ERC721InvalidSender","nameLocation":"3217:19:4","nodeType":"ErrorDefinition","parameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":617,"mutability":"mutable","name":"sender","nameLocation":"3245:6:4","nodeType":"VariableDeclaration","scope":619,"src":"3237:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":616,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:4"},"src":"3211:42:4"},{"documentation":{"id":620,"nodeType":"StructuredDocumentation","src":"3259:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":624,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:4","nodeType":"ErrorDefinition","parameters":{"id":623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:4","nodeType":"VariableDeclaration","scope":624,"src":"3451:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:4"},"src":"3423:46:4"},{"documentation":{"id":625,"nodeType":"StructuredDocumentation","src":"3475:247:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":631,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:4","nodeType":"ErrorDefinition","parameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":627,"mutability":"mutable","name":"operator","nameLocation":"3768:8:4","nodeType":"VariableDeclaration","scope":631,"src":"3760:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":626,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":629,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:4","nodeType":"VariableDeclaration","scope":631,"src":"3778:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":628,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:4"},"src":"3727:68:4"},{"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"3801:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":636,"name":"ERC721InvalidApprover","nameLocation":"3986:21:4","nodeType":"ErrorDefinition","parameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"approver","nameLocation":"4016:8:4","nodeType":"VariableDeclaration","scope":636,"src":"4008:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":633,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:4"},"src":"3980:46:4"},{"documentation":{"id":637,"nodeType":"StructuredDocumentation","src":"4032:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":641,"name":"ERC721InvalidOperator","nameLocation":"4240:21:4","nodeType":"ErrorDefinition","parameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":639,"mutability":"mutable","name":"operator","nameLocation":"4270:8:4","nodeType":"VariableDeclaration","scope":641,"src":"4262:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":638,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:4"},"src":"4234:46:4"}],"scope":690,"src":"2190:2092:4","usedErrors":[600,605,614,619,624,631,636,641],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":643,"nodeType":"StructuredDocumentation","src":"4284:145:4","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":689,"linearizedBaseContracts":[689],"name":"IERC1155Errors","nameLocation":"4440:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"4461:361:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":654,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:4","nodeType":"ErrorDefinition","parameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"sender","nameLocation":"4868:6:4","nodeType":"VariableDeclaration","scope":654,"src":"4860:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":648,"mutability":"mutable","name":"balance","nameLocation":"4884:7:4","nodeType":"VariableDeclaration","scope":654,"src":"4876:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":647,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":650,"mutability":"mutable","name":"needed","nameLocation":"4901:6:4","nodeType":"VariableDeclaration","scope":654,"src":"4893:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":649,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":652,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:4","nodeType":"VariableDeclaration","scope":654,"src":"4909:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":651,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:4"},"src":"4827:99:4"},{"documentation":{"id":655,"nodeType":"StructuredDocumentation","src":"4932:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":659,"name":"ERC1155InvalidSender","nameLocation":"5095:20:4","nodeType":"ErrorDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"mutability":"mutable","name":"sender","nameLocation":"5124:6:4","nodeType":"VariableDeclaration","scope":659,"src":"5116:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:4"},"src":"5089:43:4"},{"documentation":{"id":660,"nodeType":"StructuredDocumentation","src":"5138:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":664,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:4","nodeType":"ErrorDefinition","parameters":{"id":663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:4","nodeType":"VariableDeclaration","scope":664,"src":"5331:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":661,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:4"},"src":"5302:47:4"},{"documentation":{"id":665,"nodeType":"StructuredDocumentation","src":"5355:256:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":671,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:4","nodeType":"ErrorDefinition","parameters":{"id":670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":667,"mutability":"mutable","name":"operator","nameLocation":"5659:8:4","nodeType":"VariableDeclaration","scope":671,"src":"5651:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":666,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":669,"mutability":"mutable","name":"owner","nameLocation":"5677:5:4","nodeType":"VariableDeclaration","scope":671,"src":"5669:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:4"},"src":"5616:68:4"},{"documentation":{"id":672,"nodeType":"StructuredDocumentation","src":"5690:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":676,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:4","nodeType":"ErrorDefinition","parameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"approver","nameLocation":"5906:8:4","nodeType":"VariableDeclaration","scope":676,"src":"5898:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:4"},"src":"5869:47:4"},{"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"5922:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":681,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:4","nodeType":"ErrorDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"operator","nameLocation":"6161:8:4","nodeType":"VariableDeclaration","scope":681,"src":"6153:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":678,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:4"},"src":"6124:47:4"},{"documentation":{"id":682,"nodeType":"StructuredDocumentation","src":"6177:280:4","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":688,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:4","nodeType":"ErrorDefinition","parameters":{"id":687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:4","nodeType":"VariableDeclaration","scope":688,"src":"6494:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":686,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:4","nodeType":"VariableDeclaration","scope":688,"src":"6513:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":685,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:4"},"src":"6462:73:4"}],"scope":690,"src":"4430:2107:4","usedErrors":[654,659,664,671,676,681,688],"usedEvents":[]}],"src":"112:6426:4"},"id":4},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1562],"ERC20":[1204],"IERC20":[1282],"IERC20Errors":[594],"IERC20Metadata":[1496]},"id":1205,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":691,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":693,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1205,"sourceUnit":1283,"src":"131:36:5","symbolAliases":[{"foreign":{"id":692,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"139:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":695,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1205,"sourceUnit":1497,"src":"168:63:5","symbolAliases":[{"foreign":{"id":694,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"176:14:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":697,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1205,"sourceUnit":1563,"src":"232:48:5","symbolAliases":[{"foreign":{"id":696,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"240:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":699,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1205,"sourceUnit":690,"src":"281:65:5","symbolAliases":[{"foreign":{"id":698,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"289:12:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":701,"name":"Context","nameLocations":["1133:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1562,"src":"1133:7:5"},"id":702,"nodeType":"InheritanceSpecifier","src":"1133:7:5"},{"baseName":{"id":703,"name":"IERC20","nameLocations":["1142:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":1282,"src":"1142:6:5"},"id":704,"nodeType":"InheritanceSpecifier","src":"1142:6:5"},{"baseName":{"id":705,"name":"IERC20Metadata","nameLocations":["1150:14:5"],"nodeType":"IdentifierPath","referencedDeclaration":1496,"src":"1150:14:5"},"id":706,"nodeType":"InheritanceSpecifier","src":"1150:14:5"},{"baseName":{"id":707,"name":"IERC20Errors","nameLocations":["1166:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":594,"src":"1166:12:5"},"id":708,"nodeType":"InheritanceSpecifier","src":"1166:12:5"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":700,"nodeType":"StructuredDocumentation","src":"348:757:5","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1204,"linearizedBaseContracts":[1204,594,1496,1282,1562],"name":"ERC20","nameLocation":"1124:5:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":712,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:5","nodeType":"VariableDeclaration","scope":1204,"src":"1185:53:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":711,"keyName":"account","keyNameLocation":"1201:7:5","keyType":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":710,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":718,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:5","nodeType":"VariableDeclaration","scope":1204,"src":"1245:83:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":717,"keyName":"account","keyNameLocation":"1261:7:5","keyType":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":716,"keyName":"spender","keyNameLocation":"1288:7:5","keyType":{"id":714,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":715,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":720,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:5","nodeType":"VariableDeclaration","scope":1204,"src":"1335:28:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":719,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":722,"mutability":"mutable","name":"_name","nameLocation":"1385:5:5","nodeType":"VariableDeclaration","scope":1204,"src":"1370:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":721,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":724,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:5","nodeType":"VariableDeclaration","scope":1204,"src":"1396:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":723,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":740,"nodeType":"Block","src":"1638:57:5","statements":[{"expression":{"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":732,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"1648:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":733,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"1656:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":735,"nodeType":"ExpressionStatement","src":"1648:13:5"},{"expression":{"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":736,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"1671:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":737,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"1681:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":739,"nodeType":"ExpressionStatement","src":"1671:17:5"}]},"documentation":{"id":725,"nodeType":"StructuredDocumentation","src":"1425:152:5","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":741,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"name_","nameLocation":"1608:5:5","nodeType":"VariableDeclaration","scope":741,"src":"1594:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":726,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":729,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:5","nodeType":"VariableDeclaration","scope":741,"src":"1615:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":728,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:5"},"returnParameters":{"id":731,"nodeType":"ParameterList","parameters":[],"src":"1638:0:5"},"scope":1204,"src":"1582:113:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1483],"body":{"id":749,"nodeType":"Block","src":"1820:29:5","statements":[{"expression":{"id":747,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"1837:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":746,"id":748,"nodeType":"Return","src":"1830:12:5"}]},"documentation":{"id":742,"nodeType":"StructuredDocumentation","src":"1701:54:5","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":750,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:5","nodeType":"FunctionDefinition","parameters":{"id":743,"nodeType":"ParameterList","parameters":[],"src":"1773:2:5"},"returnParameters":{"id":746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":750,"src":"1805:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":744,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:5"},"scope":1204,"src":"1760:89:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1489],"body":{"id":758,"nodeType":"Block","src":"2024:31:5","statements":[{"expression":{"id":756,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"2041:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":755,"id":757,"nodeType":"Return","src":"2034:14:5"}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"1855:102:5","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":759,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:5","nodeType":"FunctionDefinition","parameters":{"id":752,"nodeType":"ParameterList","parameters":[],"src":"1977:2:5"},"returnParameters":{"id":755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":759,"src":"2009:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":753,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:5"},"scope":1204,"src":"1962:93:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1495],"body":{"id":767,"nodeType":"Block","src":"2744:26:5","statements":[{"expression":{"hexValue":"3138","id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:5","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":764,"id":766,"nodeType":"Return","src":"2754:9:5"}]},"documentation":{"id":760,"nodeType":"StructuredDocumentation","src":"2061:622:5","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":768,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:5","nodeType":"FunctionDefinition","parameters":{"id":761,"nodeType":"ParameterList","parameters":[],"src":"2705:2:5"},"returnParameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":768,"src":"2737:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":762,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:5"},"scope":1204,"src":"2688:82:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1231],"body":{"id":776,"nodeType":"Block","src":"2864:36:5","statements":[{"expression":{"id":774,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"2881:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":773,"id":775,"nodeType":"Return","src":"2874:19:5"}]},"documentation":{"id":769,"nodeType":"StructuredDocumentation","src":"2776:22:5","text":"@inheritdoc IERC20"},"functionSelector":"18160ddd","id":777,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2812:11:5","nodeType":"FunctionDefinition","parameters":{"id":770,"nodeType":"ParameterList","parameters":[],"src":"2823:2:5"},"returnParameters":{"id":773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":777,"src":"2855:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":771,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:9:5"},"scope":1204,"src":"2803:97:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1239],"body":{"id":789,"nodeType":"Block","src":"3007:42:5","statements":[{"expression":{"baseExpression":{"id":785,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"3024:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":787,"indexExpression":{"id":786,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"3034:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3024:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":784,"id":788,"nodeType":"Return","src":"3017:25:5"}]},"documentation":{"id":778,"nodeType":"StructuredDocumentation","src":"2906:22:5","text":"@inheritdoc IERC20"},"functionSelector":"70a08231","id":790,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2942:9:5","nodeType":"FunctionDefinition","parameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"mutability":"mutable","name":"account","nameLocation":"2960:7:5","nodeType":"VariableDeclaration","scope":790,"src":"2952:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"2952:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2951:17:5"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":790,"src":"2998:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":782,"name":"uint256","nodeType":"ElementaryTypeName","src":"2998:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2997:9:5"},"scope":1204,"src":"2933:116:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1249],"body":{"id":813,"nodeType":"Block","src":"3319:103:5","statements":[{"assignments":[801],"declarations":[{"constant":false,"id":801,"mutability":"mutable","name":"owner","nameLocation":"3337:5:5","nodeType":"VariableDeclaration","scope":813,"src":"3329:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"3329:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":804,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":802,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"3345:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3345:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3329:28:5"},{"expression":{"arguments":[{"id":806,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"3377:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":807,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":793,"src":"3384:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"3388:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":805,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"3367:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3367:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":810,"nodeType":"ExpressionStatement","src":"3367:27:5"},{"expression":{"hexValue":"74727565","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3411:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":799,"id":812,"nodeType":"Return","src":"3404:11:5"}]},"documentation":{"id":791,"nodeType":"StructuredDocumentation","src":"3055:184:5","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":814,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3253:8:5","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":793,"mutability":"mutable","name":"to","nameLocation":"3270:2:5","nodeType":"VariableDeclaration","scope":814,"src":"3262:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":792,"name":"address","nodeType":"ElementaryTypeName","src":"3262:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":795,"mutability":"mutable","name":"value","nameLocation":"3282:5:5","nodeType":"VariableDeclaration","scope":814,"src":"3274:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":794,"name":"uint256","nodeType":"ElementaryTypeName","src":"3274:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3261:27:5"},"returnParameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":814,"src":"3313:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":797,"name":"bool","nodeType":"ElementaryTypeName","src":"3313:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3312:6:5"},"scope":1204,"src":"3244:178:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1259],"body":{"id":830,"nodeType":"Block","src":"3544:51:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":824,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"3561:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":826,"indexExpression":{"id":825,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":817,"src":"3573:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":828,"indexExpression":{"id":827,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"3580:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":823,"id":829,"nodeType":"Return","src":"3554:34:5"}]},"documentation":{"id":815,"nodeType":"StructuredDocumentation","src":"3428:22:5","text":"@inheritdoc IERC20"},"functionSelector":"dd62ed3e","id":831,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3464:9:5","nodeType":"FunctionDefinition","parameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":817,"mutability":"mutable","name":"owner","nameLocation":"3482:5:5","nodeType":"VariableDeclaration","scope":831,"src":"3474:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":816,"name":"address","nodeType":"ElementaryTypeName","src":"3474:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":819,"mutability":"mutable","name":"spender","nameLocation":"3497:7:5","nodeType":"VariableDeclaration","scope":831,"src":"3489:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"3489:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3473:32:5"},"returnParameters":{"id":823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":831,"src":"3535:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":821,"name":"uint256","nodeType":"ElementaryTypeName","src":"3535:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3534:9:5"},"scope":1204,"src":"3455:140:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1269],"body":{"id":854,"nodeType":"Block","src":"3981:107:5","statements":[{"assignments":[842],"declarations":[{"constant":false,"id":842,"mutability":"mutable","name":"owner","nameLocation":"3999:5:5","nodeType":"VariableDeclaration","scope":854,"src":"3991:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"3991:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":845,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":843,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"4007:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3991:28:5"},{"expression":{"arguments":[{"id":847,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":842,"src":"4038:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":848,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"4045:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"4054:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":846,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1095,1155],"referencedDeclaration":1095,"src":"4029:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4029:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":851,"nodeType":"ExpressionStatement","src":"4029:31:5"},{"expression":{"hexValue":"74727565","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4077:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":840,"id":853,"nodeType":"Return","src":"4070:11:5"}]},"documentation":{"id":832,"nodeType":"StructuredDocumentation","src":"3601:296:5","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":855,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3911:7:5","nodeType":"FunctionDefinition","parameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":834,"mutability":"mutable","name":"spender","nameLocation":"3927:7:5","nodeType":"VariableDeclaration","scope":855,"src":"3919:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":833,"name":"address","nodeType":"ElementaryTypeName","src":"3919:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":836,"mutability":"mutable","name":"value","nameLocation":"3944:5:5","nodeType":"VariableDeclaration","scope":855,"src":"3936:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":835,"name":"uint256","nodeType":"ElementaryTypeName","src":"3936:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3918:32:5"},"returnParameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":855,"src":"3975:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":838,"name":"bool","nodeType":"ElementaryTypeName","src":"3975:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3974:6:5"},"scope":1204,"src":"3902:186:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1281],"body":{"id":886,"nodeType":"Block","src":"4773:151:5","statements":[{"assignments":[868],"declarations":[{"constant":false,"id":868,"mutability":"mutable","name":"spender","nameLocation":"4791:7:5","nodeType":"VariableDeclaration","scope":886,"src":"4783:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"4783:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":871,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":869,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"4801:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4801:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4783:30:5"},{"expression":{"arguments":[{"id":873,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"4839:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":874,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"4845:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"4854:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":872,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"4823:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":877,"nodeType":"ExpressionStatement","src":"4823:37:5"},{"expression":{"arguments":[{"id":879,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"4880:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":880,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"4886:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"4890:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":878,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"4870:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4870:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":883,"nodeType":"ExpressionStatement","src":"4870:26:5"},{"expression":{"hexValue":"74727565","id":884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4913:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":866,"id":885,"nodeType":"Return","src":"4906:11:5"}]},"documentation":{"id":856,"nodeType":"StructuredDocumentation","src":"4094:581:5","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":887,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4689:12:5","nodeType":"FunctionDefinition","parameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"from","nameLocation":"4710:4:5","nodeType":"VariableDeclaration","scope":887,"src":"4702:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":857,"name":"address","nodeType":"ElementaryTypeName","src":"4702:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":860,"mutability":"mutable","name":"to","nameLocation":"4724:2:5","nodeType":"VariableDeclaration","scope":887,"src":"4716:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":859,"name":"address","nodeType":"ElementaryTypeName","src":"4716:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":862,"mutability":"mutable","name":"value","nameLocation":"4736:5:5","nodeType":"VariableDeclaration","scope":887,"src":"4728:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":861,"name":"uint256","nodeType":"ElementaryTypeName","src":"4728:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:41:5"},"returnParameters":{"id":866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":887,"src":"4767:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":864,"name":"bool","nodeType":"ElementaryTypeName","src":"4767:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4766:6:5"},"scope":1204,"src":"4680:244:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":933,"nodeType":"Block","src":"5366:231:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":897,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"5380:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5396:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5388:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:5","typeDescriptions":{}}},"id":901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5388:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5380:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":911,"nodeType":"IfStatement","src":"5376:86:5","trueBody":{"id":910,"nodeType":"Block","src":"5400:62:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5448:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5440:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":904,"name":"address","nodeType":"ElementaryTypeName","src":"5440:7:5","typeDescriptions":{}}},"id":907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5440:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":903,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"5421:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5421:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":909,"nodeType":"RevertStatement","src":"5414:37:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":912,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"5475:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5489:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5481:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"5481:7:5","typeDescriptions":{}}},"id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5481:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5475:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":926,"nodeType":"IfStatement","src":"5471:86:5","trueBody":{"id":925,"nodeType":"Block","src":"5493:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5543:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5535:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"5535:7:5","typeDescriptions":{}}},"id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":918,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"5514:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5514:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":924,"nodeType":"RevertStatement","src":"5507:39:5"}]}},{"expression":{"arguments":[{"id":928,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"5574:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":929,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"5580:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"5584:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":927,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"5566:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5566:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":932,"nodeType":"ExpressionStatement","src":"5566:24:5"}]},"documentation":{"id":888,"nodeType":"StructuredDocumentation","src":"4930:362:5","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":934,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5306:9:5","nodeType":"FunctionDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":890,"mutability":"mutable","name":"from","nameLocation":"5324:4:5","nodeType":"VariableDeclaration","scope":934,"src":"5316:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":889,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":892,"mutability":"mutable","name":"to","nameLocation":"5338:2:5","nodeType":"VariableDeclaration","scope":934,"src":"5330:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":891,"name":"address","nodeType":"ElementaryTypeName","src":"5330:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":894,"mutability":"mutable","name":"value","nameLocation":"5350:5:5","nodeType":"VariableDeclaration","scope":934,"src":"5342:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":893,"name":"uint256","nodeType":"ElementaryTypeName","src":"5342:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5315:41:5"},"returnParameters":{"id":896,"nodeType":"ParameterList","parameters":[],"src":"5366:0:5"},"scope":1204,"src":"5297:300:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1010,"nodeType":"Block","src":"5987:1032:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":944,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"6001:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6017:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6009:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":945,"name":"address","nodeType":"ElementaryTypeName","src":"6009:7:5","typeDescriptions":{}}},"id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6009:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6001:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":981,"nodeType":"Block","src":"6175:362:5","statements":[{"assignments":[956],"declarations":[{"constant":false,"id":956,"mutability":"mutable","name":"fromBalance","nameLocation":"6197:11:5","nodeType":"VariableDeclaration","scope":981,"src":"6189:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":955,"name":"uint256","nodeType":"ElementaryTypeName","src":"6189:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":960,"initialValue":{"baseExpression":{"id":957,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6211:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":959,"indexExpression":{"id":958,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"6221:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6211:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6189:37:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":961,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"6244:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"6258:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6244:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":971,"nodeType":"IfStatement","src":"6240:115:5","trueBody":{"id":970,"nodeType":"Block","src":"6265:90:5","statements":[{"errorCall":{"arguments":[{"id":965,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"6315:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":966,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"6321:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"6334:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":964,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"6290:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6290:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":969,"nodeType":"RevertStatement","src":"6283:57:5"}]}},{"id":980,"nodeType":"UncheckedBlock","src":"6368:159:5","statements":[{"expression":{"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":972,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6475:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":974,"indexExpression":{"id":973,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"6485:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6475:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":975,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":956,"src":"6493:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"6507:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6493:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":979,"nodeType":"ExpressionStatement","src":"6475:37:5"}]}]},"id":982,"nodeType":"IfStatement","src":"5997:540:5","trueBody":{"id":954,"nodeType":"Block","src":"6021:148:5","statements":[{"expression":{"id":952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":950,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"6137:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"6153:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6137:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":953,"nodeType":"ExpressionStatement","src":"6137:21:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":983,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"6551:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6565:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6557:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"6557:7:5","typeDescriptions":{}}},"id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6557:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6551:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1002,"nodeType":"Block","src":"6766:206:5","statements":[{"id":1001,"nodeType":"UncheckedBlock","src":"6780:182:5","statements":[{"expression":{"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":995,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6925:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":997,"indexExpression":{"id":996,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"6935:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6925:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"6942:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6925:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1000,"nodeType":"ExpressionStatement","src":"6925:22:5"}]}]},"id":1003,"nodeType":"IfStatement","src":"6547:425:5","trueBody":{"id":994,"nodeType":"Block","src":"6569:191:5","statements":[{"id":993,"nodeType":"UncheckedBlock","src":"6583:167:5","statements":[{"expression":{"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":989,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":720,"src":"6714:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"6730:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6714:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":992,"nodeType":"ExpressionStatement","src":"6714:21:5"}]}]}},{"eventCall":{"arguments":[{"id":1005,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"6996:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1006,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"7002:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":941,"src":"7006:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1004,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"6987:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6987:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1009,"nodeType":"EmitStatement","src":"6982:30:5"}]},"documentation":{"id":935,"nodeType":"StructuredDocumentation","src":"5603:304:5","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1011,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5921:7:5","nodeType":"FunctionDefinition","parameters":{"id":942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"from","nameLocation":"5937:4:5","nodeType":"VariableDeclaration","scope":1011,"src":"5929:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":936,"name":"address","nodeType":"ElementaryTypeName","src":"5929:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":939,"mutability":"mutable","name":"to","nameLocation":"5951:2:5","nodeType":"VariableDeclaration","scope":1011,"src":"5943:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"5943:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":941,"mutability":"mutable","name":"value","nameLocation":"5963:5:5","nodeType":"VariableDeclaration","scope":1011,"src":"5955:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":940,"name":"uint256","nodeType":"ElementaryTypeName","src":"5955:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5928:41:5"},"returnParameters":{"id":943,"nodeType":"ParameterList","parameters":[],"src":"5987:0:5"},"scope":1204,"src":"5912:1107:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1043,"nodeType":"Block","src":"7418:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1019,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"7432:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7451:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7443:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"7443:7:5","typeDescriptions":{}}},"id":1023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7443:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7432:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1033,"nodeType":"IfStatement","src":"7428:91:5","trueBody":{"id":1032,"nodeType":"Block","src":"7455:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7505:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1027,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7497:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"7497:7:5","typeDescriptions":{}}},"id":1029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7497:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1025,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"7476:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7476:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1031,"nodeType":"RevertStatement","src":"7469:39:5"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7544:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7536:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"7536:7:5","typeDescriptions":{}}},"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7536:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1039,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"7548:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"7557:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1034,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"7528:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7528:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1042,"nodeType":"ExpressionStatement","src":"7528:35:5"}]},"documentation":{"id":1012,"nodeType":"StructuredDocumentation","src":"7025:332:5","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1044,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7371:5:5","nodeType":"FunctionDefinition","parameters":{"id":1017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1014,"mutability":"mutable","name":"account","nameLocation":"7385:7:5","nodeType":"VariableDeclaration","scope":1044,"src":"7377:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1013,"name":"address","nodeType":"ElementaryTypeName","src":"7377:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1016,"mutability":"mutable","name":"value","nameLocation":"7402:5:5","nodeType":"VariableDeclaration","scope":1044,"src":"7394:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1015,"name":"uint256","nodeType":"ElementaryTypeName","src":"7394:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7376:32:5"},"returnParameters":{"id":1018,"nodeType":"ParameterList","parameters":[],"src":"7418:0:5"},"scope":1204,"src":"7362:208:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1076,"nodeType":"Block","src":"7944:150:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1052,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"7958:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7977:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7969:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1053,"name":"address","nodeType":"ElementaryTypeName","src":"7969:7:5","typeDescriptions":{}}},"id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7969:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7958:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1066,"nodeType":"IfStatement","src":"7954:89:5","trueBody":{"id":1065,"nodeType":"Block","src":"7981:62:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8029:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8021:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1059,"name":"address","nodeType":"ElementaryTypeName","src":"8021:7:5","typeDescriptions":{}}},"id":1062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1058,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"8002:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8002:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1064,"nodeType":"RevertStatement","src":"7995:37:5"}]}},{"expression":{"arguments":[{"id":1068,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"8060:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8077:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8069:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1069,"name":"address","nodeType":"ElementaryTypeName","src":"8069:7:5","typeDescriptions":{}}},"id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"8081:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1067,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"8052:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1075,"nodeType":"ExpressionStatement","src":"8052:35:5"}]},"documentation":{"id":1045,"nodeType":"StructuredDocumentation","src":"7576:307:5","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1077,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7897:5:5","nodeType":"FunctionDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"mutability":"mutable","name":"account","nameLocation":"7911:7:5","nodeType":"VariableDeclaration","scope":1077,"src":"7903:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1046,"name":"address","nodeType":"ElementaryTypeName","src":"7903:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"value","nameLocation":"7928:5:5","nodeType":"VariableDeclaration","scope":1077,"src":"7920:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"7920:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7902:32:5"},"returnParameters":{"id":1051,"nodeType":"ParameterList","parameters":[],"src":"7944:0:5"},"scope":1204,"src":"7888:206:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1094,"nodeType":"Block","src":"8704:54:5","statements":[{"expression":{"arguments":[{"id":1088,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"8723:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1089,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"8730:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"8739:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8746:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1087,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1095,1155],"referencedDeclaration":1155,"src":"8714:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8714:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1093,"nodeType":"ExpressionStatement","src":"8714:37:5"}]},"documentation":{"id":1078,"nodeType":"StructuredDocumentation","src":"8100:525:5","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1095,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8639:8:5","nodeType":"FunctionDefinition","parameters":{"id":1085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"owner","nameLocation":"8656:5:5","nodeType":"VariableDeclaration","scope":1095,"src":"8648:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1079,"name":"address","nodeType":"ElementaryTypeName","src":"8648:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"spender","nameLocation":"8671:7:5","nodeType":"VariableDeclaration","scope":1095,"src":"8663:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1081,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"value","nameLocation":"8688:5:5","nodeType":"VariableDeclaration","scope":1095,"src":"8680:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1083,"name":"uint256","nodeType":"ElementaryTypeName","src":"8680:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8647:47:5"},"returnParameters":{"id":1086,"nodeType":"ParameterList","parameters":[],"src":"8704:0:5"},"scope":1204,"src":"8630:128:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1154,"nodeType":"Block","src":"9703:334:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1107,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"9717:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9734:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9726:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1108,"name":"address","nodeType":"ElementaryTypeName","src":"9726:7:5","typeDescriptions":{}}},"id":1111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9726:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9717:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1121,"nodeType":"IfStatement","src":"9713:89:5","trueBody":{"id":1120,"nodeType":"Block","src":"9738:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9788:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"9780:7:5","typeDescriptions":{}}},"id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9780:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1113,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":588,"src":"9759:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9759:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1119,"nodeType":"RevertStatement","src":"9752:39:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1122,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"9815:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9834:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9826:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"9826:7:5","typeDescriptions":{}}},"id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9826:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9815:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1136,"nodeType":"IfStatement","src":"9811:90:5","trueBody":{"id":1135,"nodeType":"Block","src":"9838:63:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9887:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9879:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1129,"name":"address","nodeType":"ElementaryTypeName","src":"9879:7:5","typeDescriptions":{}}},"id":1132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9879:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1128,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"9859:19:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9859:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1134,"nodeType":"RevertStatement","src":"9852:38:5"}]}},{"expression":{"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1137,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"9910:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1140,"indexExpression":{"id":1138,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"9922:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9910:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1141,"indexExpression":{"id":1139,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"9929:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9910:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"9940:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9910:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1144,"nodeType":"ExpressionStatement","src":"9910:35:5"},{"condition":{"id":1145,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"9959:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1153,"nodeType":"IfStatement","src":"9955:76:5","trueBody":{"id":1152,"nodeType":"Block","src":"9970:61:5","statements":[{"eventCall":{"arguments":[{"id":1147,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1098,"src":"9998:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1148,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"10005:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"10014:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1146,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"9989:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9989:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1151,"nodeType":"EmitStatement","src":"9984:36:5"}]}}]},"documentation":{"id":1096,"nodeType":"StructuredDocumentation","src":"8764:836:5","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1155,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9614:8:5","nodeType":"FunctionDefinition","parameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1098,"mutability":"mutable","name":"owner","nameLocation":"9631:5:5","nodeType":"VariableDeclaration","scope":1155,"src":"9623:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"9623:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1100,"mutability":"mutable","name":"spender","nameLocation":"9646:7:5","nodeType":"VariableDeclaration","scope":1155,"src":"9638:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1099,"name":"address","nodeType":"ElementaryTypeName","src":"9638:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1102,"mutability":"mutable","name":"value","nameLocation":"9663:5:5","nodeType":"VariableDeclaration","scope":1155,"src":"9655:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1101,"name":"uint256","nodeType":"ElementaryTypeName","src":"9655:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1104,"mutability":"mutable","name":"emitEvent","nameLocation":"9675:9:5","nodeType":"VariableDeclaration","scope":1155,"src":"9670:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1103,"name":"bool","nodeType":"ElementaryTypeName","src":"9670:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9622:63:5"},"returnParameters":{"id":1106,"nodeType":"ParameterList","parameters":[],"src":"9703:0:5"},"scope":1204,"src":"9605:432:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1202,"nodeType":"Block","src":"10408:387:5","statements":[{"assignments":[1166],"declarations":[{"constant":false,"id":1166,"mutability":"mutable","name":"currentAllowance","nameLocation":"10426:16:5","nodeType":"VariableDeclaration","scope":1202,"src":"10418:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1165,"name":"uint256","nodeType":"ElementaryTypeName","src":"10418:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1171,"initialValue":{"arguments":[{"id":1168,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"10455:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1169,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"10462:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1167,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"10445:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10445:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10418:52:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1172,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"10484:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":1175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10508:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1174,"name":"uint256","nodeType":"ElementaryTypeName","src":"10508:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1173,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10503:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10503:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10517:3:5","memberName":"max","nodeType":"MemberAccess","src":"10503:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10484:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1201,"nodeType":"IfStatement","src":"10480:309:5","trueBody":{"id":1200,"nodeType":"Block","src":"10522:267:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1179,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"10540:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"10559:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10540:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1189,"nodeType":"IfStatement","src":"10536:130:5","trueBody":{"id":1188,"nodeType":"Block","src":"10566:100:5","statements":[{"errorCall":{"arguments":[{"id":1183,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"10618:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1184,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"10627:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"10645:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1182,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"10591:26:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10591:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1187,"nodeType":"RevertStatement","src":"10584:67:5"}]}},{"id":1199,"nodeType":"UncheckedBlock","src":"10679:100:5","statements":[{"expression":{"arguments":[{"id":1191,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"10716:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1192,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"10723:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1193,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"10732:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"10751:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10732:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10758:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1190,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1095,1155],"referencedDeclaration":1155,"src":"10707:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10707:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1198,"nodeType":"ExpressionStatement","src":"10707:57:5"}]}]}}]},"documentation":{"id":1156,"nodeType":"StructuredDocumentation","src":"10043:271:5","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1203,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10328:15:5","nodeType":"FunctionDefinition","parameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1158,"mutability":"mutable","name":"owner","nameLocation":"10352:5:5","nodeType":"VariableDeclaration","scope":1203,"src":"10344:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1157,"name":"address","nodeType":"ElementaryTypeName","src":"10344:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1160,"mutability":"mutable","name":"spender","nameLocation":"10367:7:5","nodeType":"VariableDeclaration","scope":1203,"src":"10359:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"10359:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1162,"mutability":"mutable","name":"value","nameLocation":"10384:5:5","nodeType":"VariableDeclaration","scope":1203,"src":"10376:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1161,"name":"uint256","nodeType":"ElementaryTypeName","src":"10376:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10343:47:5"},"returnParameters":{"id":1164,"nodeType":"ParameterList","parameters":[],"src":"10408:0:5"},"scope":1204,"src":"10319:476:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1205,"src":"1106:9691:5","usedErrors":[564,569,574,583,588,593],"usedEvents":[1216,1225]}],"src":"105:10693:5"},"id":5},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1282]},"id":1283,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1206,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"133:71:6","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1282,"linearizedBaseContracts":[1282],"name":"IERC20","nameLocation":"215:6:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1208,"nodeType":"StructuredDocumentation","src":"228:158:6","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1216,"name":"Transfer","nameLocation":"397:8:6","nodeType":"EventDefinition","parameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:6","nodeType":"VariableDeclaration","scope":1216,"src":"406:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1209,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1212,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:6","nodeType":"VariableDeclaration","scope":1216,"src":"428:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1211,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1214,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:6","nodeType":"VariableDeclaration","scope":1216,"src":"448:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1213,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:6"},"src":"391:72:6"},{"anonymous":false,"documentation":{"id":1217,"nodeType":"StructuredDocumentation","src":"469:148:6","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1225,"name":"Approval","nameLocation":"628:8:6","nodeType":"EventDefinition","parameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1219,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:6","nodeType":"VariableDeclaration","scope":1225,"src":"637:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1218,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1221,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:6","nodeType":"VariableDeclaration","scope":1225,"src":"660:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1220,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1223,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:6","nodeType":"VariableDeclaration","scope":1225,"src":"685:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1222,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:6"},"src":"622:78:6"},{"documentation":{"id":1226,"nodeType":"StructuredDocumentation","src":"706:65:6","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1231,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:6","nodeType":"FunctionDefinition","parameters":{"id":1227,"nodeType":"ParameterList","parameters":[],"src":"796:2:6"},"returnParameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1231,"src":"822:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1228,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:6"},"scope":1282,"src":"776:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1232,"nodeType":"StructuredDocumentation","src":"837:71:6","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1239,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:6","nodeType":"FunctionDefinition","parameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1234,"mutability":"mutable","name":"account","nameLocation":"940:7:6","nodeType":"VariableDeclaration","scope":1239,"src":"932:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1233,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:6"},"returnParameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1239,"src":"972:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:6"},"scope":1282,"src":"913:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1240,"nodeType":"StructuredDocumentation","src":"987:213:6","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1249,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:6","nodeType":"FunctionDefinition","parameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1242,"mutability":"mutable","name":"to","nameLocation":"1231:2:6","nodeType":"VariableDeclaration","scope":1249,"src":"1223:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1241,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1244,"mutability":"mutable","name":"value","nameLocation":"1243:5:6","nodeType":"VariableDeclaration","scope":1249,"src":"1235:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1243,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:6"},"returnParameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1249,"src":"1268:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1246,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:6"},"scope":1282,"src":"1205:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1250,"nodeType":"StructuredDocumentation","src":"1280:264:6","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1259,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:6","nodeType":"FunctionDefinition","parameters":{"id":1255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1252,"mutability":"mutable","name":"owner","nameLocation":"1576:5:6","nodeType":"VariableDeclaration","scope":1259,"src":"1568:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1251,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1254,"mutability":"mutable","name":"spender","nameLocation":"1591:7:6","nodeType":"VariableDeclaration","scope":1259,"src":"1583:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1253,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:6"},"returnParameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1259,"src":"1623:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1256,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:6"},"scope":1282,"src":"1549:83:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1260,"nodeType":"StructuredDocumentation","src":"1638:667:6","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1269,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:6","nodeType":"FunctionDefinition","parameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"spender","nameLocation":"2335:7:6","nodeType":"VariableDeclaration","scope":1269,"src":"2327:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1261,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1264,"mutability":"mutable","name":"value","nameLocation":"2352:5:6","nodeType":"VariableDeclaration","scope":1269,"src":"2344:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1263,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:6"},"returnParameters":{"id":1268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1269,"src":"2377:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1266,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:6"},"scope":1282,"src":"2310:73:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1270,"nodeType":"StructuredDocumentation","src":"2389:297:6","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1281,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:6","nodeType":"FunctionDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"from","nameLocation":"2721:4:6","nodeType":"VariableDeclaration","scope":1281,"src":"2713:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1271,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1274,"mutability":"mutable","name":"to","nameLocation":"2735:2:6","nodeType":"VariableDeclaration","scope":1281,"src":"2727:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1273,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1276,"mutability":"mutable","name":"value","nameLocation":"2747:5:6","nodeType":"VariableDeclaration","scope":1281,"src":"2739:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1275,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:6"},"returnParameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1281,"src":"2772:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1278,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:6"},"scope":1282,"src":"2691:87:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1283,"src":"205:2575:6","usedErrors":[],"usedEvents":[1216,1225]}],"src":"106:2675:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","exportedSymbols":{"ERC20":[1204],"ERC20Pausable":[1316],"Pausable":[1790]},"id":1317,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1284,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"124:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1286,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1317,"sourceUnit":1205,"src":"150:35:7","symbolAliases":[{"foreign":{"id":1285,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"158:5:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"../../../utils/Pausable.sol","id":1288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1317,"sourceUnit":1791,"src":"186:53:7","symbolAliases":[{"foreign":{"id":1287,"name":"Pausable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1790,"src":"194:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1290,"name":"ERC20","nameLocations":["965:5:7"],"nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"965:5:7"},"id":1291,"nodeType":"InheritanceSpecifier","src":"965:5:7"},{"baseName":{"id":1292,"name":"Pausable","nameLocations":["972:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1790,"src":"972:8:7"},"id":1293,"nodeType":"InheritanceSpecifier","src":"972:8:7"}],"canonicalName":"ERC20Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1289,"nodeType":"StructuredDocumentation","src":"241:688:7","text":" @dev ERC-20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."},"fullyImplemented":true,"id":1316,"linearizedBaseContracts":[1316,1790,1204,594,1496,1282,1562],"name":"ERC20Pausable","nameLocation":"948:13:7","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1011],"body":{"id":1314,"nodeType":"Block","src":"1211:47:7","statements":[{"expression":{"arguments":[{"id":1309,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"1235:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1310,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1298,"src":"1241:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"1245:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1306,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1221:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Pausable_$1316_$","typeString":"type(contract super ERC20Pausable)"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1227:7:7","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1011,"src":"1221:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1221:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1313,"nodeType":"ExpressionStatement","src":"1221:30:7"}]},"documentation":{"id":1294,"nodeType":"StructuredDocumentation","src":"987:121:7","text":" @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."},"id":1315,"implemented":true,"kind":"function","modifiers":[{"id":1304,"kind":"modifierInvocation","modifierName":{"id":1303,"name":"whenNotPaused","nameLocations":["1197:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":1715,"src":"1197:13:7"},"nodeType":"ModifierInvocation","src":"1197:13:7"}],"name":"_update","nameLocation":"1122:7:7","nodeType":"FunctionDefinition","overrides":{"id":1302,"nodeType":"OverrideSpecifier","overrides":[],"src":"1188:8:7"},"parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1296,"mutability":"mutable","name":"from","nameLocation":"1138:4:7","nodeType":"VariableDeclaration","scope":1315,"src":"1130:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1295,"name":"address","nodeType":"ElementaryTypeName","src":"1130:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"to","nameLocation":"1152:2:7","nodeType":"VariableDeclaration","scope":1315,"src":"1144:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"1144:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"value","nameLocation":"1164:5:7","nodeType":"VariableDeclaration","scope":1315,"src":"1156:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1129:41:7"},"returnParameters":{"id":1305,"nodeType":"ParameterList","parameters":[],"src":"1211:0:7"},"scope":1316,"src":"1113:145:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1317,"src":"930:330:7","usedErrors":[564,569,574,583,588,593,1704,1707],"usedEvents":[1216,1225,1696,1701]}],"src":"124:1137:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","exportedSymbols":{"ECDSA":[3950],"EIP712":[4177],"ERC20":[1204],"ERC20Permit":[1470],"IERC20Permit":[1532],"Nonces":[1630]},"id":1471,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1318,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"122:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","file":"./IERC20Permit.sol","id":1320,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1471,"sourceUnit":1533,"src":"148:48:8","symbolAliases":[{"foreign":{"id":1319,"name":"IERC20Permit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1532,"src":"156:12:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1322,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1471,"sourceUnit":1205,"src":"197:35:8","symbolAliases":[{"foreign":{"id":1321,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"205:5:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1324,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1471,"sourceUnit":3951,"src":"233:60:8","symbolAliases":[{"foreign":{"id":1323,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"241:5:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"../../../utils/cryptography/EIP712.sol","id":1326,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1471,"sourceUnit":4178,"src":"294:62:8","symbolAliases":[{"foreign":{"id":1325,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"302:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","file":"../../../utils/Nonces.sol","id":1328,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1471,"sourceUnit":1631,"src":"357:49:8","symbolAliases":[{"foreign":{"id":1327,"name":"Nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"365:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1330,"name":"ERC20","nameLocations":["931:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"931:5:8"},"id":1331,"nodeType":"InheritanceSpecifier","src":"931:5:8"},{"baseName":{"id":1332,"name":"IERC20Permit","nameLocations":["938:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1532,"src":"938:12:8"},"id":1333,"nodeType":"InheritanceSpecifier","src":"938:12:8"},{"baseName":{"id":1334,"name":"EIP712","nameLocations":["952:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":4177,"src":"952:6:8"},"id":1335,"nodeType":"InheritanceSpecifier","src":"952:6:8"},{"baseName":{"id":1336,"name":"Nonces","nameLocations":["960:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1630,"src":"960:6:8"},"id":1337,"nodeType":"InheritanceSpecifier","src":"960:6:8"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1329,"nodeType":"StructuredDocumentation","src":"408:489:8","text":" @dev Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":true,"id":1470,"linearizedBaseContracts":[1470,1630,4177,552,1532,1204,594,1496,1282,1562],"name":"ERC20Permit","nameLocation":"916:11:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1342,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"998:15:8","nodeType":"VariableDeclaration","scope":1470,"src":"973:146:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"973:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1034:84:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1339,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1024:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1024:95:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"documentation":{"id":1343,"nodeType":"StructuredDocumentation","src":"1126:52:8","text":" @dev Permit deadline has expired."},"errorSelector":"62791302","id":1347,"name":"ERC2612ExpiredSignature","nameLocation":"1189:23:8","nodeType":"ErrorDefinition","parameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"deadline","nameLocation":"1221:8:8","nodeType":"VariableDeclaration","scope":1347,"src":"1213:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1344,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1212:18:8"},"src":"1183:48:8"},{"documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"1237:45:8","text":" @dev Mismatched signature."},"errorSelector":"4b800e46","id":1354,"name":"ERC2612InvalidSigner","nameLocation":"1293:20:8","nodeType":"ErrorDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"signer","nameLocation":"1322:6:8","nodeType":"VariableDeclaration","scope":1354,"src":"1314:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"owner","nameLocation":"1338:5:8","nodeType":"VariableDeclaration","scope":1354,"src":"1330:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1313:31:8"},"src":"1287:58:8"},{"body":{"id":1364,"nodeType":"Block","src":"1627:2:8","statements":[]},"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"1351:221:8","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC-20 token name."},"id":1365,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1360,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"1616:4:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1622:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1362,"kind":"baseConstructorSpecifier","modifierName":{"id":1359,"name":"EIP712","nameLocations":["1609:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":4177,"src":"1609:6:8"},"nodeType":"ModifierInvocation","src":"1609:17:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1357,"mutability":"mutable","name":"name","nameLocation":"1603:4:8","nodeType":"VariableDeclaration","scope":1365,"src":"1589:18:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1356,"name":"string","nodeType":"ElementaryTypeName","src":"1589:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1588:20:8"},"returnParameters":{"id":1363,"nodeType":"ParameterList","parameters":[],"src":"1627:0:8"},"scope":1470,"src":"1577:52:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1517],"body":{"id":1441,"nodeType":"Block","src":"1857:483:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1383,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1871:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1877:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"1871:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1385,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"1889:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1871:26:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1392,"nodeType":"IfStatement","src":"1867:97:8","trueBody":{"id":1391,"nodeType":"Block","src":"1899:65:8","statements":[{"errorCall":{"arguments":[{"id":1388,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"1944:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1387,"name":"ERC2612ExpiredSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"1920:23:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1920:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1390,"nodeType":"RevertStatement","src":"1913:40:8"}]}},{"assignments":[1394],"declarations":[{"constant":false,"id":1394,"mutability":"mutable","name":"structHash","nameLocation":"1982:10:8","nodeType":"VariableDeclaration","scope":1441,"src":"1974:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1393,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1974:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1408,"initialValue":{"arguments":[{"arguments":[{"id":1398,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"2016:15:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1399,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"2033:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1400,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"2040:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"2049:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1403,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"2066:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1402,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"2056:9:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2056:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1405,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"2074:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1396,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2005:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2009:6:8","memberName":"encode","nodeType":"MemberAccess","src":"2005:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2005:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1395,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1995:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1995:89:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1974:110:8"},{"assignments":[1410],"declarations":[{"constant":false,"id":1410,"mutability":"mutable","name":"hash","nameLocation":"2103:4:8","nodeType":"VariableDeclaration","scope":1441,"src":"2095:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1409,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2095:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1414,"initialValue":{"arguments":[{"id":1412,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"2127:10:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1411,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"2110:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2110:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2095:43:8"},{"assignments":[1416],"declarations":[{"constant":false,"id":1416,"mutability":"mutable","name":"signer","nameLocation":"2157:6:8","nodeType":"VariableDeclaration","scope":1441,"src":"2149:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1415,"name":"address","nodeType":"ElementaryTypeName","src":"2149:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1424,"initialValue":{"arguments":[{"id":1419,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"2180:4:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1420,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"2186:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1421,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"2189:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1422,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"2192:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1417,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3950,"src":"2166:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$3950_$","typeString":"type(library ECDSA)"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2172:7:8","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3900,"src":"2166:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2166:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2149:45:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1425,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"2208:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1426,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"2218:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2208:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1434,"nodeType":"IfStatement","src":"2204:88:8","trueBody":{"id":1433,"nodeType":"Block","src":"2225:67:8","statements":[{"errorCall":{"arguments":[{"id":1429,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"2267:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1430,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"2275:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1428,"name":"ERC2612InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"2246:20:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1432,"nodeType":"RevertStatement","src":"2239:42:8"}]}},{"expression":{"arguments":[{"id":1436,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1368,"src":"2311:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1437,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"2318:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"2327:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1435,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1095,1155],"referencedDeclaration":1095,"src":"2302:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2302:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1440,"nodeType":"ExpressionStatement","src":"2302:31:8"}]},"documentation":{"id":1366,"nodeType":"StructuredDocumentation","src":"1635:28:8","text":"@inheritdoc IERC20Permit"},"functionSelector":"d505accf","id":1442,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1677:6:8","nodeType":"FunctionDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1368,"mutability":"mutable","name":"owner","nameLocation":"1701:5:8","nodeType":"VariableDeclaration","scope":1442,"src":"1693:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1367,"name":"address","nodeType":"ElementaryTypeName","src":"1693:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1370,"mutability":"mutable","name":"spender","nameLocation":"1724:7:8","nodeType":"VariableDeclaration","scope":1442,"src":"1716:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"1716:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"value","nameLocation":"1749:5:8","nodeType":"VariableDeclaration","scope":1442,"src":"1741:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1371,"name":"uint256","nodeType":"ElementaryTypeName","src":"1741:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"deadline","nameLocation":"1772:8:8","nodeType":"VariableDeclaration","scope":1442,"src":"1764:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"1764:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1376,"mutability":"mutable","name":"v","nameLocation":"1796:1:8","nodeType":"VariableDeclaration","scope":1442,"src":"1790:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1375,"name":"uint8","nodeType":"ElementaryTypeName","src":"1790:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1378,"mutability":"mutable","name":"r","nameLocation":"1815:1:8","nodeType":"VariableDeclaration","scope":1442,"src":"1807:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1377,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1807:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"s","nameLocation":"1834:1:8","nodeType":"VariableDeclaration","scope":1442,"src":"1826:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1379,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1826:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1683:158:8"},"returnParameters":{"id":1382,"nodeType":"ParameterList","parameters":[],"src":"1857:0:8"},"scope":1470,"src":"1668:672:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1525,1589],"body":{"id":1458,"nodeType":"Block","src":"2479:43:8","statements":[{"expression":{"arguments":[{"id":1455,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"2509:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1453,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2496:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Permit_$1470_$","typeString":"type(contract super ERC20Permit)"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2502:6:8","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":1589,"src":"2496:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2496:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1452,"id":1457,"nodeType":"Return","src":"2489:26:8"}]},"documentation":{"id":1443,"nodeType":"StructuredDocumentation","src":"2346:28:8","text":"@inheritdoc IERC20Permit"},"functionSelector":"7ecebe00","id":1459,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2388:6:8","nodeType":"FunctionDefinition","overrides":{"id":1449,"nodeType":"OverrideSpecifier","overrides":[{"id":1447,"name":"IERC20Permit","nameLocations":["2439:12:8"],"nodeType":"IdentifierPath","referencedDeclaration":1532,"src":"2439:12:8"},{"id":1448,"name":"Nonces","nameLocations":["2453:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":1630,"src":"2453:6:8"}],"src":"2430:30:8"},"parameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"owner","nameLocation":"2403:5:8","nodeType":"VariableDeclaration","scope":1459,"src":"2395:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1444,"name":"address","nodeType":"ElementaryTypeName","src":"2395:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2394:15:8"},"returnParameters":{"id":1452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1459,"src":"2470:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1450,"name":"uint256","nodeType":"ElementaryTypeName","src":"2470:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2469:9:8"},"scope":1470,"src":"2379:143:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1531],"body":{"id":1468,"nodeType":"Block","src":"2682:44:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1465,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4073,"src":"2699:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2699:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1464,"id":1467,"nodeType":"Return","src":"2692:27:8"}]},"documentation":{"id":1460,"nodeType":"StructuredDocumentation","src":"2528:28:8","text":"@inheritdoc IERC20Permit"},"functionSelector":"3644e515","id":1469,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2623:16:8","nodeType":"FunctionDefinition","parameters":{"id":1461,"nodeType":"ParameterList","parameters":[],"src":"2639:2:8"},"returnParameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1469,"src":"2673:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1462,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2673:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2672:9:8"},"scope":1470,"src":"2614:112:8","stateMutability":"view","virtual":true,"visibility":"external"}],"scope":1471,"src":"898:1830:8","usedErrors":[564,569,574,583,588,593,1347,1354,1572,1873,1875,3613,3618,3623],"usedEvents":[532,1216,1225]}],"src":"122:2607:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1282],"IERC20Metadata":[1496]},"id":1497,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1472,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"125:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1474,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1497,"sourceUnit":1283,"src":"151:37:9","symbolAliases":[{"foreign":{"id":1473,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"159:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1476,"name":"IERC20","nameLocations":["306:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1282,"src":"306:6:9"},"id":1477,"nodeType":"InheritanceSpecifier","src":"306:6:9"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1475,"nodeType":"StructuredDocumentation","src":"190:87:9","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1496,"linearizedBaseContracts":[1496,1282],"name":"IERC20Metadata","nameLocation":"288:14:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1478,"nodeType":"StructuredDocumentation","src":"319:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1483,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:9","nodeType":"FunctionDefinition","parameters":{"id":1479,"nodeType":"ParameterList","parameters":[],"src":"391:2:9"},"returnParameters":{"id":1482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1483,"src":"417:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1480,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:9"},"scope":1496,"src":"378:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1484,"nodeType":"StructuredDocumentation","src":"438:56:9","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1489,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:9","nodeType":"FunctionDefinition","parameters":{"id":1485,"nodeType":"ParameterList","parameters":[],"src":"514:2:9"},"returnParameters":{"id":1488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1487,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1489,"src":"540:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1486,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:9"},"scope":1496,"src":"499:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1490,"nodeType":"StructuredDocumentation","src":"561:65:9","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1495,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:9","nodeType":"FunctionDefinition","parameters":{"id":1491,"nodeType":"ParameterList","parameters":[],"src":"648:2:9"},"returnParameters":{"id":1494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1495,"src":"674:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1492,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:9"},"scope":1496,"src":"631:50:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1497,"src":"278:405:9","usedErrors":[],"usedEvents":[1216,1225]}],"src":"125:559:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1532]},"id":1533,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1498,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"123:25:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1499,"nodeType":"StructuredDocumentation","src":"150:1965:10","text":" @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."},"fullyImplemented":false,"id":1532,"linearizedBaseContracts":[1532],"name":"IERC20Permit","nameLocation":"2126:12:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1500,"nodeType":"StructuredDocumentation","src":"2145:850:10","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."},"functionSelector":"d505accf","id":1517,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"3009:6:10","nodeType":"FunctionDefinition","parameters":{"id":1515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1502,"mutability":"mutable","name":"owner","nameLocation":"3033:5:10","nodeType":"VariableDeclaration","scope":1517,"src":"3025:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1501,"name":"address","nodeType":"ElementaryTypeName","src":"3025:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1504,"mutability":"mutable","name":"spender","nameLocation":"3056:7:10","nodeType":"VariableDeclaration","scope":1517,"src":"3048:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1503,"name":"address","nodeType":"ElementaryTypeName","src":"3048:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1506,"mutability":"mutable","name":"value","nameLocation":"3081:5:10","nodeType":"VariableDeclaration","scope":1517,"src":"3073:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1505,"name":"uint256","nodeType":"ElementaryTypeName","src":"3073:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1508,"mutability":"mutable","name":"deadline","nameLocation":"3104:8:10","nodeType":"VariableDeclaration","scope":1517,"src":"3096:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1507,"name":"uint256","nodeType":"ElementaryTypeName","src":"3096:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1510,"mutability":"mutable","name":"v","nameLocation":"3128:1:10","nodeType":"VariableDeclaration","scope":1517,"src":"3122:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1509,"name":"uint8","nodeType":"ElementaryTypeName","src":"3122:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1512,"mutability":"mutable","name":"r","nameLocation":"3147:1:10","nodeType":"VariableDeclaration","scope":1517,"src":"3139:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1511,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3139:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1514,"mutability":"mutable","name":"s","nameLocation":"3166:1:10","nodeType":"VariableDeclaration","scope":1517,"src":"3158:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1513,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3158:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3015:158:10"},"returnParameters":{"id":1516,"nodeType":"ParameterList","parameters":[],"src":"3182:0:10"},"scope":1532,"src":"3000:183:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1518,"nodeType":"StructuredDocumentation","src":"3189:294:10","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1525,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"3497:6:10","nodeType":"FunctionDefinition","parameters":{"id":1521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1520,"mutability":"mutable","name":"owner","nameLocation":"3512:5:10","nodeType":"VariableDeclaration","scope":1525,"src":"3504:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1519,"name":"address","nodeType":"ElementaryTypeName","src":"3504:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3503:15:10"},"returnParameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1523,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1525,"src":"3542:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1522,"name":"uint256","nodeType":"ElementaryTypeName","src":"3542:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3541:9:10"},"scope":1532,"src":"3488:63:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1526,"nodeType":"StructuredDocumentation","src":"3557:128:10","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1531,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"3752:16:10","nodeType":"FunctionDefinition","parameters":{"id":1527,"nodeType":"ParameterList","parameters":[],"src":"3768:2:10"},"returnParameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1531,"src":"3794:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1528,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:9:10"},"scope":1532,"src":"3743:60:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1533,"src":"2116:1689:10","usedErrors":[],"usedEvents":[]}],"src":"123:3683:10"},"id":10},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1562]},"id":1563,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1534,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:11"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1535,"nodeType":"StructuredDocumentation","src":"127:496:11","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1562,"linearizedBaseContracts":[1562],"name":"Context","nameLocation":"642:7:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1543,"nodeType":"Block","src":"718:34:11","statements":[{"expression":{"expression":{"id":1540,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:11","memberName":"sender","nodeType":"MemberAccess","src":"735:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1539,"id":1542,"nodeType":"Return","src":"728:17:11"}]},"id":1544,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:11","nodeType":"FunctionDefinition","parameters":{"id":1536,"nodeType":"ParameterList","parameters":[],"src":"675:2:11"},"returnParameters":{"id":1539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1544,"src":"709:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1537,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:11"},"scope":1562,"src":"656:96:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1552,"nodeType":"Block","src":"825:32:11","statements":[{"expression":{"expression":{"id":1549,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:11","memberName":"data","nodeType":"MemberAccess","src":"842:8:11","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1548,"id":1551,"nodeType":"Return","src":"835:15:11"}]},"id":1553,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:11","nodeType":"FunctionDefinition","parameters":{"id":1545,"nodeType":"ParameterList","parameters":[],"src":"775:2:11"},"returnParameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1553,"src":"809:14:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1546,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:11"},"scope":1562,"src":"758:99:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1560,"nodeType":"Block","src":"935:25:11","statements":[{"expression":{"hexValue":"30","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1557,"id":1559,"nodeType":"Return","src":"945:8:11"}]},"id":1561,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:11","nodeType":"FunctionDefinition","parameters":{"id":1554,"nodeType":"ParameterList","parameters":[],"src":"892:2:11"},"returnParameters":{"id":1557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1561,"src":"926:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1555,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:11"},"scope":1562,"src":"863:97:11","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1563,"src":"624:338:11","usedErrors":[],"usedEvents":[]}],"src":"101:862:11"},"id":11},"@openzeppelin/contracts/utils/Nonces.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Nonces.sol","exportedSymbols":{"Nonces":[1630]},"id":1631,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1564,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Nonces","contractDependencies":[],"contractKind":"contract","documentation":{"id":1565,"nodeType":"StructuredDocumentation","src":"125:83:12","text":" @dev Provides tracking nonces for addresses. Nonces will only increment."},"fullyImplemented":true,"id":1630,"linearizedBaseContracts":[1630],"name":"Nonces","nameLocation":"227:6:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1566,"nodeType":"StructuredDocumentation","src":"240:90:12","text":" @dev The nonce used for an `account` is not the expected current nonce."},"errorSelector":"752d88c0","id":1572,"name":"InvalidAccountNonce","nameLocation":"341:19:12","nodeType":"ErrorDefinition","parameters":{"id":1571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1568,"mutability":"mutable","name":"account","nameLocation":"369:7:12","nodeType":"VariableDeclaration","scope":1572,"src":"361:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1567,"name":"address","nodeType":"ElementaryTypeName","src":"361:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1570,"mutability":"mutable","name":"currentNonce","nameLocation":"386:12:12","nodeType":"VariableDeclaration","scope":1572,"src":"378:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1569,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:39:12"},"src":"335:65:12"},{"constant":false,"id":1576,"mutability":"mutable","name":"_nonces","nameLocation":"450:7:12","nodeType":"VariableDeclaration","scope":1630,"src":"406:51:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1575,"keyName":"account","keyNameLocation":"422:7:12","keyType":{"id":1573,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"406:35:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1574,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"body":{"id":1588,"nodeType":"Block","src":"607:38:12","statements":[{"expression":{"baseExpression":{"id":1584,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"624:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1586,"indexExpression":{"id":1585,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"632:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"624:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1583,"id":1587,"nodeType":"Return","src":"617:21:12"}]},"documentation":{"id":1577,"nodeType":"StructuredDocumentation","src":"464:69:12","text":" @dev Returns the next unused nonce for an address."},"functionSelector":"7ecebe00","id":1589,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"547:6:12","nodeType":"FunctionDefinition","parameters":{"id":1580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1579,"mutability":"mutable","name":"owner","nameLocation":"562:5:12","nodeType":"VariableDeclaration","scope":1589,"src":"554:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1578,"name":"address","nodeType":"ElementaryTypeName","src":"554:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"553:15:12"},"returnParameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1589,"src":"598:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1581,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"597:9:12"},"scope":1630,"src":"538:107:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1603,"nodeType":"Block","src":"828:326:12","statements":[{"id":1602,"nodeType":"UncheckedBlock","src":"1031:117:12","statements":[{"expression":{"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1121:16:12","subExpression":{"baseExpression":{"id":1597,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"1121:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1599,"indexExpression":{"id":1598,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"1129:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1121:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1596,"id":1601,"nodeType":"Return","src":"1114:23:12"}]}]},"documentation":{"id":1590,"nodeType":"StructuredDocumentation","src":"651:103:12","text":" @dev Consumes a nonce.\n Returns the current value and increments nonce."},"id":1604,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"768:9:12","nodeType":"FunctionDefinition","parameters":{"id":1593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1592,"mutability":"mutable","name":"owner","nameLocation":"786:5:12","nodeType":"VariableDeclaration","scope":1604,"src":"778:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1591,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"777:15:12"},"returnParameters":{"id":1596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1604,"src":"819:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1594,"name":"uint256","nodeType":"ElementaryTypeName","src":"819:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"818:9:12"},"scope":1630,"src":"759:395:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1628,"nodeType":"Block","src":"1338:149:12","statements":[{"assignments":[1613],"declarations":[{"constant":false,"id":1613,"mutability":"mutable","name":"current","nameLocation":"1356:7:12","nodeType":"VariableDeclaration","scope":1628,"src":"1348:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1612,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1617,"initialValue":{"arguments":[{"id":1615,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"1376:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1614,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"1366:9:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1348:34:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1618,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"1396:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1619,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"1405:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1396:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1627,"nodeType":"IfStatement","src":"1392:89:12","trueBody":{"id":1626,"nodeType":"Block","src":"1414:67:12","statements":[{"errorCall":{"arguments":[{"id":1622,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"1455:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1623,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"1462:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1621,"name":"InvalidAccountNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"1435:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1435:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1625,"nodeType":"RevertStatement","src":"1428:42:12"}]}}]},"documentation":{"id":1605,"nodeType":"StructuredDocumentation","src":"1160:100:12","text":" @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."},"id":1629,"implemented":true,"kind":"function","modifiers":[],"name":"_useCheckedNonce","nameLocation":"1274:16:12","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1607,"mutability":"mutable","name":"owner","nameLocation":"1299:5:12","nodeType":"VariableDeclaration","scope":1629,"src":"1291:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1606,"name":"address","nodeType":"ElementaryTypeName","src":"1291:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1609,"mutability":"mutable","name":"nonce","nameLocation":"1314:5:12","nodeType":"VariableDeclaration","scope":1629,"src":"1306:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"1306:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:30:12"},"returnParameters":{"id":1611,"nodeType":"ParameterList","parameters":[],"src":"1338:0:12"},"scope":1630,"src":"1265:222:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1631,"src":"209:1280:12","usedErrors":[1572],"usedEvents":[]}],"src":"99:1391:12"},"id":12},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1682]},"id":1683,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1632,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1633,"nodeType":"StructuredDocumentation","src":"125:489:13","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1682,"linearizedBaseContracts":[1682],"name":"Panic","nameLocation":"665:5:13","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1634,"nodeType":"StructuredDocumentation","src":"677:36:13","text":"@dev generic / unspecified error"},"id":1637,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:13","nodeType":"VariableDeclaration","scope":1682,"src":"718:40:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1635,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1638,"nodeType":"StructuredDocumentation","src":"764:37:13","text":"@dev used by the assert() builtin"},"id":1641,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:13","nodeType":"VariableDeclaration","scope":1682,"src":"806:39:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1642,"nodeType":"StructuredDocumentation","src":"851:41:13","text":"@dev arithmetic underflow or overflow"},"id":1645,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:13","nodeType":"VariableDeclaration","scope":1682,"src":"897:47:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1643,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:13","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1646,"nodeType":"StructuredDocumentation","src":"950:35:13","text":"@dev division or modulo by zero"},"id":1649,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:13","nodeType":"VariableDeclaration","scope":1682,"src":"990:49:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:13","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1650,"nodeType":"StructuredDocumentation","src":"1045:30:13","text":"@dev enum conversion error"},"id":1653,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:13","nodeType":"VariableDeclaration","scope":1682,"src":"1080:54:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1651,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:13","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1654,"nodeType":"StructuredDocumentation","src":"1140:36:13","text":"@dev invalid encoding in storage"},"id":1657,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:13","nodeType":"VariableDeclaration","scope":1682,"src":"1181:55:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1655,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:13","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"1242:24:13","text":"@dev empty array pop"},"id":1661,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:13","nodeType":"VariableDeclaration","scope":1682,"src":"1271:48:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:13","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1662,"nodeType":"StructuredDocumentation","src":"1325:35:13","text":"@dev array out of bounds access"},"id":1665,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:13","nodeType":"VariableDeclaration","scope":1682,"src":"1365:52:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:13","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1666,"nodeType":"StructuredDocumentation","src":"1423:65:13","text":"@dev resource error (too large allocation or too large array)"},"id":1669,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:13","nodeType":"VariableDeclaration","scope":1682,"src":"1493:47:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1667,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:13","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1670,"nodeType":"StructuredDocumentation","src":"1546:42:13","text":"@dev calling invalid internal function"},"id":1673,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:13","nodeType":"VariableDeclaration","scope":1682,"src":"1593:58:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1671,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:13","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1680,"nodeType":"Block","src":"1819:151:13","statements":[{"AST":{"nativeSrc":"1854:110:13","nodeType":"YulBlock","src":"1854:110:13","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:13","nodeType":"YulLiteral","src":"1875:4:13","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:13","nodeType":"YulLiteral","src":"1881:10:13","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:13","nodeType":"YulIdentifier","src":"1868:6:13"},"nativeSrc":"1868:24:13","nodeType":"YulFunctionCall","src":"1868:24:13"},"nativeSrc":"1868:24:13","nodeType":"YulExpressionStatement","src":"1868:24:13"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:13","nodeType":"YulLiteral","src":"1912:4:13","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:13","nodeType":"YulIdentifier","src":"1918:4:13"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:13","nodeType":"YulIdentifier","src":"1905:6:13"},"nativeSrc":"1905:18:13","nodeType":"YulFunctionCall","src":"1905:18:13"},"nativeSrc":"1905:18:13","nodeType":"YulExpressionStatement","src":"1905:18:13"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:13","nodeType":"YulLiteral","src":"1943:4:13","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:13","nodeType":"YulLiteral","src":"1949:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:13","nodeType":"YulIdentifier","src":"1936:6:13"},"nativeSrc":"1936:18:13","nodeType":"YulFunctionCall","src":"1936:18:13"},"nativeSrc":"1936:18:13","nodeType":"YulExpressionStatement","src":"1936:18:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":1676,"isOffset":false,"isSlot":false,"src":"1918:4:13","valueSize":1}],"flags":["memory-safe"],"id":1679,"nodeType":"InlineAssembly","src":"1829:135:13"}]},"documentation":{"id":1674,"nodeType":"StructuredDocumentation","src":"1658:113:13","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1681,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:13","nodeType":"FunctionDefinition","parameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1676,"mutability":"mutable","name":"code","nameLocation":"1799:4:13","nodeType":"VariableDeclaration","scope":1681,"src":"1791:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:13"},"returnParameters":{"id":1678,"nodeType":"ParameterList","parameters":[],"src":"1819:0:13"},"scope":1682,"src":"1776:194:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1683,"src":"657:1315:13","usedErrors":[],"usedEvents":[]}],"src":"99:1874:13"},"id":13},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[1562],"Pausable":[1790]},"id":1791,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1684,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1686,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1791,"sourceUnit":1563,"src":"128:45:14","symbolAliases":[{"foreign":{"id":1685,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"136:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1688,"name":"Context","nameLocations":["645:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":1562,"src":"645:7:14"},"id":1689,"nodeType":"InheritanceSpecifier","src":"645:7:14"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1687,"nodeType":"StructuredDocumentation","src":"175:439:14","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":1790,"linearizedBaseContracts":[1790,1562],"name":"Pausable","nameLocation":"633:8:14","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1691,"mutability":"mutable","name":"_paused","nameLocation":"672:7:14","nodeType":"VariableDeclaration","scope":1790,"src":"659:20:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1690,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":1692,"nodeType":"StructuredDocumentation","src":"686:73:14","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":1696,"name":"Paused","nameLocation":"770:6:14","nodeType":"EventDefinition","parameters":{"id":1695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1694,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:14","nodeType":"VariableDeclaration","scope":1696,"src":"777:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1693,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:14"},"src":"764:30:14"},{"anonymous":false,"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"800:70:14","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":1701,"name":"Unpaused","nameLocation":"881:8:14","nodeType":"EventDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:14","nodeType":"VariableDeclaration","scope":1701,"src":"890:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:14"},"src":"875:32:14"},{"documentation":{"id":1702,"nodeType":"StructuredDocumentation","src":"913:76:14","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":1704,"name":"EnforcedPause","nameLocation":"1000:13:14","nodeType":"ErrorDefinition","parameters":{"id":1703,"nodeType":"ParameterList","parameters":[],"src":"1013:2:14"},"src":"994:22:14"},{"documentation":{"id":1705,"nodeType":"StructuredDocumentation","src":"1022:80:14","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":1707,"name":"ExpectedPause","nameLocation":"1113:13:14","nodeType":"ErrorDefinition","parameters":{"id":1706,"nodeType":"ParameterList","parameters":[],"src":"1126:2:14"},"src":"1107:22:14"},{"body":{"id":1714,"nodeType":"Block","src":"1340:47:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1710,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"1350:17:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1712,"nodeType":"ExpressionStatement","src":"1350:19:14"},{"id":1713,"nodeType":"PlaceholderStatement","src":"1379:1:14"}]},"documentation":{"id":1708,"nodeType":"StructuredDocumentation","src":"1135:175:14","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":1715,"name":"whenNotPaused","nameLocation":"1324:13:14","nodeType":"ModifierDefinition","parameters":{"id":1709,"nodeType":"ParameterList","parameters":[],"src":"1337:2:14"},"src":"1315:72:14","virtual":false,"visibility":"internal"},{"body":{"id":1722,"nodeType":"Block","src":"1587:44:14","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1718,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1757,"src":"1597:14:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1597:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1720,"nodeType":"ExpressionStatement","src":"1597:16:14"},{"id":1721,"nodeType":"PlaceholderStatement","src":"1623:1:14"}]},"documentation":{"id":1716,"nodeType":"StructuredDocumentation","src":"1393:167:14","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":1723,"name":"whenPaused","nameLocation":"1574:10:14","nodeType":"ModifierDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[],"src":"1584:2:14"},"src":"1565:66:14","virtual":false,"visibility":"internal"},{"body":{"id":1731,"nodeType":"Block","src":"1779:31:14","statements":[{"expression":{"id":1729,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"1796:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1728,"id":1730,"nodeType":"Return","src":"1789:14:14"}]},"documentation":{"id":1724,"nodeType":"StructuredDocumentation","src":"1637:84:14","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":1732,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1735:6:14","nodeType":"FunctionDefinition","parameters":{"id":1725,"nodeType":"ParameterList","parameters":[],"src":"1741:2:14"},"returnParameters":{"id":1728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1732,"src":"1773:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1726,"name":"bool","nodeType":"ElementaryTypeName","src":"1773:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1772:6:14"},"scope":1790,"src":"1726:84:14","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1743,"nodeType":"Block","src":"1929:77:14","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":1736,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"1943:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1943:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1742,"nodeType":"IfStatement","src":"1939:61:14","trueBody":{"id":1741,"nodeType":"Block","src":"1953:47:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1738,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1704,"src":"1974:13:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1974:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1740,"nodeType":"RevertStatement","src":"1967:22:14"}]}}]},"documentation":{"id":1733,"nodeType":"StructuredDocumentation","src":"1816:57:14","text":" @dev Throws if the contract is paused."},"id":1744,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1887:17:14","nodeType":"FunctionDefinition","parameters":{"id":1734,"nodeType":"ParameterList","parameters":[],"src":"1904:2:14"},"returnParameters":{"id":1735,"nodeType":"ParameterList","parameters":[],"src":"1929:0:14"},"scope":1790,"src":"1878:128:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1756,"nodeType":"Block","src":"2126:78:14","statements":[{"condition":{"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2140:9:14","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1748,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"2141:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2141:8:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1755,"nodeType":"IfStatement","src":"2136:62:14","trueBody":{"id":1754,"nodeType":"Block","src":"2151:47:14","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1751,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1707,"src":"2172:13:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2172:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1753,"nodeType":"RevertStatement","src":"2165:22:14"}]}}]},"documentation":{"id":1745,"nodeType":"StructuredDocumentation","src":"2012:61:14","text":" @dev Throws if the contract is not paused."},"id":1757,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2087:14:14","nodeType":"FunctionDefinition","parameters":{"id":1746,"nodeType":"ParameterList","parameters":[],"src":"2101:2:14"},"returnParameters":{"id":1747,"nodeType":"ParameterList","parameters":[],"src":"2126:0:14"},"scope":1790,"src":"2078:126:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1772,"nodeType":"Block","src":"2388:66:14","statements":[{"expression":{"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1763,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"2398:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2408:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2398:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1766,"nodeType":"ExpressionStatement","src":"2398:14:14"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1768,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"2434:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2434:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1767,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1696,"src":"2427:6:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2427:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1771,"nodeType":"EmitStatement","src":"2422:25:14"}]},"documentation":{"id":1758,"nodeType":"StructuredDocumentation","src":"2210:124:14","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":1773,"implemented":true,"kind":"function","modifiers":[{"id":1761,"kind":"modifierInvocation","modifierName":{"id":1760,"name":"whenNotPaused","nameLocations":["2374:13:14"],"nodeType":"IdentifierPath","referencedDeclaration":1715,"src":"2374:13:14"},"nodeType":"ModifierInvocation","src":"2374:13:14"}],"name":"_pause","nameLocation":"2348:6:14","nodeType":"FunctionDefinition","parameters":{"id":1759,"nodeType":"ParameterList","parameters":[],"src":"2354:2:14"},"returnParameters":{"id":1762,"nodeType":"ParameterList","parameters":[],"src":"2388:0:14"},"scope":1790,"src":"2339:115:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1788,"nodeType":"Block","src":"2634:69:14","statements":[{"expression":{"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1779,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"2644:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2654:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2644:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1782,"nodeType":"ExpressionStatement","src":"2644:15:14"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1784,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"2683:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2683:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1783,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"2674:8:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2674:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1787,"nodeType":"EmitStatement","src":"2669:27:14"}]},"documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"2460:121:14","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":1789,"implemented":true,"kind":"function","modifiers":[{"id":1777,"kind":"modifierInvocation","modifierName":{"id":1776,"name":"whenPaused","nameLocations":["2623:10:14"],"nodeType":"IdentifierPath","referencedDeclaration":1723,"src":"2623:10:14"},"nodeType":"ModifierInvocation","src":"2623:10:14"}],"name":"_unpause","nameLocation":"2595:8:14","nodeType":"FunctionDefinition","parameters":{"id":1775,"nodeType":"ParameterList","parameters":[],"src":"2603:2:14"},"returnParameters":{"id":1778,"nodeType":"ParameterList","parameters":[],"src":"2634:0:14"},"scope":1790,"src":"2586:117:14","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1791,"src":"615:2090:14","usedErrors":[1704,1707],"usedEvents":[1696,1701]}],"src":"102:2604:14"},"id":14},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1859]},"id":1860,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1792,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:15"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1793,"nodeType":"StructuredDocumentation","src":"135:894:15","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1859,"linearizedBaseContracts":[1859],"name":"ReentrancyGuard","nameLocation":"1048:15:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1796,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:15","nodeType":"VariableDeclaration","scope":1859,"src":"1818:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1794,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1799,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:15","nodeType":"VariableDeclaration","scope":1859,"src":"1864:36:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1797,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1801,"mutability":"mutable","name":"_status","nameLocation":"1923:7:15","nodeType":"VariableDeclaration","scope":1859,"src":"1907:23:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1800,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":1802,"nodeType":"StructuredDocumentation","src":"1937:52:15","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1804,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:15","nodeType":"ErrorDefinition","parameters":{"id":1803,"nodeType":"ParameterList","parameters":[],"src":"2028:2:15"},"src":"1994:37:15"},{"body":{"id":1811,"nodeType":"Block","src":"2051:38:15","statements":[{"expression":{"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1807,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"2061:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1808,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"2071:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1810,"nodeType":"ExpressionStatement","src":"2061:21:15"}]},"id":1812,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1805,"nodeType":"ParameterList","parameters":[],"src":"2048:2:15"},"returnParameters":{"id":1806,"nodeType":"ParameterList","parameters":[],"src":"2051:0:15"},"scope":1859,"src":"2037:52:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1822,"nodeType":"Block","src":"2490:79:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1815,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1839,"src":"2500:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1817,"nodeType":"ExpressionStatement","src":"2500:21:15"},{"id":1818,"nodeType":"PlaceholderStatement","src":"2531:1:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1819,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1847,"src":"2542:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1821,"nodeType":"ExpressionStatement","src":"2542:20:15"}]},"documentation":{"id":1813,"nodeType":"StructuredDocumentation","src":"2095:366:15","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1823,"name":"nonReentrant","nameLocation":"2475:12:15","nodeType":"ModifierDefinition","parameters":{"id":1814,"nodeType":"ParameterList","parameters":[],"src":"2487:2:15"},"src":"2466:103:15","virtual":false,"visibility":"internal"},{"body":{"id":1838,"nodeType":"Block","src":"2614:268:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1826,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"2702:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1827,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"2713:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1833,"nodeType":"IfStatement","src":"2698:86:15","trueBody":{"id":1832,"nodeType":"Block","src":"2722:62:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1829,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"2743:28:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1831,"nodeType":"RevertStatement","src":"2736:37:15"}]}},{"expression":{"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1834,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"2858:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1835,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"2868:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1837,"nodeType":"ExpressionStatement","src":"2858:17:15"}]},"id":1839,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:15","nodeType":"FunctionDefinition","parameters":{"id":1824,"nodeType":"ParameterList","parameters":[],"src":"2603:2:15"},"returnParameters":{"id":1825,"nodeType":"ParameterList","parameters":[],"src":"2614:0:15"},"scope":1859,"src":"2575:307:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1846,"nodeType":"Block","src":"2926:170:15","statements":[{"expression":{"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1842,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"3068:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1843,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"3078:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1845,"nodeType":"ExpressionStatement","src":"3068:21:15"}]},"id":1847,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:15","nodeType":"FunctionDefinition","parameters":{"id":1840,"nodeType":"ParameterList","parameters":[],"src":"2915:2:15"},"returnParameters":{"id":1841,"nodeType":"ParameterList","parameters":[],"src":"2926:0:15"},"scope":1859,"src":"2888:208:15","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1857,"nodeType":"Block","src":"3339:42:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1853,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"3356:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1854,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"3367:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1852,"id":1856,"nodeType":"Return","src":"3349:25:15"}]},"documentation":{"id":1848,"nodeType":"StructuredDocumentation","src":"3102:168:15","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1858,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:15","nodeType":"FunctionDefinition","parameters":{"id":1849,"nodeType":"ParameterList","parameters":[],"src":"3307:2:15"},"returnParameters":{"id":1852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1858,"src":"3333:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1850,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:15"},"scope":1859,"src":"3275:106:15","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1860,"src":"1030:2353:15","usedErrors":[1804],"usedEvents":[]}],"src":"109:3275:15"},"id":15},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1865],"ShortStrings":[2076],"StorageSlot":[2200]},"id":2077,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1861,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1863,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2077,"sourceUnit":2201,"src":"132:46:16","symbolAliases":[{"foreign":{"id":1862,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"140:11:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1865,"name":"ShortString","nameLocation":"353:11:16","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:16","underlyingType":{"id":1864,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1866,"nodeType":"StructuredDocumentation","src":"378:876:16","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2076,"linearizedBaseContracts":[2076],"name":"ShortStrings","nameLocation":"1263:12:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1869,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:16","nodeType":"VariableDeclaration","scope":2076,"src":"1345:111:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1867,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1873,"name":"StringTooLong","nameLocation":"1469:13:16","nodeType":"ErrorDefinition","parameters":{"id":1872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1871,"mutability":"mutable","name":"str","nameLocation":"1490:3:16","nodeType":"VariableDeclaration","scope":1873,"src":"1483:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1870,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:16"},"src":"1463:32:16"},{"errorSelector":"b3512b0c","id":1875,"name":"InvalidShortString","nameLocation":"1506:18:16","nodeType":"ErrorDefinition","parameters":{"id":1874,"nodeType":"ParameterList","parameters":[],"src":"1524:2:16"},"src":"1500:27:16"},{"body":{"id":1918,"nodeType":"Block","src":"1786:208:16","statements":[{"assignments":[1885],"declarations":[{"constant":false,"id":1885,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:16","nodeType":"VariableDeclaration","scope":1918,"src":"1796:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1884,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1890,"initialValue":{"arguments":[{"id":1888,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"1822:3:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1886,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:16","typeDescriptions":{}}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1891,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"1840:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:16","memberName":"length","nodeType":"MemberAccess","src":"1840:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:16","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1900,"nodeType":"IfStatement","src":"1836:72:16","trueBody":{"id":1899,"nodeType":"Block","src":"1858:50:16","statements":[{"errorCall":{"arguments":[{"id":1896,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"1893:3:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1895,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1873,"src":"1879:13:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1898,"nodeType":"RevertStatement","src":"1872:25:16"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1909,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"1965:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1907,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:16","typeDescriptions":{}}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1905,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:16","typeDescriptions":{}}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1912,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1885,"src":"1974:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:16","memberName":"length","nodeType":"MemberAccess","src":"1974:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1903,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:16","typeDescriptions":{}}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1901,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"1924:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1865_$","typeString":"type(ShortString)"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:16","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:16","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1865_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}},"functionReturnParameters":1883,"id":1917,"nodeType":"Return","src":"1917:70:16"}]},"documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"1533:170:16","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1919,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:16","nodeType":"FunctionDefinition","parameters":{"id":1879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1878,"mutability":"mutable","name":"str","nameLocation":"1745:3:16","nodeType":"VariableDeclaration","scope":1919,"src":"1731:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1877,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:16"},"returnParameters":{"id":1883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1919,"src":"1773:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"},"typeName":{"id":1881,"nodeType":"UserDefinedTypeName","pathNode":{"id":1880,"name":"ShortString","nameLocations":["1773:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1865,"src":"1773:11:16"},"referencedDeclaration":1865,"src":"1773:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:16"},"scope":2076,"src":"1708:286:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1944,"nodeType":"Block","src":"2152:304:16","statements":[{"assignments":[1929],"declarations":[{"constant":false,"id":1929,"mutability":"mutable","name":"len","nameLocation":"2170:3:16","nodeType":"VariableDeclaration","scope":1944,"src":"2162:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1928,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1933,"initialValue":{"arguments":[{"id":1931,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"2187:4:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}],"id":1930,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"2176:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1865_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:16"},{"assignments":[1935],"declarations":[{"constant":false,"id":1935,"mutability":"mutable","name":"str","nameLocation":"2294:3:16","nodeType":"VariableDeclaration","scope":1944,"src":"2280:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1934,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1940,"initialValue":{"arguments":[{"hexValue":"3332","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1936,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:16"},{"AST":{"nativeSrc":"2349:81:16","nodeType":"YulBlock","src":"2349:81:16","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2370:3:16","nodeType":"YulIdentifier","src":"2370:3:16"},{"name":"len","nativeSrc":"2375:3:16","nodeType":"YulIdentifier","src":"2375:3:16"}],"functionName":{"name":"mstore","nativeSrc":"2363:6:16","nodeType":"YulIdentifier","src":"2363:6:16"},"nativeSrc":"2363:16:16","nodeType":"YulFunctionCall","src":"2363:16:16"},"nativeSrc":"2363:16:16","nodeType":"YulExpressionStatement","src":"2363:16:16"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2403:3:16","nodeType":"YulIdentifier","src":"2403:3:16"},{"kind":"number","nativeSrc":"2408:4:16","nodeType":"YulLiteral","src":"2408:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2399:3:16","nodeType":"YulIdentifier","src":"2399:3:16"},"nativeSrc":"2399:14:16","nodeType":"YulFunctionCall","src":"2399:14:16"},{"name":"sstr","nativeSrc":"2415:4:16","nodeType":"YulIdentifier","src":"2415:4:16"}],"functionName":{"name":"mstore","nativeSrc":"2392:6:16","nodeType":"YulIdentifier","src":"2392:6:16"},"nativeSrc":"2392:28:16","nodeType":"YulFunctionCall","src":"2392:28:16"},"nativeSrc":"2392:28:16","nodeType":"YulExpressionStatement","src":"2392:28:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":1929,"isOffset":false,"isSlot":false,"src":"2375:3:16","valueSize":1},{"declaration":1923,"isOffset":false,"isSlot":false,"src":"2415:4:16","valueSize":1},{"declaration":1935,"isOffset":false,"isSlot":false,"src":"2370:3:16","valueSize":1},{"declaration":1935,"isOffset":false,"isSlot":false,"src":"2403:3:16","valueSize":1}],"flags":["memory-safe"],"id":1941,"nodeType":"InlineAssembly","src":"2324:106:16"},{"expression":{"id":1942,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1935,"src":"2446:3:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1927,"id":1943,"nodeType":"Return","src":"2439:10:16"}]},"documentation":{"id":1920,"nodeType":"StructuredDocumentation","src":"2000:73:16","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":1945,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:16","nodeType":"FunctionDefinition","parameters":{"id":1924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1923,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:16","nodeType":"VariableDeclaration","scope":1945,"src":"2096:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"},"typeName":{"id":1922,"nodeType":"UserDefinedTypeName","pathNode":{"id":1921,"name":"ShortString","nameLocations":["2096:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1865,"src":"2096:11:16"},"referencedDeclaration":1865,"src":"2096:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:16"},"returnParameters":{"id":1927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1945,"src":"2137:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1925,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:16"},"scope":2076,"src":"2078:378:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1976,"nodeType":"Block","src":"2598:175:16","statements":[{"assignments":[1955],"declarations":[{"constant":false,"id":1955,"mutability":"mutable","name":"result","nameLocation":"2616:6:16","nodeType":"VariableDeclaration","scope":1976,"src":"2608:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1954,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1965,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1960,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"2652:4:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}],"expression":{"id":1958,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"2633:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1865_$","typeString":"type(ShortString)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:16","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:16","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1865_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1956,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:16","typeDescriptions":{}}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1966,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"2679:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:16","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1973,"nodeType":"IfStatement","src":"2675:69:16","trueBody":{"id":1972,"nodeType":"Block","src":"2692:52:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1969,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"2713:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1971,"nodeType":"RevertStatement","src":"2706:27:16"}]}},{"expression":{"id":1974,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"2760:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1953,"id":1975,"nodeType":"Return","src":"2753:13:16"}]},"documentation":{"id":1946,"nodeType":"StructuredDocumentation","src":"2462:61:16","text":" @dev Return the length of a `ShortString`."},"id":1977,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:16","nodeType":"FunctionDefinition","parameters":{"id":1950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1949,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:16","nodeType":"VariableDeclaration","scope":1977,"src":"2548:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"},"typeName":{"id":1948,"nodeType":"UserDefinedTypeName","pathNode":{"id":1947,"name":"ShortString","nameLocations":["2548:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1865,"src":"2548:11:16"},"referencedDeclaration":1865,"src":"2548:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:16"},"returnParameters":{"id":1953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1977,"src":"2589:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1951,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:16"},"scope":2076,"src":"2528:245:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2016,"nodeType":"Block","src":"2996:231:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"3016:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1988,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:16","typeDescriptions":{}}},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:16","memberName":"length","nodeType":"MemberAccess","src":"3010:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2014,"nodeType":"Block","src":"3094:127:16","statements":[{"expression":{"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2003,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"3134:5:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2000,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"3108:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2200_$","typeString":"type(library StorageSlot)"}},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:16","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"3108:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2097_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2097_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2005,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2096,"src":"3108:38:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"3149:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2008,"nodeType":"ExpressionStatement","src":"3108:46:16"},{"expression":{"arguments":[{"id":2011,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"3192:17:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2009,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"3175:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1865_$","typeString":"type(ShortString)"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:16","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:16","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1865_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}},"functionReturnParameters":1987,"id":2013,"nodeType":"Return","src":"3168:42:16"}]},"id":2015,"nodeType":"IfStatement","src":"3006:215:16","trueBody":{"id":1999,"nodeType":"Block","src":"3036:52:16","statements":[{"expression":{"arguments":[{"id":1996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1980,"src":"3071:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1995,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"3057:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1865_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}},"functionReturnParameters":1987,"id":1998,"nodeType":"Return","src":"3050:27:16"}]}}]},"documentation":{"id":1978,"nodeType":"StructuredDocumentation","src":"2779:103:16","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2017,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:16","nodeType":"FunctionDefinition","parameters":{"id":1983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1980,"mutability":"mutable","name":"value","nameLocation":"2936:5:16","nodeType":"VariableDeclaration","scope":2017,"src":"2922:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1979,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1982,"mutability":"mutable","name":"store","nameLocation":"2958:5:16","nodeType":"VariableDeclaration","scope":2017,"src":"2943:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1981,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:16"},"returnParameters":{"id":1987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2017,"src":"2983:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"},"typeName":{"id":1985,"nodeType":"UserDefinedTypeName","pathNode":{"id":1984,"name":"ShortString","nameLocations":["2983:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1865,"src":"2983:11:16"},"referencedDeclaration":1865,"src":"2983:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:16"},"scope":2076,"src":"2887:340:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2043,"nodeType":"Block","src":"3477:158:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"3510:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}],"expression":{"id":2028,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"3491:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1865_$","typeString":"type(ShortString)"}},"id":2029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3503:6:16","memberName":"unwrap","nodeType":"MemberAccess","src":"3491:18:16","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1865_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3491:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2032,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"3520:17:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3491:46:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2041,"nodeType":"Block","src":"3592:37:16","statements":[{"expression":{"id":2039,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"3613:5:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2027,"id":2040,"nodeType":"Return","src":"3606:12:16"}]},"id":2042,"nodeType":"IfStatement","src":"3487:142:16","trueBody":{"id":2038,"nodeType":"Block","src":"3539:47:16","statements":[{"expression":{"arguments":[{"id":2035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"3569:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}],"id":2034,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"3560:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1865_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2027,"id":2037,"nodeType":"Return","src":"3553:22:16"}]}}]},"documentation":{"id":2018,"nodeType":"StructuredDocumentation","src":"3233:130:16","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}."},"id":2044,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3377:20:16","nodeType":"FunctionDefinition","parameters":{"id":2024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2021,"mutability":"mutable","name":"value","nameLocation":"3410:5:16","nodeType":"VariableDeclaration","scope":2044,"src":"3398:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"},"typeName":{"id":2020,"nodeType":"UserDefinedTypeName","pathNode":{"id":2019,"name":"ShortString","nameLocations":["3398:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1865,"src":"3398:11:16"},"referencedDeclaration":1865,"src":"3398:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2023,"mutability":"mutable","name":"store","nameLocation":"3432:5:16","nodeType":"VariableDeclaration","scope":2044,"src":"3417:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2022,"name":"string","nodeType":"ElementaryTypeName","src":"3417:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3397:41:16"},"returnParameters":{"id":2027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2044,"src":"3462:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2025,"name":"string","nodeType":"ElementaryTypeName","src":"3462:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3461:15:16"},"scope":2076,"src":"3368:267:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2074,"nodeType":"Block","src":"4125:174:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"4158:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}],"expression":{"id":2055,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"4139:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1865_$","typeString":"type(ShortString)"}},"id":2056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4151:6:16","memberName":"unwrap","nodeType":"MemberAccess","src":"4139:18:16","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1865_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4139:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2059,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1869,"src":"4168:17:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4139:46:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2072,"nodeType":"Block","src":"4242:51:16","statements":[{"expression":{"expression":{"arguments":[{"id":2068,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"4269:5:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2066,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:16","typeDescriptions":{}}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4276:6:16","memberName":"length","nodeType":"MemberAccess","src":"4263:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2054,"id":2071,"nodeType":"Return","src":"4256:26:16"}]},"id":2073,"nodeType":"IfStatement","src":"4135:158:16","trueBody":{"id":2065,"nodeType":"Block","src":"4187:49:16","statements":[{"expression":{"arguments":[{"id":2062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2048,"src":"4219:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}],"id":2061,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"4208:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1865_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4208:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2054,"id":2064,"nodeType":"Return","src":"4201:24:16"}]}}]},"documentation":{"id":2045,"nodeType":"StructuredDocumentation","src":"3641:374:16","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {toShortStringWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2075,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4029:22:16","nodeType":"FunctionDefinition","parameters":{"id":2051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2048,"mutability":"mutable","name":"value","nameLocation":"4064:5:16","nodeType":"VariableDeclaration","scope":2075,"src":"4052:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"},"typeName":{"id":2047,"nodeType":"UserDefinedTypeName","pathNode":{"id":2046,"name":"ShortString","nameLocations":["4052:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1865,"src":"4052:11:16"},"referencedDeclaration":1865,"src":"4052:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2050,"mutability":"mutable","name":"store","nameLocation":"4086:5:16","nodeType":"VariableDeclaration","scope":2075,"src":"4071:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2049,"name":"string","nodeType":"ElementaryTypeName","src":"4071:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4051:41:16"},"returnParameters":{"id":2054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2053,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2075,"src":"4116:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2052,"name":"uint256","nodeType":"ElementaryTypeName","src":"4116:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4115:9:16"},"scope":2076,"src":"4020:279:16","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2077,"src":"1255:3046:16","usedErrors":[1873,1875],"usedEvents":[]}],"src":"106:4196:16"},"id":16},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2200]},"id":2201,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2078,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2079,"nodeType":"StructuredDocumentation","src":"219:1187:17","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":2200,"linearizedBaseContracts":[2200],"name":"StorageSlot","nameLocation":"1415:11:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2082,"members":[{"constant":false,"id":2081,"mutability":"mutable","name":"value","nameLocation":"1470:5:17","nodeType":"VariableDeclaration","scope":2082,"src":"1462:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2080,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:17","nodeType":"StructDefinition","scope":2200,"src":"1433:49:17","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2085,"members":[{"constant":false,"id":2084,"mutability":"mutable","name":"value","nameLocation":"1522:5:17","nodeType":"VariableDeclaration","scope":2085,"src":"1517:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2083,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:17","nodeType":"StructDefinition","scope":2200,"src":"1488:46:17","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2088,"members":[{"constant":false,"id":2087,"mutability":"mutable","name":"value","nameLocation":"1577:5:17","nodeType":"VariableDeclaration","scope":2088,"src":"1569:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2086,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:17","nodeType":"StructDefinition","scope":2200,"src":"1540:49:17","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2091,"members":[{"constant":false,"id":2090,"mutability":"mutable","name":"value","nameLocation":"1632:5:17","nodeType":"VariableDeclaration","scope":2091,"src":"1624:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2089,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:17","nodeType":"StructDefinition","scope":2200,"src":"1595:49:17","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":2094,"members":[{"constant":false,"id":2093,"mutability":"mutable","name":"value","nameLocation":"1685:5:17","nodeType":"VariableDeclaration","scope":2094,"src":"1678:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2092,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:17","nodeType":"StructDefinition","scope":2200,"src":"1650:47:17","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2097,"members":[{"constant":false,"id":2096,"mutability":"mutable","name":"value","nameLocation":"1738:5:17","nodeType":"VariableDeclaration","scope":2097,"src":"1731:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2095,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:17","nodeType":"StructDefinition","scope":2200,"src":"1703:47:17","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2100,"members":[{"constant":false,"id":2099,"mutability":"mutable","name":"value","nameLocation":"1789:5:17","nodeType":"VariableDeclaration","scope":2100,"src":"1783:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2098,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:17","nodeType":"StructDefinition","scope":2200,"src":"1756:45:17","visibility":"public"},{"body":{"id":2110,"nodeType":"Block","src":"1983:79:17","statements":[{"AST":{"nativeSrc":"2018:38:17","nodeType":"YulBlock","src":"2018:38:17","statements":[{"nativeSrc":"2032:14:17","nodeType":"YulAssignment","src":"2032:14:17","value":{"name":"slot","nativeSrc":"2042:4:17","nodeType":"YulIdentifier","src":"2042:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:17","nodeType":"YulIdentifier","src":"2032:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2107,"isOffset":false,"isSlot":true,"src":"2032:6:17","suffix":"slot","valueSize":1},{"declaration":2103,"isOffset":false,"isSlot":false,"src":"2042:4:17","valueSize":1}],"flags":["memory-safe"],"id":2109,"nodeType":"InlineAssembly","src":"1993:63:17"}]},"documentation":{"id":2101,"nodeType":"StructuredDocumentation","src":"1807:87:17","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2111,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:17","nodeType":"FunctionDefinition","parameters":{"id":2104,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2103,"mutability":"mutable","name":"slot","nameLocation":"1931:4:17","nodeType":"VariableDeclaration","scope":2111,"src":"1923:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2102,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:17"},"returnParameters":{"id":2108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2107,"mutability":"mutable","name":"r","nameLocation":"1980:1:17","nodeType":"VariableDeclaration","scope":2111,"src":"1960:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2082_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2106,"nodeType":"UserDefinedTypeName","pathNode":{"id":2105,"name":"AddressSlot","nameLocations":["1960:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2082,"src":"1960:11:17"},"referencedDeclaration":2082,"src":"1960:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2082_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:17"},"scope":2200,"src":"1899:163:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2121,"nodeType":"Block","src":"2243:79:17","statements":[{"AST":{"nativeSrc":"2278:38:17","nodeType":"YulBlock","src":"2278:38:17","statements":[{"nativeSrc":"2292:14:17","nodeType":"YulAssignment","src":"2292:14:17","value":{"name":"slot","nativeSrc":"2302:4:17","nodeType":"YulIdentifier","src":"2302:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:17","nodeType":"YulIdentifier","src":"2292:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2118,"isOffset":false,"isSlot":true,"src":"2292:6:17","suffix":"slot","valueSize":1},{"declaration":2114,"isOffset":false,"isSlot":false,"src":"2302:4:17","valueSize":1}],"flags":["memory-safe"],"id":2120,"nodeType":"InlineAssembly","src":"2253:63:17"}]},"documentation":{"id":2112,"nodeType":"StructuredDocumentation","src":"2068:86:17","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":2122,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:17","nodeType":"FunctionDefinition","parameters":{"id":2115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2114,"mutability":"mutable","name":"slot","nameLocation":"2191:4:17","nodeType":"VariableDeclaration","scope":2122,"src":"2183:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2113,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:17"},"returnParameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2118,"mutability":"mutable","name":"r","nameLocation":"2240:1:17","nodeType":"VariableDeclaration","scope":2122,"src":"2220:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2085_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2117,"nodeType":"UserDefinedTypeName","pathNode":{"id":2116,"name":"BooleanSlot","nameLocations":["2220:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2085,"src":"2220:11:17"},"referencedDeclaration":2085,"src":"2220:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2085_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:17"},"scope":2200,"src":"2159:163:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2132,"nodeType":"Block","src":"2503:79:17","statements":[{"AST":{"nativeSrc":"2538:38:17","nodeType":"YulBlock","src":"2538:38:17","statements":[{"nativeSrc":"2552:14:17","nodeType":"YulAssignment","src":"2552:14:17","value":{"name":"slot","nativeSrc":"2562:4:17","nodeType":"YulIdentifier","src":"2562:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:17","nodeType":"YulIdentifier","src":"2552:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2129,"isOffset":false,"isSlot":true,"src":"2552:6:17","suffix":"slot","valueSize":1},{"declaration":2125,"isOffset":false,"isSlot":false,"src":"2562:4:17","valueSize":1}],"flags":["memory-safe"],"id":2131,"nodeType":"InlineAssembly","src":"2513:63:17"}]},"documentation":{"id":2123,"nodeType":"StructuredDocumentation","src":"2328:86:17","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":2133,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:17","nodeType":"FunctionDefinition","parameters":{"id":2126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2125,"mutability":"mutable","name":"slot","nameLocation":"2451:4:17","nodeType":"VariableDeclaration","scope":2133,"src":"2443:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:17"},"returnParameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"r","nameLocation":"2500:1:17","nodeType":"VariableDeclaration","scope":2133,"src":"2480:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2088_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2128,"nodeType":"UserDefinedTypeName","pathNode":{"id":2127,"name":"Bytes32Slot","nameLocations":["2480:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2088,"src":"2480:11:17"},"referencedDeclaration":2088,"src":"2480:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2088_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:17"},"scope":2200,"src":"2419:163:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2143,"nodeType":"Block","src":"2763:79:17","statements":[{"AST":{"nativeSrc":"2798:38:17","nodeType":"YulBlock","src":"2798:38:17","statements":[{"nativeSrc":"2812:14:17","nodeType":"YulAssignment","src":"2812:14:17","value":{"name":"slot","nativeSrc":"2822:4:17","nodeType":"YulIdentifier","src":"2822:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:17","nodeType":"YulIdentifier","src":"2812:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2140,"isOffset":false,"isSlot":true,"src":"2812:6:17","suffix":"slot","valueSize":1},{"declaration":2136,"isOffset":false,"isSlot":false,"src":"2822:4:17","valueSize":1}],"flags":["memory-safe"],"id":2142,"nodeType":"InlineAssembly","src":"2773:63:17"}]},"documentation":{"id":2134,"nodeType":"StructuredDocumentation","src":"2588:86:17","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":2144,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:17","nodeType":"FunctionDefinition","parameters":{"id":2137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2136,"mutability":"mutable","name":"slot","nameLocation":"2711:4:17","nodeType":"VariableDeclaration","scope":2144,"src":"2703:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:17"},"returnParameters":{"id":2141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"mutability":"mutable","name":"r","nameLocation":"2760:1:17","nodeType":"VariableDeclaration","scope":2144,"src":"2740:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2091_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2139,"nodeType":"UserDefinedTypeName","pathNode":{"id":2138,"name":"Uint256Slot","nameLocations":["2740:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2091,"src":"2740:11:17"},"referencedDeclaration":2091,"src":"2740:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2091_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:17"},"scope":2200,"src":"2679:163:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2154,"nodeType":"Block","src":"3020:79:17","statements":[{"AST":{"nativeSrc":"3055:38:17","nodeType":"YulBlock","src":"3055:38:17","statements":[{"nativeSrc":"3069:14:17","nodeType":"YulAssignment","src":"3069:14:17","value":{"name":"slot","nativeSrc":"3079:4:17","nodeType":"YulIdentifier","src":"3079:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:17","nodeType":"YulIdentifier","src":"3069:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2151,"isOffset":false,"isSlot":true,"src":"3069:6:17","suffix":"slot","valueSize":1},{"declaration":2147,"isOffset":false,"isSlot":false,"src":"3079:4:17","valueSize":1}],"flags":["memory-safe"],"id":2153,"nodeType":"InlineAssembly","src":"3030:63:17"}]},"documentation":{"id":2145,"nodeType":"StructuredDocumentation","src":"2848:85:17","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":2155,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:17","nodeType":"FunctionDefinition","parameters":{"id":2148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"mutability":"mutable","name":"slot","nameLocation":"2969:4:17","nodeType":"VariableDeclaration","scope":2155,"src":"2961:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2146,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:17"},"returnParameters":{"id":2152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2151,"mutability":"mutable","name":"r","nameLocation":"3017:1:17","nodeType":"VariableDeclaration","scope":2155,"src":"2998:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2094_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":2150,"nodeType":"UserDefinedTypeName","pathNode":{"id":2149,"name":"Int256Slot","nameLocations":["2998:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":2094,"src":"2998:10:17"},"referencedDeclaration":2094,"src":"2998:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2094_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:17"},"scope":2200,"src":"2938:161:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2165,"nodeType":"Block","src":"3277:79:17","statements":[{"AST":{"nativeSrc":"3312:38:17","nodeType":"YulBlock","src":"3312:38:17","statements":[{"nativeSrc":"3326:14:17","nodeType":"YulAssignment","src":"3326:14:17","value":{"name":"slot","nativeSrc":"3336:4:17","nodeType":"YulIdentifier","src":"3336:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:17","nodeType":"YulIdentifier","src":"3326:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2162,"isOffset":false,"isSlot":true,"src":"3326:6:17","suffix":"slot","valueSize":1},{"declaration":2158,"isOffset":false,"isSlot":false,"src":"3336:4:17","valueSize":1}],"flags":["memory-safe"],"id":2164,"nodeType":"InlineAssembly","src":"3287:63:17"}]},"documentation":{"id":2156,"nodeType":"StructuredDocumentation","src":"3105:85:17","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":2166,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:17","nodeType":"FunctionDefinition","parameters":{"id":2159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2158,"mutability":"mutable","name":"slot","nameLocation":"3226:4:17","nodeType":"VariableDeclaration","scope":2166,"src":"3218:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2157,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:17"},"returnParameters":{"id":2163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2162,"mutability":"mutable","name":"r","nameLocation":"3274:1:17","nodeType":"VariableDeclaration","scope":2166,"src":"3255:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2097_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2161,"nodeType":"UserDefinedTypeName","pathNode":{"id":2160,"name":"StringSlot","nameLocations":["3255:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":2097,"src":"3255:10:17"},"referencedDeclaration":2097,"src":"3255:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2097_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:17"},"scope":2200,"src":"3195:161:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2176,"nodeType":"Block","src":"3558:85:17","statements":[{"AST":{"nativeSrc":"3593:44:17","nodeType":"YulBlock","src":"3593:44:17","statements":[{"nativeSrc":"3607:20:17","nodeType":"YulAssignment","src":"3607:20:17","value":{"name":"store.slot","nativeSrc":"3617:10:17","nodeType":"YulIdentifier","src":"3617:10:17"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:17","nodeType":"YulIdentifier","src":"3607:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2173,"isOffset":false,"isSlot":true,"src":"3607:6:17","suffix":"slot","valueSize":1},{"declaration":2169,"isOffset":false,"isSlot":true,"src":"3617:10:17","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2175,"nodeType":"InlineAssembly","src":"3568:69:17"}]},"documentation":{"id":2167,"nodeType":"StructuredDocumentation","src":"3362:101:17","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2177,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:17","nodeType":"FunctionDefinition","parameters":{"id":2170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2169,"mutability":"mutable","name":"store","nameLocation":"3506:5:17","nodeType":"VariableDeclaration","scope":2177,"src":"3491:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2168,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:17"},"returnParameters":{"id":2174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2173,"mutability":"mutable","name":"r","nameLocation":"3555:1:17","nodeType":"VariableDeclaration","scope":2177,"src":"3536:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2097_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2172,"nodeType":"UserDefinedTypeName","pathNode":{"id":2171,"name":"StringSlot","nameLocations":["3536:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":2097,"src":"3536:10:17"},"referencedDeclaration":2097,"src":"3536:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2097_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:17"},"scope":2200,"src":"3468:175:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2187,"nodeType":"Block","src":"3818:79:17","statements":[{"AST":{"nativeSrc":"3853:38:17","nodeType":"YulBlock","src":"3853:38:17","statements":[{"nativeSrc":"3867:14:17","nodeType":"YulAssignment","src":"3867:14:17","value":{"name":"slot","nativeSrc":"3877:4:17","nodeType":"YulIdentifier","src":"3877:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:17","nodeType":"YulIdentifier","src":"3867:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2184,"isOffset":false,"isSlot":true,"src":"3867:6:17","suffix":"slot","valueSize":1},{"declaration":2180,"isOffset":false,"isSlot":false,"src":"3877:4:17","valueSize":1}],"flags":["memory-safe"],"id":2186,"nodeType":"InlineAssembly","src":"3828:63:17"}]},"documentation":{"id":2178,"nodeType":"StructuredDocumentation","src":"3649:84:17","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":2188,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:17","nodeType":"FunctionDefinition","parameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2180,"mutability":"mutable","name":"slot","nameLocation":"3768:4:17","nodeType":"VariableDeclaration","scope":2188,"src":"3760:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2179,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:17"},"returnParameters":{"id":2185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2184,"mutability":"mutable","name":"r","nameLocation":"3815:1:17","nodeType":"VariableDeclaration","scope":2188,"src":"3797:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2100_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2183,"nodeType":"UserDefinedTypeName","pathNode":{"id":2182,"name":"BytesSlot","nameLocations":["3797:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2100,"src":"3797:9:17"},"referencedDeclaration":2100,"src":"3797:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2100_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:17"},"scope":2200,"src":"3738:159:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2198,"nodeType":"Block","src":"4094:85:17","statements":[{"AST":{"nativeSrc":"4129:44:17","nodeType":"YulBlock","src":"4129:44:17","statements":[{"nativeSrc":"4143:20:17","nodeType":"YulAssignment","src":"4143:20:17","value":{"name":"store.slot","nativeSrc":"4153:10:17","nodeType":"YulIdentifier","src":"4153:10:17"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:17","nodeType":"YulIdentifier","src":"4143:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2195,"isOffset":false,"isSlot":true,"src":"4143:6:17","suffix":"slot","valueSize":1},{"declaration":2191,"isOffset":false,"isSlot":true,"src":"4153:10:17","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2197,"nodeType":"InlineAssembly","src":"4104:69:17"}]},"documentation":{"id":2189,"nodeType":"StructuredDocumentation","src":"3903:99:17","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2199,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:17","nodeType":"FunctionDefinition","parameters":{"id":2192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2191,"mutability":"mutable","name":"store","nameLocation":"4043:5:17","nodeType":"VariableDeclaration","scope":2199,"src":"4029:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2190,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:17"},"returnParameters":{"id":2196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2195,"mutability":"mutable","name":"r","nameLocation":"4091:1:17","nodeType":"VariableDeclaration","scope":2199,"src":"4073:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2100_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2194,"nodeType":"UserDefinedTypeName","pathNode":{"id":2193,"name":"BytesSlot","nameLocations":["4073:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2100,"src":"4073:9:17"},"referencedDeclaration":2100,"src":"4073:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2100_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:17"},"scope":2200,"src":"4007:172:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2201,"src":"1407:2774:17","usedErrors":[],"usedEvents":[]}],"src":"193:3989:17"},"id":17},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5920],"SafeCast":[7685],"SignedMath":[7829],"Strings":[3602]},"id":3603,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2202,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2204,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3603,"sourceUnit":5921,"src":"127:37:18","symbolAliases":[{"foreign":{"id":2203,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"135:4:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2206,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3603,"sourceUnit":7686,"src":"165:45:18","symbolAliases":[{"foreign":{"id":2205,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"173:8:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2208,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3603,"sourceUnit":7830,"src":"211:49:18","symbolAliases":[{"foreign":{"id":2207,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7829,"src":"219:10:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2209,"nodeType":"StructuredDocumentation","src":"262:34:18","text":" @dev String operations."},"fullyImplemented":true,"id":3602,"linearizedBaseContracts":[3602],"name":"Strings","nameLocation":"305:7:18","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2211,"libraryName":{"id":2210,"name":"SafeCast","nameLocations":["325:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":7685,"src":"325:8:18"},"nodeType":"UsingForDirective","src":"319:21:18"},{"constant":true,"id":2214,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:18","nodeType":"VariableDeclaration","scope":3602,"src":"346:56:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2212,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2217,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:18","nodeType":"VariableDeclaration","scope":3602,"src":"408:42:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2215,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:18","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":2253,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:18","nodeType":"VariableDeclaration","scope":3602,"src":"456:302:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2218,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":2252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":2247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":2242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":2237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":2232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":2227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":2220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2222,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":2225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:18","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:18","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":2226,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:18","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:18","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":2230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":2229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:18","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":2231,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:18","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:18","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":2235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":2234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:18","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:18","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":2236,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:18","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:18","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":2240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:18","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:18","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":2241,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:18","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:18","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":2245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":2244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:18","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:18","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":2246,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:18","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:18","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":2250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":2249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:18","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:18","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":2251,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:18","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:18","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":2254,"nodeType":"StructuredDocumentation","src":"778:81:18","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2260,"name":"StringsInsufficientHexLength","nameLocation":"870:28:18","nodeType":"ErrorDefinition","parameters":{"id":2259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2256,"mutability":"mutable","name":"value","nameLocation":"907:5:18","nodeType":"VariableDeclaration","scope":2260,"src":"899:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2255,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2258,"mutability":"mutable","name":"length","nameLocation":"922:6:18","nodeType":"VariableDeclaration","scope":2260,"src":"914:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2257,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:18"},"src":"864:66:18"},{"documentation":{"id":2261,"nodeType":"StructuredDocumentation","src":"936:108:18","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2263,"name":"StringsInvalidChar","nameLocation":"1055:18:18","nodeType":"ErrorDefinition","parameters":{"id":2262,"nodeType":"ParameterList","parameters":[],"src":"1073:2:18"},"src":"1049:27:18"},{"documentation":{"id":2264,"nodeType":"StructuredDocumentation","src":"1082:84:18","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2266,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:18","nodeType":"ErrorDefinition","parameters":{"id":2265,"nodeType":"ParameterList","parameters":[],"src":"1204:2:18"},"src":"1171:36:18"},{"body":{"id":2313,"nodeType":"Block","src":"1379:563:18","statements":[{"id":2312,"nodeType":"UncheckedBlock","src":"1389:547:18","statements":[{"assignments":[2275],"declarations":[{"constant":false,"id":2275,"mutability":"mutable","name":"length","nameLocation":"1421:6:18","nodeType":"VariableDeclaration","scope":2312,"src":"1413:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2274,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2282,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"1441:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2276,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"1430:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5920_$","typeString":"type(library Math)"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:18","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5752,"src":"1430:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:18"},{"assignments":[2284],"declarations":[{"constant":false,"id":2284,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:18","nodeType":"VariableDeclaration","scope":2312,"src":"1465:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2283,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2289,"initialValue":{"arguments":[{"id":2287,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"1499:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2285,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:18"},{"assignments":[2291],"declarations":[{"constant":false,"id":2291,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:18","nodeType":"VariableDeclaration","scope":2312,"src":"1520:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2290,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2292,"nodeType":"VariableDeclarationStatement","src":"1520:11:18"},{"AST":{"nativeSrc":"1570:69:18","nodeType":"YulBlock","src":"1570:69:18","statements":[{"nativeSrc":"1588:37:18","nodeType":"YulAssignment","src":"1588:37:18","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"1603:6:18","nodeType":"YulIdentifier","src":"1603:6:18"},{"kind":"number","nativeSrc":"1611:4:18","nodeType":"YulLiteral","src":"1611:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1599:3:18","nodeType":"YulIdentifier","src":"1599:3:18"},"nativeSrc":"1599:17:18","nodeType":"YulFunctionCall","src":"1599:17:18"},{"name":"length","nativeSrc":"1618:6:18","nodeType":"YulIdentifier","src":"1618:6:18"}],"functionName":{"name":"add","nativeSrc":"1595:3:18","nodeType":"YulIdentifier","src":"1595:3:18"},"nativeSrc":"1595:30:18","nodeType":"YulFunctionCall","src":"1595:30:18"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:18","nodeType":"YulIdentifier","src":"1588:3:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2284,"isOffset":false,"isSlot":false,"src":"1603:6:18","valueSize":1},{"declaration":2275,"isOffset":false,"isSlot":false,"src":"1618:6:18","valueSize":1},{"declaration":2291,"isOffset":false,"isSlot":false,"src":"1588:3:18","valueSize":1}],"flags":["memory-safe"],"id":2293,"nodeType":"InlineAssembly","src":"1545:94:18"},{"body":{"id":2308,"nodeType":"Block","src":"1665:234:18","statements":[{"expression":{"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:18","subExpression":{"id":2295,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2291,"src":"1683:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2297,"nodeType":"ExpressionStatement","src":"1683:5:18"},{"AST":{"nativeSrc":"1731:86:18","nodeType":"YulBlock","src":"1731:86:18","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1761:3:18","nodeType":"YulIdentifier","src":"1761:3:18"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1775:5:18","nodeType":"YulIdentifier","src":"1775:5:18"},{"kind":"number","nativeSrc":"1782:2:18","nodeType":"YulLiteral","src":"1782:2:18","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1771:3:18","nodeType":"YulIdentifier","src":"1771:3:18"},"nativeSrc":"1771:14:18","nodeType":"YulFunctionCall","src":"1771:14:18"},{"name":"HEX_DIGITS","nativeSrc":"1787:10:18","nodeType":"YulIdentifier","src":"1787:10:18"}],"functionName":{"name":"byte","nativeSrc":"1766:4:18","nodeType":"YulIdentifier","src":"1766:4:18"},"nativeSrc":"1766:32:18","nodeType":"YulFunctionCall","src":"1766:32:18"}],"functionName":{"name":"mstore8","nativeSrc":"1753:7:18","nodeType":"YulIdentifier","src":"1753:7:18"},"nativeSrc":"1753:46:18","nodeType":"YulFunctionCall","src":"1753:46:18"},"nativeSrc":"1753:46:18","nodeType":"YulExpressionStatement","src":"1753:46:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":2214,"isOffset":false,"isSlot":false,"src":"1787:10:18","valueSize":1},{"declaration":2291,"isOffset":false,"isSlot":false,"src":"1761:3:18","valueSize":1},{"declaration":2269,"isOffset":false,"isSlot":false,"src":"1775:5:18","valueSize":1}],"flags":["memory-safe"],"id":2298,"nodeType":"InlineAssembly","src":"1706:111:18"},{"expression":{"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"1834:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2302,"nodeType":"ExpressionStatement","src":"1834:11:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"1867:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2307,"nodeType":"IfStatement","src":"1863:21:18","trueBody":{"id":2306,"nodeType":"Break","src":"1879:5:18"}}]},"condition":{"hexValue":"74727565","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2309,"nodeType":"WhileStatement","src":"1652:247:18"},{"expression":{"id":2310,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2284,"src":"1919:6:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2273,"id":2311,"nodeType":"Return","src":"1912:13:18"}]}]},"documentation":{"id":2267,"nodeType":"StructuredDocumentation","src":"1213:90:18","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2314,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:18","nodeType":"FunctionDefinition","parameters":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2269,"mutability":"mutable","name":"value","nameLocation":"1334:5:18","nodeType":"VariableDeclaration","scope":2314,"src":"1326:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2268,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:18"},"returnParameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2314,"src":"1364:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2271,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:18"},"scope":3602,"src":"1308:634:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2339,"nodeType":"Block","src":"2118:92:18","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"2149:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:18","trueExpression":{"hexValue":"2d","id":2328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"2195:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2332,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7829,"src":"2180:10:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7829_$","typeString":"type(library SignedMath)"}},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:18","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7828,"src":"2180:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2331,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2314,"src":"2171:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2322,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:18","typeDescriptions":{}}},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:18","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:18","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2321,"id":2338,"nodeType":"Return","src":"2128:75:18"}]},"documentation":{"id":2315,"nodeType":"StructuredDocumentation","src":"1948:89:18","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2340,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:18","nodeType":"FunctionDefinition","parameters":{"id":2318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2317,"mutability":"mutable","name":"value","nameLocation":"2073:5:18","nodeType":"VariableDeclaration","scope":2340,"src":"2066:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2316,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:18"},"returnParameters":{"id":2321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2320,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2340,"src":"2103:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2319,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:18"},"scope":3602,"src":"2042:168:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2359,"nodeType":"Block","src":"2389:100:18","statements":[{"id":2358,"nodeType":"UncheckedBlock","src":"2399:84:18","statements":[{"expression":{"arguments":[{"id":2349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"2442:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2343,"src":"2461:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2350,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"2449:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5920_$","typeString":"type(library Math)"}},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:18","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5863,"src":"2449:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2348,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2360,2443,2463],"referencedDeclaration":2443,"src":"2430:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2347,"id":2357,"nodeType":"Return","src":"2423:49:18"}]}]},"documentation":{"id":2341,"nodeType":"StructuredDocumentation","src":"2216:94:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2360,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:18","nodeType":"FunctionDefinition","parameters":{"id":2344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2343,"mutability":"mutable","name":"value","nameLocation":"2344:5:18","nodeType":"VariableDeclaration","scope":2360,"src":"2336:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2342,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:18"},"returnParameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2346,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2360,"src":"2374:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2345,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:18"},"scope":3602,"src":"2315:174:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2442,"nodeType":"Block","src":"2702:435:18","statements":[{"assignments":[2371],"declarations":[{"constant":false,"id":2371,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:18","nodeType":"VariableDeclaration","scope":2442,"src":"2712:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2370,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2373,"initialValue":{"id":2372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"2733:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:18"},{"assignments":[2375],"declarations":[{"constant":false,"id":2375,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:18","nodeType":"VariableDeclaration","scope":2442,"src":"2748:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2374,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2384,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2379,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"2784:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2376,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:18"},{"expression":{"id":2389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2385,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"2805:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2387,"indexExpression":{"hexValue":"30","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2390,"nodeType":"ExpressionStatement","src":"2805:15:18"},{"expression":{"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2391,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"2830:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2393,"indexExpression":{"hexValue":"31","id":2392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2396,"nodeType":"ExpressionStatement","src":"2830:15:18"},{"body":{"id":2425,"nodeType":"Block","src":"2900:95:18","statements":[{"expression":{"id":2419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2411,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"2914:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2413,"indexExpression":{"id":2412,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"2921:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2414,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"2926:10:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2418,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2415,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"2937:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2420,"nodeType":"ExpressionStatement","src":"2914:40:18"},{"expression":{"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2421,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"2968:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2424,"nodeType":"ExpressionStatement","src":"2968:16:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2405,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"2888:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2426,"initializationExpression":{"assignments":[2398],"declarations":[{"constant":false,"id":2398,"mutability":"mutable","name":"i","nameLocation":"2868:1:18","nodeType":"VariableDeclaration","scope":2426,"src":"2860:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2397,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2404,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2400,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"2876:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:18"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:18","subExpression":{"id":2408,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"2897:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2410,"nodeType":"ExpressionStatement","src":"2895:3:18"},"nodeType":"ForStatement","src":"2855:140:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2427,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"3008:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2436,"nodeType":"IfStatement","src":"3004:96:18","trueBody":{"id":2435,"nodeType":"Block","src":"3025:75:18","statements":[{"errorCall":{"arguments":[{"id":2431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"3075:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2432,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"3082:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2430,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"3046:28:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2434,"nodeType":"RevertStatement","src":"3039:50:18"}]}},{"expression":{"arguments":[{"id":2439,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"3123:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2437,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:18","typeDescriptions":{}}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2369,"id":2441,"nodeType":"Return","src":"3109:21:18"}]},"documentation":{"id":2361,"nodeType":"StructuredDocumentation","src":"2495:112:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2443,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:18","nodeType":"FunctionDefinition","parameters":{"id":2366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2363,"mutability":"mutable","name":"value","nameLocation":"2641:5:18","nodeType":"VariableDeclaration","scope":2443,"src":"2633:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2362,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2365,"mutability":"mutable","name":"length","nameLocation":"2656:6:18","nodeType":"VariableDeclaration","scope":2443,"src":"2648:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2364,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:18"},"returnParameters":{"id":2369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2443,"src":"2687:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2367,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:18"},"scope":3602,"src":"2612:525:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2462,"nodeType":"Block","src":"3369:75:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2456,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"3414:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2454,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:18","typeDescriptions":{}}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2452,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:18","typeDescriptions":{}}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2459,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2217,"src":"3422:14:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2451,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2360,2443,2463],"referencedDeclaration":2443,"src":"3386:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2450,"id":2461,"nodeType":"Return","src":"3379:58:18"}]},"documentation":{"id":2444,"nodeType":"StructuredDocumentation","src":"3143:148:18","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2463,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:18","nodeType":"FunctionDefinition","parameters":{"id":2447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2446,"mutability":"mutable","name":"addr","nameLocation":"3325:4:18","nodeType":"VariableDeclaration","scope":2463,"src":"3317:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2445,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:18"},"returnParameters":{"id":2450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2463,"src":"3354:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2448,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:18"},"scope":3602,"src":"3296:148:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2527,"nodeType":"Block","src":"3701:642:18","statements":[{"assignments":[2472],"declarations":[{"constant":false,"id":2472,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:18","nodeType":"VariableDeclaration","scope":2527,"src":"3711:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2471,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2479,"initialValue":{"arguments":[{"arguments":[{"id":2476,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"3751:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2475,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2360,2443,2463],"referencedDeclaration":2463,"src":"3739:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2473,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:18","typeDescriptions":{}}},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:18"},{"assignments":[2481],"declarations":[{"constant":false,"id":2481,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:18","nodeType":"VariableDeclaration","scope":2527,"src":"3842:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2480,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2482,"nodeType":"VariableDeclarationStatement","src":"3842:17:18"},{"AST":{"nativeSrc":"3894:78:18","nodeType":"YulBlock","src":"3894:78:18","statements":[{"nativeSrc":"3908:54:18","nodeType":"YulAssignment","src":"3908:54:18","value":{"arguments":[{"kind":"number","nativeSrc":"3925:2:18","nodeType":"YulLiteral","src":"3925:2:18","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3943:6:18","nodeType":"YulIdentifier","src":"3943:6:18"},{"kind":"number","nativeSrc":"3951:4:18","nodeType":"YulLiteral","src":"3951:4:18","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3939:3:18","nodeType":"YulIdentifier","src":"3939:3:18"},"nativeSrc":"3939:17:18","nodeType":"YulFunctionCall","src":"3939:17:18"},{"kind":"number","nativeSrc":"3958:2:18","nodeType":"YulLiteral","src":"3958:2:18","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3929:9:18","nodeType":"YulIdentifier","src":"3929:9:18"},"nativeSrc":"3929:32:18","nodeType":"YulFunctionCall","src":"3929:32:18"}],"functionName":{"name":"shr","nativeSrc":"3921:3:18","nodeType":"YulIdentifier","src":"3921:3:18"},"nativeSrc":"3921:41:18","nodeType":"YulFunctionCall","src":"3921:41:18"},"variableNames":[{"name":"hashValue","nativeSrc":"3908:9:18","nodeType":"YulIdentifier","src":"3908:9:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2472,"isOffset":false,"isSlot":false,"src":"3943:6:18","valueSize":1},{"declaration":2481,"isOffset":false,"isSlot":false,"src":"3908:9:18","valueSize":1}],"flags":["memory-safe"],"id":2483,"nodeType":"InlineAssembly","src":"3869:103:18"},{"body":{"id":2520,"nodeType":"Block","src":"4015:291:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2494,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"4121:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:18","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2501,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"4150:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2503,"indexExpression":{"id":2502,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"4157:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2499,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:18","typeDescriptions":{}}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:18","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2515,"nodeType":"IfStatement","src":"4117:150:18","trueBody":{"id":2514,"nodeType":"Block","src":"4167:100:18","statements":[{"expression":{"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2508,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"4235:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2510,"indexExpression":{"id":2509,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"4242:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2513,"nodeType":"ExpressionStatement","src":"4235:17:18"}]}},{"expression":{"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2516,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2481,"src":"4280:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2519,"nodeType":"ExpressionStatement","src":"4280:15:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2488,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"4003:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2521,"initializationExpression":{"assignments":[2485],"declarations":[{"constant":false,"id":2485,"mutability":"mutable","name":"i","nameLocation":"3995:1:18","nodeType":"VariableDeclaration","scope":2521,"src":"3987:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2484,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2487,"initialValue":{"hexValue":"3431","id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:18","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:18"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:18","subExpression":{"id":2491,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"4012:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2493,"nodeType":"ExpressionStatement","src":"4010:3:18"},"nodeType":"ForStatement","src":"3982:324:18"},{"expression":{"arguments":[{"id":2524,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"4329:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2522,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:18","typeDescriptions":{}}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2470,"id":2526,"nodeType":"Return","src":"4315:21:18"}]},"documentation":{"id":2464,"nodeType":"StructuredDocumentation","src":"3450:165:18","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2528,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:18","nodeType":"FunctionDefinition","parameters":{"id":2467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"addr","nameLocation":"3657:4:18","nodeType":"VariableDeclaration","scope":2528,"src":"3649:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2465,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:18"},"returnParameters":{"id":2470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2528,"src":"3686:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2468,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:18"},"scope":3602,"src":"3620:723:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2564,"nodeType":"Block","src":"4498:104:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2540,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"4521:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2538,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:18","typeDescriptions":{}}},"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:18","memberName":"length","nodeType":"MemberAccess","src":"4515:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2545,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"4540:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2543,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:18","typeDescriptions":{}}},"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:18","memberName":"length","nodeType":"MemberAccess","src":"4534:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2552,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2531,"src":"4569:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2550,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:18","typeDescriptions":{}}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2549,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2558,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2533,"src":"4592:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2556,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:18","typeDescriptions":{}}},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2555,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2537,"id":2563,"nodeType":"Return","src":"4508:87:18"}]},"documentation":{"id":2529,"nodeType":"StructuredDocumentation","src":"4349:66:18","text":" @dev Returns true if the two strings are equal."},"id":2565,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:18","nodeType":"FunctionDefinition","parameters":{"id":2534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2531,"mutability":"mutable","name":"a","nameLocation":"4449:1:18","nodeType":"VariableDeclaration","scope":2565,"src":"4435:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2530,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2533,"mutability":"mutable","name":"b","nameLocation":"4466:1:18","nodeType":"VariableDeclaration","scope":2565,"src":"4452:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2532,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:18"},"returnParameters":{"id":2537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2565,"src":"4492:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2535,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:18"},"scope":3602,"src":"4420:182:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2583,"nodeType":"Block","src":"4899:64:18","statements":[{"expression":{"arguments":[{"id":2574,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"4926:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2578,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"4942:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2576,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:18","typeDescriptions":{}}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:18","memberName":"length","nodeType":"MemberAccess","src":"4936:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2573,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2584,2615],"referencedDeclaration":2615,"src":"4916:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2572,"id":2582,"nodeType":"Return","src":"4909:47:18"}]},"documentation":{"id":2566,"nodeType":"StructuredDocumentation","src":"4608:214:18","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2584,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:18","nodeType":"FunctionDefinition","parameters":{"id":2569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2568,"mutability":"mutable","name":"input","nameLocation":"4860:5:18","nodeType":"VariableDeclaration","scope":2584,"src":"4846:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2567,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:18"},"returnParameters":{"id":2572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2584,"src":"4890:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2570,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:18"},"scope":3602,"src":"4827:136:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2614,"nodeType":"Block","src":"5368:153:18","statements":[{"assignments":[2597,2599],"declarations":[{"constant":false,"id":2597,"mutability":"mutable","name":"success","nameLocation":"5384:7:18","nodeType":"VariableDeclaration","scope":2614,"src":"5379:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2596,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2599,"mutability":"mutable","name":"value","nameLocation":"5401:5:18","nodeType":"VariableDeclaration","scope":2614,"src":"5393:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2598,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2605,"initialValue":{"arguments":[{"id":2601,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2587,"src":"5423:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2602,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2589,"src":"5430:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2603,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"5437:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2600,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2636,2673],"referencedDeclaration":2673,"src":"5410:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:18"},{"condition":{"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:18","subExpression":{"id":2606,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"5456:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2611,"nodeType":"IfStatement","src":"5451:41:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2608,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"5472:18:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2610,"nodeType":"RevertStatement","src":"5465:27:18"}},{"expression":{"id":2612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"5509:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2595,"id":2613,"nodeType":"Return","src":"5502:12:18"}]},"documentation":{"id":2585,"nodeType":"StructuredDocumentation","src":"4969:294:18","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2615,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:18","nodeType":"FunctionDefinition","parameters":{"id":2592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2587,"mutability":"mutable","name":"input","nameLocation":"5301:5:18","nodeType":"VariableDeclaration","scope":2615,"src":"5287:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2586,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2589,"mutability":"mutable","name":"begin","nameLocation":"5316:5:18","nodeType":"VariableDeclaration","scope":2615,"src":"5308:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2588,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2591,"mutability":"mutable","name":"end","nameLocation":"5331:3:18","nodeType":"VariableDeclaration","scope":2615,"src":"5323:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2590,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:18"},"returnParameters":{"id":2595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2615,"src":"5359:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2593,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:18"},"scope":3602,"src":"5268:253:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2635,"nodeType":"Block","src":"5842:83:18","statements":[{"expression":{"arguments":[{"id":2626,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"5888:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2630,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"5904:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2628,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:18","typeDescriptions":{}}},"id":2631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:18","memberName":"length","nodeType":"MemberAccess","src":"5898:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2625,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"5859:28:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2624,"id":2634,"nodeType":"Return","src":"5852:66:18"}]},"documentation":{"id":2616,"nodeType":"StructuredDocumentation","src":"5527:215:18","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2636,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:18","nodeType":"FunctionDefinition","parameters":{"id":2619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2618,"mutability":"mutable","name":"input","nameLocation":"5783:5:18","nodeType":"VariableDeclaration","scope":2636,"src":"5769:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2617,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:18"},"returnParameters":{"id":2624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2621,"mutability":"mutable","name":"success","nameLocation":"5818:7:18","nodeType":"VariableDeclaration","scope":2636,"src":"5813:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2620,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2623,"mutability":"mutable","name":"value","nameLocation":"5835:5:18","nodeType":"VariableDeclaration","scope":2636,"src":"5827:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2622,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:18"},"scope":3602,"src":"5747:178:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2672,"nodeType":"Block","src":"6327:144:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2650,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"6341:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2653,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"6353:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2651,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:18","typeDescriptions":{}}},"id":2654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:18","memberName":"length","nodeType":"MemberAccess","src":"6347:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2657,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"6370:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2658,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"6378:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2665,"nodeType":"IfStatement","src":"6337:63:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2663,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2649,"id":2664,"nodeType":"Return","src":"6383:17:18"}},{"expression":{"arguments":[{"id":2667,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"6446:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2668,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2641,"src":"6453:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2669,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"6460:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2666,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"6417:28:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2649,"id":2671,"nodeType":"Return","src":"6410:54:18"}]},"documentation":{"id":2637,"nodeType":"StructuredDocumentation","src":"5931:238:18","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2673,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:18","nodeType":"FunctionDefinition","parameters":{"id":2644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2639,"mutability":"mutable","name":"input","nameLocation":"6219:5:18","nodeType":"VariableDeclaration","scope":2673,"src":"6205:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2638,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2641,"mutability":"mutable","name":"begin","nameLocation":"6242:5:18","nodeType":"VariableDeclaration","scope":2673,"src":"6234:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2640,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2643,"mutability":"mutable","name":"end","nameLocation":"6265:3:18","nodeType":"VariableDeclaration","scope":2673,"src":"6257:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2642,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:18"},"returnParameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2646,"mutability":"mutable","name":"success","nameLocation":"6303:7:18","nodeType":"VariableDeclaration","scope":2673,"src":"6298:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2645,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2648,"mutability":"mutable","name":"value","nameLocation":"6320:5:18","nodeType":"VariableDeclaration","scope":2673,"src":"6312:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2647,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:18"},"scope":3602,"src":"6174:297:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2742,"nodeType":"Block","src":"6874:347:18","statements":[{"assignments":[2688],"declarations":[{"constant":false,"id":2688,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:18","nodeType":"VariableDeclaration","scope":2742,"src":"6884:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2687,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2693,"initialValue":{"arguments":[{"id":2691,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"6912:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2689,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:18","typeDescriptions":{}}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:18"},{"assignments":[2695],"declarations":[{"constant":false,"id":2695,"mutability":"mutable","name":"result","nameLocation":"6937:6:18","nodeType":"VariableDeclaration","scope":2742,"src":"6929:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2694,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2697,"initialValue":{"hexValue":"30","id":2696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:18"},{"body":{"id":2736,"nodeType":"Block","src":"6995:189:18","statements":[{"assignments":[2709],"declarations":[{"constant":false,"id":2709,"mutability":"mutable","name":"chr","nameLocation":"7015:3:18","nodeType":"VariableDeclaration","scope":2736,"src":"7009:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2708,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2719,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2714,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2688,"src":"7064:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2715,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"7072:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2713,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"7041:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2711,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:18","typeDescriptions":{}}},"id":2717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2710,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"7021:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2720,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"7094:3:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:18","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2727,"nodeType":"IfStatement","src":"7090:30:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2725,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2686,"id":2726,"nodeType":"Return","src":"7103:17:18"}},{"expression":{"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2728,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"7134:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2731,"nodeType":"ExpressionStatement","src":"7134:12:18"},{"expression":{"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2732,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"7160:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2733,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2709,"src":"7170:3:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2735,"nodeType":"ExpressionStatement","src":"7160:13:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2702,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"6981:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2703,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"6985:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2737,"initializationExpression":{"assignments":[2699],"declarations":[{"constant":false,"id":2699,"mutability":"mutable","name":"i","nameLocation":"6970:1:18","nodeType":"VariableDeclaration","scope":2737,"src":"6962:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2698,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2701,"initialValue":{"id":2700,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"6974:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:18","subExpression":{"id":2705,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"6992:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2707,"nodeType":"ExpressionStatement","src":"6990:3:18"},"nodeType":"ForStatement","src":"6957:227:18"},{"expression":{"components":[{"hexValue":"74727565","id":2738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2739,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"7207:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2740,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2686,"id":2741,"nodeType":"Return","src":"7193:21:18"}]},"documentation":{"id":2674,"nodeType":"StructuredDocumentation","src":"6477:224:18","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2743,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:18","nodeType":"FunctionDefinition","parameters":{"id":2681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2676,"mutability":"mutable","name":"input","nameLocation":"6767:5:18","nodeType":"VariableDeclaration","scope":2743,"src":"6753:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2675,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2678,"mutability":"mutable","name":"begin","nameLocation":"6790:5:18","nodeType":"VariableDeclaration","scope":2743,"src":"6782:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2677,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2680,"mutability":"mutable","name":"end","nameLocation":"6813:3:18","nodeType":"VariableDeclaration","scope":2743,"src":"6805:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2679,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:18"},"returnParameters":{"id":2686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2683,"mutability":"mutable","name":"success","nameLocation":"6850:7:18","nodeType":"VariableDeclaration","scope":2743,"src":"6845:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2682,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2685,"mutability":"mutable","name":"value","nameLocation":"6867:5:18","nodeType":"VariableDeclaration","scope":2743,"src":"6859:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2684,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:18"},"scope":3602,"src":"6706:515:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2761,"nodeType":"Block","src":"7518:63:18","statements":[{"expression":{"arguments":[{"id":2752,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"7544:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2756,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"7560:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2754,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:18","typeDescriptions":{}}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:18","memberName":"length","nodeType":"MemberAccess","src":"7554:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2751,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2762,2793],"referencedDeclaration":2793,"src":"7535:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2750,"id":2760,"nodeType":"Return","src":"7528:46:18"}]},"documentation":{"id":2744,"nodeType":"StructuredDocumentation","src":"7227:216:18","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2762,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:18","nodeType":"FunctionDefinition","parameters":{"id":2747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2746,"mutability":"mutable","name":"input","nameLocation":"7480:5:18","nodeType":"VariableDeclaration","scope":2762,"src":"7466:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2745,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:18"},"returnParameters":{"id":2750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2762,"src":"7510:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2748,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:18"},"scope":3602,"src":"7448:133:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2792,"nodeType":"Block","src":"7986:151:18","statements":[{"assignments":[2775,2777],"declarations":[{"constant":false,"id":2775,"mutability":"mutable","name":"success","nameLocation":"8002:7:18","nodeType":"VariableDeclaration","scope":2792,"src":"7997:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2774,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2777,"mutability":"mutable","name":"value","nameLocation":"8018:5:18","nodeType":"VariableDeclaration","scope":2792,"src":"8011:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2776,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2783,"initialValue":{"arguments":[{"id":2779,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2765,"src":"8039:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2780,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"8046:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2781,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"8053:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2778,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2814,2856],"referencedDeclaration":2856,"src":"8027:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:18"},{"condition":{"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:18","subExpression":{"id":2784,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"8072:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2789,"nodeType":"IfStatement","src":"8067:41:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2786,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"8088:18:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2788,"nodeType":"RevertStatement","src":"8081:27:18"}},{"expression":{"id":2790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"8125:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2773,"id":2791,"nodeType":"Return","src":"8118:12:18"}]},"documentation":{"id":2763,"nodeType":"StructuredDocumentation","src":"7587:296:18","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2793,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:18","nodeType":"FunctionDefinition","parameters":{"id":2770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2765,"mutability":"mutable","name":"input","nameLocation":"7920:5:18","nodeType":"VariableDeclaration","scope":2793,"src":"7906:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2764,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2767,"mutability":"mutable","name":"begin","nameLocation":"7935:5:18","nodeType":"VariableDeclaration","scope":2793,"src":"7927:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2766,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2769,"mutability":"mutable","name":"end","nameLocation":"7950:3:18","nodeType":"VariableDeclaration","scope":2793,"src":"7942:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2768,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:18"},"returnParameters":{"id":2773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2793,"src":"7978:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2771,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:18"},"scope":3602,"src":"7888:249:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2813,"nodeType":"Block","src":"8528:82:18","statements":[{"expression":{"arguments":[{"id":2804,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"8573:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2808,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2796,"src":"8589:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2806,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:18","typeDescriptions":{}}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:18","memberName":"length","nodeType":"MemberAccess","src":"8583:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2803,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"8545:27:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2802,"id":2812,"nodeType":"Return","src":"8538:65:18"}]},"documentation":{"id":2794,"nodeType":"StructuredDocumentation","src":"8143:287:18","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2814,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:18","nodeType":"FunctionDefinition","parameters":{"id":2797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2796,"mutability":"mutable","name":"input","nameLocation":"8470:5:18","nodeType":"VariableDeclaration","scope":2814,"src":"8456:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2795,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:18"},"returnParameters":{"id":2802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2799,"mutability":"mutable","name":"success","nameLocation":"8505:7:18","nodeType":"VariableDeclaration","scope":2814,"src":"8500:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2798,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2801,"mutability":"mutable","name":"value","nameLocation":"8521:5:18","nodeType":"VariableDeclaration","scope":2814,"src":"8514:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2800,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:18"},"scope":3602,"src":"8435:175:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2819,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:18","nodeType":"VariableDeclaration","scope":3602,"src":"8616:50:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2815,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:18","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2855,"nodeType":"Block","src":"9132:143:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2833,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"9146:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2836,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"9158:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2834,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:18","typeDescriptions":{}}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:18","memberName":"length","nodeType":"MemberAccess","src":"9152:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2840,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"9175:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2841,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"9183:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2848,"nodeType":"IfStatement","src":"9142:63:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2846,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2832,"id":2847,"nodeType":"Return","src":"9188:17:18"}},{"expression":{"arguments":[{"id":2850,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"9250:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2851,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"9257:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2852,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2826,"src":"9264:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2849,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"9222:27:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2832,"id":2854,"nodeType":"Return","src":"9215:53:18"}]},"documentation":{"id":2820,"nodeType":"StructuredDocumentation","src":"8673:303:18","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2856,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:18","nodeType":"FunctionDefinition","parameters":{"id":2827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2822,"mutability":"mutable","name":"input","nameLocation":"9025:5:18","nodeType":"VariableDeclaration","scope":2856,"src":"9011:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2821,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2824,"mutability":"mutable","name":"begin","nameLocation":"9048:5:18","nodeType":"VariableDeclaration","scope":2856,"src":"9040:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2823,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2826,"mutability":"mutable","name":"end","nameLocation":"9071:3:18","nodeType":"VariableDeclaration","scope":2856,"src":"9063:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2825,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:18"},"returnParameters":{"id":2832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2829,"mutability":"mutable","name":"success","nameLocation":"9109:7:18","nodeType":"VariableDeclaration","scope":2856,"src":"9104:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2828,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2831,"mutability":"mutable","name":"value","nameLocation":"9125:5:18","nodeType":"VariableDeclaration","scope":2856,"src":"9118:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2830,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:18"},"scope":3602,"src":"8981:294:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2976,"nodeType":"Block","src":"9675:812:18","statements":[{"assignments":[2871],"declarations":[{"constant":false,"id":2871,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:18","nodeType":"VariableDeclaration","scope":2976,"src":"9685:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2870,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2876,"initialValue":{"arguments":[{"id":2874,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"9713:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2872,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:18","typeDescriptions":{}}},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:18"},{"assignments":[2878],"declarations":[{"constant":false,"id":2878,"mutability":"mutable","name":"sign","nameLocation":"9783:4:18","nodeType":"VariableDeclaration","scope":2976,"src":"9776:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2877,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2894,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2879,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9790:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2880,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"9799:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2889,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"9847:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2890,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"9855:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2888,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"9824:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2886,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:18","typeDescriptions":{}}},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:18","trueExpression":{"arguments":[{"hexValue":"30","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2882,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:18","typeDescriptions":{}}},"id":2885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:18"},{"assignments":[2896],"declarations":[{"constant":false,"id":2896,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:18","nodeType":"VariableDeclaration","scope":2976,"src":"9943:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2895,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2903,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2897,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"9963:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2898,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:18","typeDescriptions":{}}},"id":2901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:18"},{"assignments":[2905],"declarations":[{"constant":false,"id":2905,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:18","nodeType":"VariableDeclaration","scope":2976,"src":"9992:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2904,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2912,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2906,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2878,"src":"10012:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2907,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:18","typeDescriptions":{}}},"id":2910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:18"},{"assignments":[2914],"declarations":[{"constant":false,"id":2914,"mutability":"mutable","name":"offset","nameLocation":"10049:6:18","nodeType":"VariableDeclaration","scope":2976,"src":"10041:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2913,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2921,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2915,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2896,"src":"10059:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2916,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"10075:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2918,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"10058:37:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:18"},{"assignments":[2923,2925],"declarations":[{"constant":false,"id":2923,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:18","nodeType":"VariableDeclaration","scope":2976,"src":"10109:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2922,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2925,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:18","nodeType":"VariableDeclaration","scope":2976,"src":"10126:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2924,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2933,"initialValue":{"arguments":[{"id":2927,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"10159:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2928,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"10166:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2929,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"10174:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2931,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2863,"src":"10182:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2926,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2636,2673],"referencedDeclaration":2673,"src":"10146:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:18"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2934,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"10201:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2935,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"10215:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2936,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"10226:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2954,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"10343:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2955,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"10357:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2957,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"10373:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2958,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2819,"src":"10385:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2972,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2869,"id":2973,"nodeType":"Return","src":"10463:17:18"},"id":2974,"nodeType":"IfStatement","src":"10339:141:18","trueBody":{"id":2969,"nodeType":"Block","src":"10401:56:18","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2963,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2962,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:18","memberName":"min","nodeType":"MemberAccess","src":"10429:16:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2967,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2869,"id":2968,"nodeType":"Return","src":"10415:31:18"}]}},"id":2975,"nodeType":"IfStatement","src":"10197:283:18","trueBody":{"id":2953,"nodeType":"Block","src":"10242:91:18","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2940,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"10270:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2948,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"10312:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2946,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:18","typeDescriptions":{}}},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:18","trueExpression":{"id":2945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:18","subExpression":{"arguments":[{"id":2943,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2925,"src":"10293:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2941,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:18","typeDescriptions":{}}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2951,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2869,"id":2952,"nodeType":"Return","src":"10256:66:18"}]}}]},"documentation":{"id":2857,"nodeType":"StructuredDocumentation","src":"9281:223:18","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2977,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:18","nodeType":"FunctionDefinition","parameters":{"id":2864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2859,"mutability":"mutable","name":"input","nameLocation":"9569:5:18","nodeType":"VariableDeclaration","scope":2977,"src":"9555:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2858,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2861,"mutability":"mutable","name":"begin","nameLocation":"9592:5:18","nodeType":"VariableDeclaration","scope":2977,"src":"9584:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2860,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2863,"mutability":"mutable","name":"end","nameLocation":"9615:3:18","nodeType":"VariableDeclaration","scope":2977,"src":"9607:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2862,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:18"},"returnParameters":{"id":2869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2866,"mutability":"mutable","name":"success","nameLocation":"9652:7:18","nodeType":"VariableDeclaration","scope":2977,"src":"9647:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2865,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2868,"mutability":"mutable","name":"value","nameLocation":"9668:5:18","nodeType":"VariableDeclaration","scope":2977,"src":"9661:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2867,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:18"},"scope":3602,"src":"9509:978:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2995,"nodeType":"Block","src":"10832:67:18","statements":[{"expression":{"arguments":[{"id":2986,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"10862:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2990,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2980,"src":"10878:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2988,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:18","typeDescriptions":{}}},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:18","memberName":"length","nodeType":"MemberAccess","src":"10872:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2985,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2996,3027],"referencedDeclaration":3027,"src":"10849:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2984,"id":2994,"nodeType":"Return","src":"10842:50:18"}]},"documentation":{"id":2978,"nodeType":"StructuredDocumentation","src":"10493:259:18","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2996,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:18","nodeType":"FunctionDefinition","parameters":{"id":2981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2980,"mutability":"mutable","name":"input","nameLocation":"10793:5:18","nodeType":"VariableDeclaration","scope":2996,"src":"10779:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2979,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:18"},"returnParameters":{"id":2984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2996,"src":"10823:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2982,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:18"},"scope":3602,"src":"10757:142:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3026,"nodeType":"Block","src":"11320:156:18","statements":[{"assignments":[3009,3011],"declarations":[{"constant":false,"id":3009,"mutability":"mutable","name":"success","nameLocation":"11336:7:18","nodeType":"VariableDeclaration","scope":3026,"src":"11331:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3008,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3011,"mutability":"mutable","name":"value","nameLocation":"11353:5:18","nodeType":"VariableDeclaration","scope":3026,"src":"11345:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3010,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3017,"initialValue":{"arguments":[{"id":3013,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"11378:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3014,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3001,"src":"11385:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3015,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3003,"src":"11392:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3012,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[3048,3085],"referencedDeclaration":3085,"src":"11362:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:18"},{"condition":{"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:18","subExpression":{"id":3018,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"11411:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3023,"nodeType":"IfStatement","src":"11406:41:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3020,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2263,"src":"11427:18:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3022,"nodeType":"RevertStatement","src":"11420:27:18"}},{"expression":{"id":3024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"11464:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3007,"id":3025,"nodeType":"Return","src":"11457:12:18"}]},"documentation":{"id":2997,"nodeType":"StructuredDocumentation","src":"10905:307:18","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3027,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:18","nodeType":"FunctionDefinition","parameters":{"id":3004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2999,"mutability":"mutable","name":"input","nameLocation":"11253:5:18","nodeType":"VariableDeclaration","scope":3027,"src":"11239:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2998,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3001,"mutability":"mutable","name":"begin","nameLocation":"11268:5:18","nodeType":"VariableDeclaration","scope":3027,"src":"11260:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3000,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3003,"mutability":"mutable","name":"end","nameLocation":"11283:3:18","nodeType":"VariableDeclaration","scope":3027,"src":"11275:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3002,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:18"},"returnParameters":{"id":3007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3027,"src":"11311:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3005,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:18"},"scope":3602,"src":"11217:259:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3047,"nodeType":"Block","src":"11803:86:18","statements":[{"expression":{"arguments":[{"id":3038,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"11852:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3042,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"11868:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3040,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:18","typeDescriptions":{}}},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:18","memberName":"length","nodeType":"MemberAccess","src":"11862:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3037,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"11820:31:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3036,"id":3046,"nodeType":"Return","src":"11813:69:18"}]},"documentation":{"id":3028,"nodeType":"StructuredDocumentation","src":"11482:218:18","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3048,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:18","nodeType":"FunctionDefinition","parameters":{"id":3031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"input","nameLocation":"11744:5:18","nodeType":"VariableDeclaration","scope":3048,"src":"11730:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3029,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:18"},"returnParameters":{"id":3036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3033,"mutability":"mutable","name":"success","nameLocation":"11779:7:18","nodeType":"VariableDeclaration","scope":3048,"src":"11774:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3032,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3035,"mutability":"mutable","name":"value","nameLocation":"11796:5:18","nodeType":"VariableDeclaration","scope":3048,"src":"11788:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3034,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:18"},"scope":3602,"src":"11705:184:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3084,"nodeType":"Block","src":"12297:147:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3062,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"12311:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3065,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"12323:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3063,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:18","typeDescriptions":{}}},"id":3066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:18","memberName":"length","nodeType":"MemberAccess","src":"12317:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3069,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"12340:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3070,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"12348:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3077,"nodeType":"IfStatement","src":"12307:63:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3075,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3061,"id":3076,"nodeType":"Return","src":"12353:17:18"}},{"expression":{"arguments":[{"id":3079,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"12419:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3080,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3053,"src":"12426:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3081,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3055,"src":"12433:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3078,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"12387:31:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3061,"id":3083,"nodeType":"Return","src":"12380:57:18"}]},"documentation":{"id":3049,"nodeType":"StructuredDocumentation","src":"11895:241:18","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3085,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:18","nodeType":"FunctionDefinition","parameters":{"id":3056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3051,"mutability":"mutable","name":"input","nameLocation":"12189:5:18","nodeType":"VariableDeclaration","scope":3085,"src":"12175:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3050,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3053,"mutability":"mutable","name":"begin","nameLocation":"12212:5:18","nodeType":"VariableDeclaration","scope":3085,"src":"12204:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3052,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3055,"mutability":"mutable","name":"end","nameLocation":"12235:3:18","nodeType":"VariableDeclaration","scope":3085,"src":"12227:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3054,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:18"},"returnParameters":{"id":3061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3058,"mutability":"mutable","name":"success","nameLocation":"12273:7:18","nodeType":"VariableDeclaration","scope":3085,"src":"12268:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3057,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3060,"mutability":"mutable","name":"value","nameLocation":"12290:5:18","nodeType":"VariableDeclaration","scope":3085,"src":"12282:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:18"},"scope":3602,"src":"12141:303:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3187,"nodeType":"Block","src":"12853:881:18","statements":[{"assignments":[3100],"declarations":[{"constant":false,"id":3100,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:18","nodeType":"VariableDeclaration","scope":3187,"src":"12863:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3099,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3105,"initialValue":{"arguments":[{"id":3103,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"12891:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3101,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:18","typeDescriptions":{}}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:18"},{"assignments":[3107],"declarations":[{"constant":false,"id":3107,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:18","nodeType":"VariableDeclaration","scope":3187,"src":"12945:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3106,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3127,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3108,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"12963:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3109,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"12969:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3113,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3117,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"13013:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3118,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"13021:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3116,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"12990:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3114,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:18","typeDescriptions":{}}},"id":3120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3121,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:18","typeDescriptions":{}}},"id":3124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:18"},{"assignments":[3129],"declarations":[{"constant":false,"id":3129,"mutability":"mutable","name":"offset","nameLocation":"13133:6:18","nodeType":"VariableDeclaration","scope":3187,"src":"13125:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3128,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3135,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3130,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"13142:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"13142:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:18"},{"assignments":[3137],"declarations":[{"constant":false,"id":3137,"mutability":"mutable","name":"result","nameLocation":"13183:6:18","nodeType":"VariableDeclaration","scope":3187,"src":"13175:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3136,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3139,"initialValue":{"hexValue":"30","id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:18"},{"body":{"id":3181,"nodeType":"Block","src":"13250:447:18","statements":[{"assignments":[3153],"declarations":[{"constant":false,"id":3153,"mutability":"mutable","name":"chr","nameLocation":"13270:3:18","nodeType":"VariableDeclaration","scope":3181,"src":"13264:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3152,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3163,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3158,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"13319:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3159,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"13327:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3157,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"13296:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3155,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:18","typeDescriptions":{}}},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3154,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3423,"src":"13276:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3164,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"13349:3:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3171,"nodeType":"IfStatement","src":"13345:31:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3169,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3098,"id":3170,"nodeType":"Return","src":"13359:17:18"}},{"expression":{"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3172,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"13390:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3175,"nodeType":"ExpressionStatement","src":"13390:12:18"},{"id":3180,"nodeType":"UncheckedBlock","src":"13416:271:18","statements":[{"expression":{"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3176,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"13659:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3177,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"13669:3:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3179,"nodeType":"ExpressionStatement","src":"13659:13:18"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3146,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"13236:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3147,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"13240:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3182,"initializationExpression":{"assignments":[3141],"declarations":[{"constant":false,"id":3141,"mutability":"mutable","name":"i","nameLocation":"13216:1:18","nodeType":"VariableDeclaration","scope":3182,"src":"13208:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3140,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3145,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3142,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"13220:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3143,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"13228:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:18","subExpression":{"id":3149,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"13247:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3151,"nodeType":"ExpressionStatement","src":"13245:3:18"},"nodeType":"ForStatement","src":"13203:494:18"},{"expression":{"components":[{"hexValue":"74727565","id":3183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3184,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3137,"src":"13720:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3185,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3098,"id":3186,"nodeType":"Return","src":"13706:21:18"}]},"documentation":{"id":3086,"nodeType":"StructuredDocumentation","src":"12450:227:18","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3188,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:18","nodeType":"FunctionDefinition","parameters":{"id":3093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"input","nameLocation":"12746:5:18","nodeType":"VariableDeclaration","scope":3188,"src":"12732:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3087,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3090,"mutability":"mutable","name":"begin","nameLocation":"12769:5:18","nodeType":"VariableDeclaration","scope":3188,"src":"12761:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3089,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3092,"mutability":"mutable","name":"end","nameLocation":"12792:3:18","nodeType":"VariableDeclaration","scope":3188,"src":"12784:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3091,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:18"},"returnParameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3095,"mutability":"mutable","name":"success","nameLocation":"12829:7:18","nodeType":"VariableDeclaration","scope":3188,"src":"12824:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3094,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3097,"mutability":"mutable","name":"value","nameLocation":"12846:5:18","nodeType":"VariableDeclaration","scope":3188,"src":"12838:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3096,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:18"},"scope":3602,"src":"12682:1052:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3206,"nodeType":"Block","src":"14032:67:18","statements":[{"expression":{"arguments":[{"id":3197,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"14062:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3201,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"14078:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3199,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:18","typeDescriptions":{}}},"id":3202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:18","memberName":"length","nodeType":"MemberAccess","src":"14072:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3196,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3207,3238],"referencedDeclaration":3238,"src":"14049:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3195,"id":3205,"nodeType":"Return","src":"14042:50:18"}]},"documentation":{"id":3189,"nodeType":"StructuredDocumentation","src":"13740:212:18","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3207,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:18","nodeType":"FunctionDefinition","parameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3191,"mutability":"mutable","name":"input","nameLocation":"13993:5:18","nodeType":"VariableDeclaration","scope":3207,"src":"13979:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3190,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:18"},"returnParameters":{"id":3195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3207,"src":"14023:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3193,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:18"},"scope":3602,"src":"13957:142:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3237,"nodeType":"Block","src":"14472:165:18","statements":[{"assignments":[3220,3222],"declarations":[{"constant":false,"id":3220,"mutability":"mutable","name":"success","nameLocation":"14488:7:18","nodeType":"VariableDeclaration","scope":3237,"src":"14483:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3219,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3222,"mutability":"mutable","name":"value","nameLocation":"14505:5:18","nodeType":"VariableDeclaration","scope":3237,"src":"14497:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3221,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3228,"initialValue":{"arguments":[{"id":3224,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"14530:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3225,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"14537:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3226,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3214,"src":"14544:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3223,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3259,3363],"referencedDeclaration":3363,"src":"14514:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:18"},{"condition":{"id":3230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:18","subExpression":{"id":3229,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"14563:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3234,"nodeType":"IfStatement","src":"14558:50:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3231,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"14579:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3233,"nodeType":"RevertStatement","src":"14572:36:18"}},{"expression":{"id":3235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"14625:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3218,"id":3236,"nodeType":"Return","src":"14618:12:18"}]},"documentation":{"id":3208,"nodeType":"StructuredDocumentation","src":"14105:259:18","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3238,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:18","nodeType":"FunctionDefinition","parameters":{"id":3215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3210,"mutability":"mutable","name":"input","nameLocation":"14405:5:18","nodeType":"VariableDeclaration","scope":3238,"src":"14391:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3209,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3212,"mutability":"mutable","name":"begin","nameLocation":"14420:5:18","nodeType":"VariableDeclaration","scope":3238,"src":"14412:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3211,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3214,"mutability":"mutable","name":"end","nameLocation":"14435:3:18","nodeType":"VariableDeclaration","scope":3238,"src":"14427:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3213,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:18"},"returnParameters":{"id":3218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3238,"src":"14463:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3216,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:18"},"scope":3602,"src":"14369:268:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3258,"nodeType":"Block","src":"14944:70:18","statements":[{"expression":{"arguments":[{"id":3249,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"14977:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3253,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3241,"src":"14993:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3251,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:18","typeDescriptions":{}}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:18","memberName":"length","nodeType":"MemberAccess","src":"14987:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3248,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3259,3363],"referencedDeclaration":3363,"src":"14961:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3247,"id":3257,"nodeType":"Return","src":"14954:53:18"}]},"documentation":{"id":3239,"nodeType":"StructuredDocumentation","src":"14643:198:18","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":3259,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:18","nodeType":"FunctionDefinition","parameters":{"id":3242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3241,"mutability":"mutable","name":"input","nameLocation":"14885:5:18","nodeType":"VariableDeclaration","scope":3259,"src":"14871:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3240,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:18"},"returnParameters":{"id":3247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3244,"mutability":"mutable","name":"success","nameLocation":"14920:7:18","nodeType":"VariableDeclaration","scope":3259,"src":"14915:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3243,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3246,"mutability":"mutable","name":"value","nameLocation":"14937:5:18","nodeType":"VariableDeclaration","scope":3259,"src":"14929:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3245,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:18"},"scope":3602,"src":"14846:168:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3362,"nodeType":"Block","src":"15407:733:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3273,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"15421:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3276,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"15433:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3274,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:18","typeDescriptions":{}}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:18","memberName":"length","nodeType":"MemberAccess","src":"15427:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3280,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"15450:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3281,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"15458:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3291,"nodeType":"IfStatement","src":"15417:72:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3285,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:18","typeDescriptions":{}}},"id":3288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3289,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3272,"id":3290,"nodeType":"Return","src":"15463:26:18"}},{"assignments":[3293],"declarations":[{"constant":false,"id":3293,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:18","nodeType":"VariableDeclaration","scope":3362,"src":"15500:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3292,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3316,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3294,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"15518:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3295,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"15524:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3299,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3305,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"15574:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3303,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:18","typeDescriptions":{}}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3307,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"15582:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3302,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"15545:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3300,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:18","typeDescriptions":{}}},"id":3309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3310,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:18","typeDescriptions":{}}},"id":3313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:18"},{"assignments":[3318],"declarations":[{"constant":false,"id":3318,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:18","nodeType":"VariableDeclaration","scope":3362,"src":"15686:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3317,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3326,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:18","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3320,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"15716:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"15716:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3327,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"15803:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3328,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"15809:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3330,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"15818:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3360,"nodeType":"Block","src":"16083:51:18","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3354,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:18","typeDescriptions":{}}},"id":3357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3358,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3272,"id":3359,"nodeType":"Return","src":"16097:26:18"}]},"id":3361,"nodeType":"IfStatement","src":"15799:335:18","trueBody":{"id":3352,"nodeType":"Block","src":"15834:243:18","statements":[{"assignments":[3333,3335],"declarations":[{"constant":false,"id":3333,"mutability":"mutable","name":"s","nameLocation":"15955:1:18","nodeType":"VariableDeclaration","scope":3352,"src":"15950:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3332,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3335,"mutability":"mutable","name":"v","nameLocation":"15966:1:18","nodeType":"VariableDeclaration","scope":3352,"src":"15958:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3334,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3341,"initialValue":{"arguments":[{"id":3337,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"16003:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3338,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3264,"src":"16010:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3339,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"16017:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3336,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"15971:31:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:18"},{"expression":{"components":[{"id":3342,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3333,"src":"16043:1:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3347,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"16062:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3345,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:18","typeDescriptions":{}}},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3343,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:18","typeDescriptions":{}}},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3350,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3272,"id":3351,"nodeType":"Return","src":"16035:31:18"}]}}]},"documentation":{"id":3260,"nodeType":"StructuredDocumentation","src":"15020:226:18","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":3363,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:18","nodeType":"FunctionDefinition","parameters":{"id":3267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3262,"mutability":"mutable","name":"input","nameLocation":"15299:5:18","nodeType":"VariableDeclaration","scope":3363,"src":"15285:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3261,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3264,"mutability":"mutable","name":"begin","nameLocation":"15322:5:18","nodeType":"VariableDeclaration","scope":3363,"src":"15314:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3263,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3266,"mutability":"mutable","name":"end","nameLocation":"15345:3:18","nodeType":"VariableDeclaration","scope":3363,"src":"15337:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3265,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:18"},"returnParameters":{"id":3272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3269,"mutability":"mutable","name":"success","nameLocation":"15383:7:18","nodeType":"VariableDeclaration","scope":3363,"src":"15378:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3268,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3271,"mutability":"mutable","name":"value","nameLocation":"15400:5:18","nodeType":"VariableDeclaration","scope":3363,"src":"15392:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3270,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:18"},"scope":3602,"src":"15251:889:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3422,"nodeType":"Block","src":"16209:461:18","statements":[{"assignments":[3371],"declarations":[{"constant":false,"id":3371,"mutability":"mutable","name":"value","nameLocation":"16225:5:18","nodeType":"VariableDeclaration","scope":3422,"src":"16219:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3370,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3376,"initialValue":{"arguments":[{"id":3374,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"16239:3:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3372,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:18","typeDescriptions":{}}},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:18"},{"id":3419,"nodeType":"UncheckedBlock","src":"16403:238:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"16431:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:18","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"16445:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:18","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"16491:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:18","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"16505:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:18","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"16552:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"16566:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:18","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3411,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3410,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:18","memberName":"max","nodeType":"MemberAccess","src":"16615:15:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3369,"id":3415,"nodeType":"Return","src":"16608:22:18"},"id":3416,"nodeType":"IfStatement","src":"16548:82:18","trueBody":{"expression":{"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"16578:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:18","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3409,"nodeType":"ExpressionStatement","src":"16578:11:18"}},"id":3417,"nodeType":"IfStatement","src":"16487:143:18","trueBody":{"expression":{"id":3397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"16518:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:18","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3398,"nodeType":"ExpressionStatement","src":"16518:11:18"}},"id":3418,"nodeType":"IfStatement","src":"16427:203:18","trueBody":{"expression":{"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"16457:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:18","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3387,"nodeType":"ExpressionStatement","src":"16457:11:18"}}]},{"expression":{"id":3420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"16658:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3369,"id":3421,"nodeType":"Return","src":"16651:12:18"}]},"id":3423,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:18","nodeType":"FunctionDefinition","parameters":{"id":3366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3365,"mutability":"mutable","name":"chr","nameLocation":"16175:3:18","nodeType":"VariableDeclaration","scope":3423,"src":"16168:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3364,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:18"},"returnParameters":{"id":3369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3423,"src":"16202:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3367,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:18"},"scope":3602,"src":"16146:524:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3588,"nodeType":"Block","src":"17336:1331:18","statements":[{"assignments":[3432],"declarations":[{"constant":false,"id":3432,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:18","nodeType":"VariableDeclaration","scope":3588,"src":"17346:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3431,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3437,"initialValue":{"arguments":[{"id":3435,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"17374:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3433,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:18","typeDescriptions":{}}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:18"},{"assignments":[3439],"declarations":[{"constant":false,"id":3439,"mutability":"mutable","name":"output","nameLocation":"17403:6:18","nodeType":"VariableDeclaration","scope":3588,"src":"17390:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3438,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3447,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3443,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"17426:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:18","memberName":"length","nodeType":"MemberAccess","src":"17426:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3440,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:18"},{"assignments":[3449],"declarations":[{"constant":false,"id":3449,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:18","nodeType":"VariableDeclaration","scope":3588,"src":"17473:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3448,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3451,"initialValue":{"hexValue":"30","id":3450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:18"},{"body":{"id":3580,"nodeType":"Block","src":"17548:854:18","statements":[{"assignments":[3463],"declarations":[{"constant":false,"id":3463,"mutability":"mutable","name":"char","nameLocation":"17569:4:18","nodeType":"VariableDeclaration","scope":3580,"src":"17562:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3462,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3471,"initialValue":{"arguments":[{"arguments":[{"id":3467,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"17606:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3468,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"17614:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3466,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"17583:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3464,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:18","typeDescriptions":{}}},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:18"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3472,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"17637:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":3476,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"17672:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3474,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:18","typeDescriptions":{}}},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3479,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3481,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3484,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3578,"nodeType":"Block","src":"18330:62:18","statements":[{"expression":{"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3571,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"18348:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3574,"indexExpression":{"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:18","subExpression":{"id":3572,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"18355:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3575,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"18373:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3577,"nodeType":"ExpressionStatement","src":"18348:29:18"}]},"id":3579,"nodeType":"IfStatement","src":"17631:761:18","trueBody":{"id":3570,"nodeType":"Block","src":"17687:637:18","statements":[{"expression":{"id":3490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3485,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"17705:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3488,"indexExpression":{"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:18","subExpression":{"id":3486,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"17712:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3491,"nodeType":"ExpressionStatement","src":"17705:29:18"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3492,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"17756:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3502,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"17825:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:18","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3512,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"17894:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3522,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"17963:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:18","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3532,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"18032:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:18","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3542,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"18101:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:18","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3552,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"18171:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:18","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3563,"nodeType":"IfStatement","src":"18167:143:18","trueBody":{"id":3562,"nodeType":"Block","src":"18185:125:18","statements":[{"expression":{"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3555,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"18263:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3558,"indexExpression":{"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:18","subExpression":{"id":3556,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"18270:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3561,"nodeType":"ExpressionStatement","src":"18263:28:18"}]}},"id":3564,"nodeType":"IfStatement","src":"18097:213:18","trueBody":{"expression":{"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3545,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"18115:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3548,"indexExpression":{"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:18","subExpression":{"id":3546,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"18122:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3551,"nodeType":"ExpressionStatement","src":"18115:29:18"}},"id":3565,"nodeType":"IfStatement","src":"18028:282:18","trueBody":{"expression":{"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3535,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"18046:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3538,"indexExpression":{"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:18","subExpression":{"id":3536,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"18053:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3541,"nodeType":"ExpressionStatement","src":"18046:28:18"}},"id":3566,"nodeType":"IfStatement","src":"17959:351:18","trueBody":{"expression":{"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3525,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"17977:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3528,"indexExpression":{"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:18","subExpression":{"id":3526,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"17984:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3531,"nodeType":"ExpressionStatement","src":"17977:28:18"}},"id":3567,"nodeType":"IfStatement","src":"17890:420:18","trueBody":{"expression":{"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3515,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"17908:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3518,"indexExpression":{"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:18","subExpression":{"id":3516,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"17915:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3521,"nodeType":"ExpressionStatement","src":"17908:28:18"}},"id":3568,"nodeType":"IfStatement","src":"17821:489:18","trueBody":{"expression":{"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3505,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"17839:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3508,"indexExpression":{"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:18","subExpression":{"id":3506,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"17846:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3511,"nodeType":"ExpressionStatement","src":"17839:28:18"}},"id":3569,"nodeType":"IfStatement","src":"17752:558:18","trueBody":{"expression":{"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3495,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"17770:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3498,"indexExpression":{"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:18","subExpression":{"id":3496,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3449,"src":"17777:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":3499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3501,"nodeType":"ExpressionStatement","src":"17770:28:18"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3455,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"17524:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3456,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3432,"src":"17528:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:18","memberName":"length","nodeType":"MemberAccess","src":"17528:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3581,"initializationExpression":{"assignments":[3453],"declarations":[{"constant":false,"id":3453,"mutability":"mutable","name":"i","nameLocation":"17521:1:18","nodeType":"VariableDeclaration","scope":3581,"src":"17513:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3452,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3454,"nodeType":"VariableDeclarationStatement","src":"17513:9:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:18","subExpression":{"id":3459,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"17545:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3461,"nodeType":"ExpressionStatement","src":"17543:3:18"},"nodeType":"ForStatement","src":"17508:894:18"},{"AST":{"nativeSrc":"18500:129:18","nodeType":"YulBlock","src":"18500:129:18","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18521:6:18","nodeType":"YulIdentifier","src":"18521:6:18"},{"name":"outputLength","nativeSrc":"18529:12:18","nodeType":"YulIdentifier","src":"18529:12:18"}],"functionName":{"name":"mstore","nativeSrc":"18514:6:18","nodeType":"YulIdentifier","src":"18514:6:18"},"nativeSrc":"18514:28:18","nodeType":"YulFunctionCall","src":"18514:28:18"},"nativeSrc":"18514:28:18","nodeType":"YulExpressionStatement","src":"18514:28:18"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18562:4:18","nodeType":"YulLiteral","src":"18562:4:18","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18572:6:18","nodeType":"YulIdentifier","src":"18572:6:18"},{"arguments":[{"kind":"number","nativeSrc":"18584:1:18","nodeType":"YulLiteral","src":"18584:1:18","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18591:1:18","nodeType":"YulLiteral","src":"18591:1:18","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18598:12:18","nodeType":"YulIdentifier","src":"18598:12:18"},{"kind":"number","nativeSrc":"18612:2:18","nodeType":"YulLiteral","src":"18612:2:18","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18594:3:18","nodeType":"YulIdentifier","src":"18594:3:18"},"nativeSrc":"18594:21:18","nodeType":"YulFunctionCall","src":"18594:21:18"}],"functionName":{"name":"shr","nativeSrc":"18587:3:18","nodeType":"YulIdentifier","src":"18587:3:18"},"nativeSrc":"18587:29:18","nodeType":"YulFunctionCall","src":"18587:29:18"}],"functionName":{"name":"shl","nativeSrc":"18580:3:18","nodeType":"YulIdentifier","src":"18580:3:18"},"nativeSrc":"18580:37:18","nodeType":"YulFunctionCall","src":"18580:37:18"}],"functionName":{"name":"add","nativeSrc":"18568:3:18","nodeType":"YulIdentifier","src":"18568:3:18"},"nativeSrc":"18568:50:18","nodeType":"YulFunctionCall","src":"18568:50:18"}],"functionName":{"name":"mstore","nativeSrc":"18555:6:18","nodeType":"YulIdentifier","src":"18555:6:18"},"nativeSrc":"18555:64:18","nodeType":"YulFunctionCall","src":"18555:64:18"},"nativeSrc":"18555:64:18","nodeType":"YulExpressionStatement","src":"18555:64:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":3439,"isOffset":false,"isSlot":false,"src":"18521:6:18","valueSize":1},{"declaration":3439,"isOffset":false,"isSlot":false,"src":"18572:6:18","valueSize":1},{"declaration":3449,"isOffset":false,"isSlot":false,"src":"18529:12:18","valueSize":1},{"declaration":3449,"isOffset":false,"isSlot":false,"src":"18598:12:18","valueSize":1}],"flags":["memory-safe"],"id":3582,"nodeType":"InlineAssembly","src":"18475:154:18"},{"expression":{"arguments":[{"id":3585,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"18653:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3583,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:18","typeDescriptions":{}}},"id":3586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3430,"id":3587,"nodeType":"Return","src":"18639:21:18"}]},"documentation":{"id":3424,"nodeType":"StructuredDocumentation","src":"16676:576:18","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":3589,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:18","nodeType":"FunctionDefinition","parameters":{"id":3427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3426,"mutability":"mutable","name":"input","nameLocation":"17291:5:18","nodeType":"VariableDeclaration","scope":3589,"src":"17277:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3425,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:18"},"returnParameters":{"id":3430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3589,"src":"17321:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3428,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:18"},"scope":3602,"src":"17257:1410:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3600,"nodeType":"Block","src":"19052:225:18","statements":[{"AST":{"nativeSrc":"19201:70:18","nodeType":"YulBlock","src":"19201:70:18","statements":[{"nativeSrc":"19215:46:18","nodeType":"YulAssignment","src":"19215:46:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19238:6:18","nodeType":"YulIdentifier","src":"19238:6:18"},{"kind":"number","nativeSrc":"19246:4:18","nodeType":"YulLiteral","src":"19246:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19234:3:18","nodeType":"YulIdentifier","src":"19234:3:18"},"nativeSrc":"19234:17:18","nodeType":"YulFunctionCall","src":"19234:17:18"},{"name":"offset","nativeSrc":"19253:6:18","nodeType":"YulIdentifier","src":"19253:6:18"}],"functionName":{"name":"add","nativeSrc":"19230:3:18","nodeType":"YulIdentifier","src":"19230:3:18"},"nativeSrc":"19230:30:18","nodeType":"YulFunctionCall","src":"19230:30:18"}],"functionName":{"name":"mload","nativeSrc":"19224:5:18","nodeType":"YulIdentifier","src":"19224:5:18"},"nativeSrc":"19224:37:18","nodeType":"YulFunctionCall","src":"19224:37:18"},"variableNames":[{"name":"value","nativeSrc":"19215:5:18","nodeType":"YulIdentifier","src":"19215:5:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3592,"isOffset":false,"isSlot":false,"src":"19238:6:18","valueSize":1},{"declaration":3594,"isOffset":false,"isSlot":false,"src":"19253:6:18","valueSize":1},{"declaration":3597,"isOffset":false,"isSlot":false,"src":"19215:5:18","valueSize":1}],"flags":["memory-safe"],"id":3599,"nodeType":"InlineAssembly","src":"19176:95:18"}]},"documentation":{"id":3590,"nodeType":"StructuredDocumentation","src":"18673:268:18","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3601,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:18","nodeType":"FunctionDefinition","parameters":{"id":3595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3592,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:18","nodeType":"VariableDeclaration","scope":3601,"src":"18978:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3591,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3594,"mutability":"mutable","name":"offset","nameLocation":"19007:6:18","nodeType":"VariableDeclaration","scope":3601,"src":"18999:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3593,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:18"},"returnParameters":{"id":3598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3597,"mutability":"mutable","name":"value","nameLocation":"19045:5:18","nodeType":"VariableDeclaration","scope":3601,"src":"19037:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:18"},"scope":3602,"src":"18946:331:18","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3603,"src":"297:18982:18","usedErrors":[2260,2263,2266],"usedEvents":[]}],"src":"101:19179:18"},"id":18},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3950]},"id":3951,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3604,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3605,"nodeType":"StructuredDocumentation","src":"138:205:19","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3950,"linearizedBaseContracts":[3950],"name":"ECDSA","nameLocation":"352:5:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3610,"members":[{"id":3606,"name":"NoError","nameLocation":"392:7:19","nodeType":"EnumValue","src":"392:7:19"},{"id":3607,"name":"InvalidSignature","nameLocation":"409:16:19","nodeType":"EnumValue","src":"409:16:19"},{"id":3608,"name":"InvalidSignatureLength","nameLocation":"435:22:19","nodeType":"EnumValue","src":"435:22:19"},{"id":3609,"name":"InvalidSignatureS","nameLocation":"467:17:19","nodeType":"EnumValue","src":"467:17:19"}],"name":"RecoverError","nameLocation":"369:12:19","nodeType":"EnumDefinition","src":"364:126:19"},{"documentation":{"id":3611,"nodeType":"StructuredDocumentation","src":"496:63:19","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3613,"name":"ECDSAInvalidSignature","nameLocation":"570:21:19","nodeType":"ErrorDefinition","parameters":{"id":3612,"nodeType":"ParameterList","parameters":[],"src":"591:2:19"},"src":"564:30:19"},{"documentation":{"id":3614,"nodeType":"StructuredDocumentation","src":"600:60:19","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3618,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:19","nodeType":"ErrorDefinition","parameters":{"id":3617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3616,"mutability":"mutable","name":"length","nameLocation":"707:6:19","nodeType":"VariableDeclaration","scope":3618,"src":"699:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3615,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:19"},"src":"665:50:19"},{"documentation":{"id":3619,"nodeType":"StructuredDocumentation","src":"721:85:19","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3623,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:19","nodeType":"ErrorDefinition","parameters":{"id":3622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3621,"mutability":"mutable","name":"s","nameLocation":"848:1:19","nodeType":"VariableDeclaration","scope":3623,"src":"840:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:19"},"src":"811:40:19"},{"body":{"id":3675,"nodeType":"Block","src":"2285:622:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3638,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"2299:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:19","memberName":"length","nodeType":"MemberAccess","src":"2299:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:19","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3673,"nodeType":"Block","src":"2793:108:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3660,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:19","typeDescriptions":{}}},"id":3663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3664,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"2827:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3610_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:19","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3608,"src":"2827:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3668,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"2872:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:19","memberName":"length","nodeType":"MemberAccess","src":"2872:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:19","typeDescriptions":{}}},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3671,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3610_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3637,"id":3672,"nodeType":"Return","src":"2807:83:19"}]},"id":3674,"nodeType":"IfStatement","src":"2295:606:19","trueBody":{"id":3659,"nodeType":"Block","src":"2323:464:19","statements":[{"assignments":[3643],"declarations":[{"constant":false,"id":3643,"mutability":"mutable","name":"r","nameLocation":"2345:1:19","nodeType":"VariableDeclaration","scope":3659,"src":"2337:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3642,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3644,"nodeType":"VariableDeclarationStatement","src":"2337:9:19"},{"assignments":[3646],"declarations":[{"constant":false,"id":3646,"mutability":"mutable","name":"s","nameLocation":"2368:1:19","nodeType":"VariableDeclaration","scope":3659,"src":"2360:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3647,"nodeType":"VariableDeclarationStatement","src":"2360:9:19"},{"assignments":[3649],"declarations":[{"constant":false,"id":3649,"mutability":"mutable","name":"v","nameLocation":"2389:1:19","nodeType":"VariableDeclaration","scope":3659,"src":"2383:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3648,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3650,"nodeType":"VariableDeclarationStatement","src":"2383:7:19"},{"AST":{"nativeSrc":"2560:171:19","nodeType":"YulBlock","src":"2560:171:19","statements":[{"nativeSrc":"2578:32:19","nodeType":"YulAssignment","src":"2578:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:19","nodeType":"YulIdentifier","src":"2593:9:19"},{"kind":"number","nativeSrc":"2604:4:19","nodeType":"YulLiteral","src":"2604:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:19","nodeType":"YulIdentifier","src":"2589:3:19"},"nativeSrc":"2589:20:19","nodeType":"YulFunctionCall","src":"2589:20:19"}],"functionName":{"name":"mload","nativeSrc":"2583:5:19","nodeType":"YulIdentifier","src":"2583:5:19"},"nativeSrc":"2583:27:19","nodeType":"YulFunctionCall","src":"2583:27:19"},"variableNames":[{"name":"r","nativeSrc":"2578:1:19","nodeType":"YulIdentifier","src":"2578:1:19"}]},{"nativeSrc":"2627:32:19","nodeType":"YulAssignment","src":"2627:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:19","nodeType":"YulIdentifier","src":"2642:9:19"},{"kind":"number","nativeSrc":"2653:4:19","nodeType":"YulLiteral","src":"2653:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:19","nodeType":"YulIdentifier","src":"2638:3:19"},"nativeSrc":"2638:20:19","nodeType":"YulFunctionCall","src":"2638:20:19"}],"functionName":{"name":"mload","nativeSrc":"2632:5:19","nodeType":"YulIdentifier","src":"2632:5:19"},"nativeSrc":"2632:27:19","nodeType":"YulFunctionCall","src":"2632:27:19"},"variableNames":[{"name":"s","nativeSrc":"2627:1:19","nodeType":"YulIdentifier","src":"2627:1:19"}]},{"nativeSrc":"2676:41:19","nodeType":"YulAssignment","src":"2676:41:19","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:19","nodeType":"YulLiteral","src":"2686:1:19","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:19","nodeType":"YulIdentifier","src":"2699:9:19"},{"kind":"number","nativeSrc":"2710:4:19","nodeType":"YulLiteral","src":"2710:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:19","nodeType":"YulIdentifier","src":"2695:3:19"},"nativeSrc":"2695:20:19","nodeType":"YulFunctionCall","src":"2695:20:19"}],"functionName":{"name":"mload","nativeSrc":"2689:5:19","nodeType":"YulIdentifier","src":"2689:5:19"},"nativeSrc":"2689:27:19","nodeType":"YulFunctionCall","src":"2689:27:19"}],"functionName":{"name":"byte","nativeSrc":"2681:4:19","nodeType":"YulIdentifier","src":"2681:4:19"},"nativeSrc":"2681:36:19","nodeType":"YulFunctionCall","src":"2681:36:19"},"variableNames":[{"name":"v","nativeSrc":"2676:1:19","nodeType":"YulIdentifier","src":"2676:1:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3643,"isOffset":false,"isSlot":false,"src":"2578:1:19","valueSize":1},{"declaration":3646,"isOffset":false,"isSlot":false,"src":"2627:1:19","valueSize":1},{"declaration":3628,"isOffset":false,"isSlot":false,"src":"2593:9:19","valueSize":1},{"declaration":3628,"isOffset":false,"isSlot":false,"src":"2642:9:19","valueSize":1},{"declaration":3628,"isOffset":false,"isSlot":false,"src":"2699:9:19","valueSize":1},{"declaration":3649,"isOffset":false,"isSlot":false,"src":"2676:1:19","valueSize":1}],"flags":["memory-safe"],"id":3651,"nodeType":"InlineAssembly","src":"2535:196:19"},{"expression":{"arguments":[{"id":3653,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3626,"src":"2762:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3654,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3649,"src":"2768:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3655,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"2771:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3656,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"2774:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3652,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3676,3756,3864],"referencedDeclaration":3864,"src":"2751:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3610_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3610_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3637,"id":3658,"nodeType":"Return","src":"2744:32:19"}]}}]},"documentation":{"id":3624,"nodeType":"StructuredDocumentation","src":"857:1267:19","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3676,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:19","nodeType":"FunctionDefinition","parameters":{"id":3629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3626,"mutability":"mutable","name":"hash","nameLocation":"2166:4:19","nodeType":"VariableDeclaration","scope":3676,"src":"2158:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3625,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3628,"mutability":"mutable","name":"signature","nameLocation":"2193:9:19","nodeType":"VariableDeclaration","scope":3676,"src":"2180:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3627,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:19"},"returnParameters":{"id":3637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3631,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:19","nodeType":"VariableDeclaration","scope":3676,"src":"2232:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3630,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3634,"mutability":"mutable","name":"err","nameLocation":"2264:3:19","nodeType":"VariableDeclaration","scope":3676,"src":"2251:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3633,"nodeType":"UserDefinedTypeName","pathNode":{"id":3632,"name":"RecoverError","nameLocations":["2251:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":3610,"src":"2251:12:19"},"referencedDeclaration":3610,"src":"2251:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3636,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:19","nodeType":"VariableDeclaration","scope":3676,"src":"2269:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3635,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:19"},"scope":3950,"src":"2129:778:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3705,"nodeType":"Block","src":"3801:168:19","statements":[{"assignments":[3687,3690,3692],"declarations":[{"constant":false,"id":3687,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:19","nodeType":"VariableDeclaration","scope":3705,"src":"3812:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3686,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3690,"mutability":"mutable","name":"error","nameLocation":"3844:5:19","nodeType":"VariableDeclaration","scope":3705,"src":"3831:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3689,"nodeType":"UserDefinedTypeName","pathNode":{"id":3688,"name":"RecoverError","nameLocations":["3831:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":3610,"src":"3831:12:19"},"referencedDeclaration":3610,"src":"3831:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3692,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:19","nodeType":"VariableDeclaration","scope":3705,"src":"3851:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3691,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3697,"initialValue":{"arguments":[{"id":3694,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3679,"src":"3882:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3695,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"3888:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3693,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3676,3756,3864],"referencedDeclaration":3676,"src":"3871:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3610_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3610_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:19"},{"expression":{"arguments":[{"id":3699,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"3920:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"}},{"id":3700,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"3927:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3698,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"3908:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3610_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3702,"nodeType":"ExpressionStatement","src":"3908:28:19"},{"expression":{"id":3703,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"3953:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3685,"id":3704,"nodeType":"Return","src":"3946:16:19"}]},"documentation":{"id":3677,"nodeType":"StructuredDocumentation","src":"2913:796:19","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3706,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:19","nodeType":"FunctionDefinition","parameters":{"id":3682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3679,"mutability":"mutable","name":"hash","nameLocation":"3739:4:19","nodeType":"VariableDeclaration","scope":3706,"src":"3731:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3678,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3681,"mutability":"mutable","name":"signature","nameLocation":"3758:9:19","nodeType":"VariableDeclaration","scope":3706,"src":"3745:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3680,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:19"},"returnParameters":{"id":3685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3706,"src":"3792:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3683,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:19"},"scope":3950,"src":"3714:255:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3755,"nodeType":"Block","src":"4348:342:19","statements":[{"id":3754,"nodeType":"UncheckedBlock","src":"4358:326:19","statements":[{"assignments":[3724],"declarations":[{"constant":false,"id":3724,"mutability":"mutable","name":"s","nameLocation":"4390:1:19","nodeType":"VariableDeclaration","scope":3754,"src":"4382:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3723,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3731,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3725,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"4394:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3726,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:19","typeDescriptions":{}}},"id":3729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:19"},{"assignments":[3733],"declarations":[{"constant":false,"id":3733,"mutability":"mutable","name":"v","nameLocation":"4591:1:19","nodeType":"VariableDeclaration","scope":3754,"src":"4585:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3732,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3746,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3738,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3713,"src":"4610:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3736,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:19","typeDescriptions":{}}},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3742,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:19","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3734,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:19","typeDescriptions":{}}},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:19"},{"expression":{"arguments":[{"id":3748,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"4659:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3749,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"4665:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3750,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3711,"src":"4668:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3751,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"4671:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3747,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3676,3756,3864],"referencedDeclaration":3864,"src":"4648:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3610_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3610_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3722,"id":3753,"nodeType":"Return","src":"4641:32:19"}]}]},"documentation":{"id":3707,"nodeType":"StructuredDocumentation","src":"3975:205:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3756,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:19","nodeType":"FunctionDefinition","parameters":{"id":3714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3709,"mutability":"mutable","name":"hash","nameLocation":"4222:4:19","nodeType":"VariableDeclaration","scope":3756,"src":"4214:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3711,"mutability":"mutable","name":"r","nameLocation":"4244:1:19","nodeType":"VariableDeclaration","scope":3756,"src":"4236:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3710,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3713,"mutability":"mutable","name":"vs","nameLocation":"4263:2:19","nodeType":"VariableDeclaration","scope":3756,"src":"4255:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3712,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:19"},"returnParameters":{"id":3722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3716,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:19","nodeType":"VariableDeclaration","scope":3756,"src":"4295:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3715,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3719,"mutability":"mutable","name":"err","nameLocation":"4327:3:19","nodeType":"VariableDeclaration","scope":3756,"src":"4314:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3718,"nodeType":"UserDefinedTypeName","pathNode":{"id":3717,"name":"RecoverError","nameLocations":["4314:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":3610,"src":"4314:12:19"},"referencedDeclaration":3610,"src":"4314:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3721,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:19","nodeType":"VariableDeclaration","scope":3756,"src":"4332:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3720,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:19"},"scope":3950,"src":"4185:505:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3788,"nodeType":"Block","src":"4903:164:19","statements":[{"assignments":[3769,3772,3774],"declarations":[{"constant":false,"id":3769,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:19","nodeType":"VariableDeclaration","scope":3788,"src":"4914:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3768,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3772,"mutability":"mutable","name":"error","nameLocation":"4946:5:19","nodeType":"VariableDeclaration","scope":3788,"src":"4933:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3771,"nodeType":"UserDefinedTypeName","pathNode":{"id":3770,"name":"RecoverError","nameLocations":["4933:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":3610,"src":"4933:12:19"},"referencedDeclaration":3610,"src":"4933:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3774,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:19","nodeType":"VariableDeclaration","scope":3788,"src":"4953:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3773,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3780,"initialValue":{"arguments":[{"id":3776,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"4984:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3777,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3761,"src":"4990:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3778,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"4993:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3775,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3676,3756,3864],"referencedDeclaration":3756,"src":"4973:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3610_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3610_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:19"},{"expression":{"arguments":[{"id":3782,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"5018:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"}},{"id":3783,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3774,"src":"5025:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3781,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"5006:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3610_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3785,"nodeType":"ExpressionStatement","src":"5006:28:19"},{"expression":{"id":3786,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"5051:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3767,"id":3787,"nodeType":"Return","src":"5044:16:19"}]},"documentation":{"id":3757,"nodeType":"StructuredDocumentation","src":"4696:116:19","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3789,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:19","nodeType":"FunctionDefinition","parameters":{"id":3764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3759,"mutability":"mutable","name":"hash","nameLocation":"4842:4:19","nodeType":"VariableDeclaration","scope":3789,"src":"4834:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3758,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3761,"mutability":"mutable","name":"r","nameLocation":"4856:1:19","nodeType":"VariableDeclaration","scope":3789,"src":"4848:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3760,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3763,"mutability":"mutable","name":"vs","nameLocation":"4867:2:19","nodeType":"VariableDeclaration","scope":3789,"src":"4859:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3762,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:19"},"returnParameters":{"id":3767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3789,"src":"4894:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3765,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:19"},"scope":3950,"src":"4817:250:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3863,"nodeType":"Block","src":"5382:1372:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3810,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"6278:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3808,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:19","typeDescriptions":{}}},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3824,"nodeType":"IfStatement","src":"6266:164:19","trueBody":{"id":3823,"nodeType":"Block","src":"6351:79:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3814,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:19","typeDescriptions":{}}},"id":3817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3818,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"6385:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3610_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:19","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3609,"src":"6385:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"}},{"id":3820,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"6417:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3821,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3610_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3807,"id":3822,"nodeType":"Return","src":"6365:54:19"}]}},{"assignments":[3826],"declarations":[{"constant":false,"id":3826,"mutability":"mutable","name":"signer","nameLocation":"6532:6:19","nodeType":"VariableDeclaration","scope":3863,"src":"6524:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3825,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3833,"initialValue":{"arguments":[{"id":3828,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"6551:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3829,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"6557:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3830,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"6560:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3831,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"6563:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3827,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:19","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3834,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"6579:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3835,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:19","typeDescriptions":{}}},"id":3838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3853,"nodeType":"IfStatement","src":"6575:113:19","trueBody":{"id":3852,"nodeType":"Block","src":"6601:87:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3840,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:19","typeDescriptions":{}}},"id":3843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3844,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"6635:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3610_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:19","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3607,"src":"6635:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3846,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:19","typeDescriptions":{}}},"id":3849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3610_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3807,"id":3851,"nodeType":"Return","src":"6615:62:19"}]}},{"expression":{"components":[{"id":3854,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"6706:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3855,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"6714:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3610_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:19","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3606,"src":"6714:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3857,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:19","typeDescriptions":{}}},"id":3860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3861,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3610_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3807,"id":3862,"nodeType":"Return","src":"6698:49:19"}]},"documentation":{"id":3790,"nodeType":"StructuredDocumentation","src":"5073:125:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3864,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:19","nodeType":"FunctionDefinition","parameters":{"id":3799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3792,"mutability":"mutable","name":"hash","nameLocation":"5240:4:19","nodeType":"VariableDeclaration","scope":3864,"src":"5232:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3791,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3794,"mutability":"mutable","name":"v","nameLocation":"5260:1:19","nodeType":"VariableDeclaration","scope":3864,"src":"5254:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3793,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3796,"mutability":"mutable","name":"r","nameLocation":"5279:1:19","nodeType":"VariableDeclaration","scope":3864,"src":"5271:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3798,"mutability":"mutable","name":"s","nameLocation":"5298:1:19","nodeType":"VariableDeclaration","scope":3864,"src":"5290:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3797,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:19"},"returnParameters":{"id":3807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3801,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:19","nodeType":"VariableDeclaration","scope":3864,"src":"5329:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3800,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3804,"mutability":"mutable","name":"err","nameLocation":"5361:3:19","nodeType":"VariableDeclaration","scope":3864,"src":"5348:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3803,"nodeType":"UserDefinedTypeName","pathNode":{"id":3802,"name":"RecoverError","nameLocations":["5348:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":3610,"src":"5348:12:19"},"referencedDeclaration":3610,"src":"5348:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3806,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:19","nodeType":"VariableDeclaration","scope":3864,"src":"5366:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:19"},"scope":3950,"src":"5203:1551:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3899,"nodeType":"Block","src":"6981:166:19","statements":[{"assignments":[3879,3882,3884],"declarations":[{"constant":false,"id":3879,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:19","nodeType":"VariableDeclaration","scope":3899,"src":"6992:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3878,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3882,"mutability":"mutable","name":"error","nameLocation":"7024:5:19","nodeType":"VariableDeclaration","scope":3899,"src":"7011:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3881,"nodeType":"UserDefinedTypeName","pathNode":{"id":3880,"name":"RecoverError","nameLocations":["7011:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":3610,"src":"7011:12:19"},"referencedDeclaration":3610,"src":"7011:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3884,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:19","nodeType":"VariableDeclaration","scope":3899,"src":"7031:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3883,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3891,"initialValue":{"arguments":[{"id":3886,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3867,"src":"7062:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3887,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3869,"src":"7068:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3888,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3871,"src":"7071:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3889,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3873,"src":"7074:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3885,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3676,3756,3864],"referencedDeclaration":3864,"src":"7051:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3610_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3610_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:19"},{"expression":{"arguments":[{"id":3893,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"7098:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"}},{"id":3894,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"7105:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3892,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3949,"src":"7086:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3610_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3896,"nodeType":"ExpressionStatement","src":"7086:28:19"},{"expression":{"id":3897,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"7131:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3877,"id":3898,"nodeType":"Return","src":"7124:16:19"}]},"documentation":{"id":3865,"nodeType":"StructuredDocumentation","src":"6760:122:19","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3900,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:19","nodeType":"FunctionDefinition","parameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3867,"mutability":"mutable","name":"hash","nameLocation":"6912:4:19","nodeType":"VariableDeclaration","scope":3900,"src":"6904:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3866,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3869,"mutability":"mutable","name":"v","nameLocation":"6924:1:19","nodeType":"VariableDeclaration","scope":3900,"src":"6918:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3868,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3871,"mutability":"mutable","name":"r","nameLocation":"6935:1:19","nodeType":"VariableDeclaration","scope":3900,"src":"6927:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3870,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3873,"mutability":"mutable","name":"s","nameLocation":"6946:1:19","nodeType":"VariableDeclaration","scope":3900,"src":"6938:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3872,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:19"},"returnParameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3900,"src":"6972:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3875,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:19"},"scope":3950,"src":"6887:260:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3948,"nodeType":"Block","src":"7352:460:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3909,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"7366:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3910,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"7375:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3610_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:19","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3606,"src":"7375:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3915,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"7462:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3916,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"7471:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3610_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:19","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3607,"src":"7471:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"},"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3923,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"7567:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3924,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"7576:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3610_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:19","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3608,"src":"7576:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3935,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"7701:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3936,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"7710:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3610_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:19","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3609,"src":"7710:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3944,"nodeType":"IfStatement","src":"7697:109:19","trueBody":{"id":3943,"nodeType":"Block","src":"7742:64:19","statements":[{"errorCall":{"arguments":[{"id":3940,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3906,"src":"7786:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3939,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3623,"src":"7763:22:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3942,"nodeType":"RevertStatement","src":"7756:39:19"}]}},"id":3945,"nodeType":"IfStatement","src":"7563:243:19","trueBody":{"id":3934,"nodeType":"Block","src":"7613:78:19","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3930,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3906,"src":"7670:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3928,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:19","typeDescriptions":{}}},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3927,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"7634:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3933,"nodeType":"RevertStatement","src":"7627:53:19"}]}},"id":3946,"nodeType":"IfStatement","src":"7458:348:19","trueBody":{"id":3922,"nodeType":"Block","src":"7502:55:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3919,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3613,"src":"7523:21:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3921,"nodeType":"RevertStatement","src":"7516:30:19"}]}},"id":3947,"nodeType":"IfStatement","src":"7362:444:19","trueBody":{"id":3914,"nodeType":"Block","src":"7397:55:19","statements":[{"functionReturnParameters":3908,"id":3913,"nodeType":"Return","src":"7411:7:19"}]}}]},"documentation":{"id":3901,"nodeType":"StructuredDocumentation","src":"7153:122:19","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3949,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:19","nodeType":"FunctionDefinition","parameters":{"id":3907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3904,"mutability":"mutable","name":"error","nameLocation":"7314:5:19","nodeType":"VariableDeclaration","scope":3949,"src":"7301:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3903,"nodeType":"UserDefinedTypeName","pathNode":{"id":3902,"name":"RecoverError","nameLocations":["7301:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":3610,"src":"7301:12:19"},"referencedDeclaration":3610,"src":"7301:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3610","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3906,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:19","nodeType":"VariableDeclaration","scope":3949,"src":"7321:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3905,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:19"},"returnParameters":{"id":3908,"nodeType":"ParameterList","parameters":[],"src":"7352:0:19"},"scope":3950,"src":"7280:532:19","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3951,"src":"344:7470:19","usedErrors":[3613,3618,3623],"usedEvents":[]}],"src":"112:7703:19"},"id":19},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[4177],"IERC5267":[552],"MessageHashUtils":[4263],"ShortString":[1865],"ShortStrings":[2076]},"id":4178,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3952,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":3954,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4178,"sourceUnit":4264,"src":"139:56:20","symbolAliases":[{"foreign":{"id":3953,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4263,"src":"147:16:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":3957,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4178,"sourceUnit":2077,"src":"196:62:20","symbolAliases":[{"foreign":{"id":3955,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"204:12:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":3956,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1865,"src":"218:11:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":3959,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4178,"sourceUnit":553,"src":"259:55:20","symbolAliases":[{"foreign":{"id":3958,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"267:8:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3961,"name":"IERC5267","nameLocations":["1988:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":552,"src":"1988:8:20"},"id":3962,"nodeType":"InheritanceSpecifier","src":"1988:8:20"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":3960,"nodeType":"StructuredDocumentation","src":"316:1643:20","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":4177,"linearizedBaseContracts":[4177,552],"name":"EIP712","nameLocation":"1978:6:20","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3964,"libraryName":{"id":3963,"name":"ShortStrings","nameLocations":["2009:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":2076,"src":"2009:12:20"},"nodeType":"UsingForDirective","src":"2003:25:20"},{"constant":true,"id":3969,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:20","nodeType":"VariableDeclaration","scope":4177,"src":"2034:140:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3966,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3971,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:20","nodeType":"VariableDeclaration","scope":4177,"src":"2373:48:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3970,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3973,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:20","nodeType":"VariableDeclaration","scope":4177,"src":"2427:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3972,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":3975,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:20","nodeType":"VariableDeclaration","scope":4177,"src":"2473:37:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3974,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":3977,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:20","nodeType":"VariableDeclaration","scope":4177,"src":"2517:37:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3976,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3979,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:20","nodeType":"VariableDeclaration","scope":4177,"src":"2560:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3978,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":3982,"mutability":"immutable","name":"_name","nameLocation":"2637:5:20","nodeType":"VariableDeclaration","scope":4177,"src":"2607:35:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"},"typeName":{"id":3981,"nodeType":"UserDefinedTypeName","pathNode":{"id":3980,"name":"ShortString","nameLocations":["2607:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":1865,"src":"2607:11:20"},"referencedDeclaration":1865,"src":"2607:11:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3985,"mutability":"immutable","name":"_version","nameLocation":"2678:8:20","nodeType":"VariableDeclaration","scope":4177,"src":"2648:38:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"},"typeName":{"id":3984,"nodeType":"UserDefinedTypeName","pathNode":{"id":3983,"name":"ShortString","nameLocations":["2648:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":1865,"src":"2648:11:20"},"referencedDeclaration":1865,"src":"2648:11:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":3987,"mutability":"mutable","name":"_nameFallback","nameLocation":"2757:13:20","nodeType":"VariableDeclaration","scope":4177,"src":"2742:28:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3986,"name":"string","nodeType":"ElementaryTypeName","src":"2742:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":3989,"mutability":"mutable","name":"_versionFallback","nameLocation":"2841:16:20","nodeType":"VariableDeclaration","scope":4177,"src":"2826:31:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3988,"name":"string","nodeType":"ElementaryTypeName","src":"2826:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":4046,"nodeType":"Block","src":"3483:376:20","statements":[{"expression":{"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3997,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"3493:5:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4000,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"3532:13:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3998,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"3501:4:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3506:25:20","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2017,"src":"3501:30:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1865_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}},"src":"3493:53:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}},"id":4003,"nodeType":"ExpressionStatement","src":"3493:53:20"},{"expression":{"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4004,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"3556:8:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4007,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"3601:16:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4005,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"3567:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3575:25:20","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2017,"src":"3567:33:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1865_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3567:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}},"src":"3556:62:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}},"id":4010,"nodeType":"ExpressionStatement","src":"3556:62:20"},{"expression":{"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4011,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"3628:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4015,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3992,"src":"3658:4:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3652:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4013,"name":"bytes","nodeType":"ElementaryTypeName","src":"3652:5:20","typeDescriptions":{}}},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3652:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4012,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3642:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3642:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3628:36:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4019,"nodeType":"ExpressionStatement","src":"3628:36:20"},{"expression":{"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4020,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"3674:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4024,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3994,"src":"3707:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4022,"name":"bytes","nodeType":"ElementaryTypeName","src":"3701:5:20","typeDescriptions":{}}},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4021,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3691:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3691:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3674:42:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4028,"nodeType":"ExpressionStatement","src":"3674:42:20"},{"expression":{"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4029,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"3727:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4030,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3744:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3750:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"3744:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3727:30:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4033,"nodeType":"ExpressionStatement","src":"3727:30:20"},{"expression":{"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4034,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"3767:22:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":4035,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"3792:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3767:48:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4038,"nodeType":"ExpressionStatement","src":"3767:48:20"},{"expression":{"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4039,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"3825:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4042,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3847:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4177","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4177","typeString":"contract EIP712"}],"id":4041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3839:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4040,"name":"address","nodeType":"ElementaryTypeName","src":"3839:7:20","typeDescriptions":{}}},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3839:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3825:27:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4045,"nodeType":"ExpressionStatement","src":"3825:27:20"}]},"documentation":{"id":3990,"nodeType":"StructuredDocumentation","src":"2864:559:20","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":4047,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3992,"mutability":"mutable","name":"name","nameLocation":"3454:4:20","nodeType":"VariableDeclaration","scope":4047,"src":"3440:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3991,"name":"string","nodeType":"ElementaryTypeName","src":"3440:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3994,"mutability":"mutable","name":"version","nameLocation":"3474:7:20","nodeType":"VariableDeclaration","scope":4047,"src":"3460:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3993,"name":"string","nodeType":"ElementaryTypeName","src":"3460:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3439:43:20"},"returnParameters":{"id":3996,"nodeType":"ParameterList","parameters":[],"src":"3483:0:20"},"scope":4177,"src":"3428:431:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4072,"nodeType":"Block","src":"4007:200:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4055,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4029:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4177","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4177","typeString":"contract EIP712"}],"id":4054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4021:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4053,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:20","typeDescriptions":{}}},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4021:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4057,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3975,"src":"4038:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4021:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4059,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4053:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4059:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"4053:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4061,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3973,"src":"4070:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4053:31:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4021:63:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4070,"nodeType":"Block","src":"4146:55:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4067,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"4167:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4167:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4052,"id":4069,"nodeType":"Return","src":"4160:30:20"}]},"id":4071,"nodeType":"IfStatement","src":"4017:184:20","trueBody":{"id":4066,"nodeType":"Block","src":"4086:54:20","statements":[{"expression":{"id":4064,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"4107:22:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4052,"id":4065,"nodeType":"Return","src":"4100:29:20"}]}}]},"documentation":{"id":4048,"nodeType":"StructuredDocumentation","src":"3865:75:20","text":" @dev Returns the domain separator for the current chain."},"id":4073,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3954:18:20","nodeType":"FunctionDefinition","parameters":{"id":4049,"nodeType":"ParameterList","parameters":[],"src":"3972:2:20"},"returnParameters":{"id":4052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4073,"src":"3998:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4050,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3998:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3997:9:20"},"scope":4177,"src":"3945:262:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4093,"nodeType":"Block","src":"4277:115:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":4081,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"4315:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4082,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3977,"src":"4326:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4083,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"4339:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4084,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4355:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4361:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"4355:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4088,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4378:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4177","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4177","typeString":"contract EIP712"}],"id":4087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4370:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4086,"name":"address","nodeType":"ElementaryTypeName","src":"4370:7:20","typeDescriptions":{}}},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4370:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4079,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4304:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4308:6:20","memberName":"encode","nodeType":"MemberAccess","src":"4304:10:20","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4304:80:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4078,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4294:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4294:91:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4077,"id":4092,"nodeType":"Return","src":"4287:98:20"}]},"id":4094,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4222:21:20","nodeType":"FunctionDefinition","parameters":{"id":4074,"nodeType":"ParameterList","parameters":[],"src":"4243:2:20"},"returnParameters":{"id":4077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4094,"src":"4268:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4075,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4268:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4267:9:20"},"scope":4177,"src":"4213:179:20","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":4109,"nodeType":"Block","src":"5103:90:20","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4104,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4073,"src":"5153:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5153:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4106,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"5175:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4102,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4263,"src":"5120:16:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$4263_$","typeString":"type(library MessageHashUtils)"}},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5137:15:20","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":4262,"src":"5120:32:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5120:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4101,"id":4108,"nodeType":"Return","src":"5113:73:20"}]},"documentation":{"id":4095,"nodeType":"StructuredDocumentation","src":"4398:614:20","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":4110,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"5026:16:20","nodeType":"FunctionDefinition","parameters":{"id":4098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4097,"mutability":"mutable","name":"structHash","nameLocation":"5051:10:20","nodeType":"VariableDeclaration","scope":4110,"src":"5043:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4096,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5043:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5042:20:20"},"returnParameters":{"id":4101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4110,"src":"5094:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4099,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5094:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5093:9:20"},"scope":4177,"src":"5017:176:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[551],"body":{"id":4151,"nodeType":"Block","src":"5556:229:20","statements":[{"expression":{"components":[{"hexValue":"0f","id":4129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5587:7:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":4130,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"5617:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":4132,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"5644:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":4134,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5674:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5680:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"5674:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4138,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5709:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$4177","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$4177","typeString":"contract EIP712"}],"id":4137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5701:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4136,"name":"address","nodeType":"ElementaryTypeName","src":"5701:7:20","typeDescriptions":{}}},"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":4142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5736:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5728:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4140,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5728:7:20","typeDescriptions":{}}},"id":4143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5728:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":4147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5766:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5752:13:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4144,"name":"uint256","nodeType":"ElementaryTypeName","src":"5756:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4145,"nodeType":"ArrayTypeName","src":"5756:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5752:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":4149,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5573:205:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":4128,"id":4150,"nodeType":"Return","src":"5566:212:20"}]},"documentation":{"id":4111,"nodeType":"StructuredDocumentation","src":"5199:24:20","text":"@inheritdoc IERC5267"},"functionSelector":"84b0196e","id":4152,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5237:12:20","nodeType":"FunctionDefinition","parameters":{"id":4112,"nodeType":"ParameterList","parameters":[],"src":"5249:2:20"},"returnParameters":{"id":4128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4114,"mutability":"mutable","name":"fields","nameLocation":"5333:6:20","nodeType":"VariableDeclaration","scope":4152,"src":"5326:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4113,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5326:6:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":4116,"mutability":"mutable","name":"name","nameLocation":"5367:4:20","nodeType":"VariableDeclaration","scope":4152,"src":"5353:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4115,"name":"string","nodeType":"ElementaryTypeName","src":"5353:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4118,"mutability":"mutable","name":"version","nameLocation":"5399:7:20","nodeType":"VariableDeclaration","scope":4152,"src":"5385:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4117,"name":"string","nodeType":"ElementaryTypeName","src":"5385:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4120,"mutability":"mutable","name":"chainId","nameLocation":"5428:7:20","nodeType":"VariableDeclaration","scope":4152,"src":"5420:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4119,"name":"uint256","nodeType":"ElementaryTypeName","src":"5420:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4122,"mutability":"mutable","name":"verifyingContract","nameLocation":"5457:17:20","nodeType":"VariableDeclaration","scope":4152,"src":"5449:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4121,"name":"address","nodeType":"ElementaryTypeName","src":"5449:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4124,"mutability":"mutable","name":"salt","nameLocation":"5496:4:20","nodeType":"VariableDeclaration","scope":4152,"src":"5488:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4123,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5488:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4127,"mutability":"mutable","name":"extensions","nameLocation":"5531:10:20","nodeType":"VariableDeclaration","scope":4152,"src":"5514:27:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4125,"name":"uint256","nodeType":"ElementaryTypeName","src":"5514:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4126,"nodeType":"ArrayTypeName","src":"5514:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5312:239:20"},"scope":4177,"src":"5228:557:20","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":4163,"nodeType":"Block","src":"6166:65:20","statements":[{"expression":{"arguments":[{"id":4160,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"6210:13:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4158,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"6183:5:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6189:20:20","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2044,"src":"6183:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1865_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1865_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6183:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4157,"id":4162,"nodeType":"Return","src":"6176:48:20"}]},"documentation":{"id":4153,"nodeType":"StructuredDocumentation","src":"5791:256:20","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4164,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6114:11:20","nodeType":"FunctionDefinition","parameters":{"id":4154,"nodeType":"ParameterList","parameters":[],"src":"6125:2:20"},"returnParameters":{"id":4157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4164,"src":"6151:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4155,"name":"string","nodeType":"ElementaryTypeName","src":"6151:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6150:15:20"},"scope":4177,"src":"6105:126:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4175,"nodeType":"Block","src":"6621:71:20","statements":[{"expression":{"arguments":[{"id":4172,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"6668:16:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":4170,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"6638:8:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1865","typeString":"ShortString"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6647:20:20","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2044,"src":"6638:29:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1865_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1865_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6638:47:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4169,"id":4174,"nodeType":"Return","src":"6631:54:20"}]},"documentation":{"id":4165,"nodeType":"StructuredDocumentation","src":"6237:262:20","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":4176,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6566:14:20","nodeType":"FunctionDefinition","parameters":{"id":4166,"nodeType":"ParameterList","parameters":[],"src":"6580:2:20"},"returnParameters":{"id":4169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4176,"src":"6606:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4167,"name":"string","nodeType":"ElementaryTypeName","src":"6606:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6605:15:20"},"scope":4177,"src":"6557:135:20","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4178,"src":"1960:4734:20","usedErrors":[1873,1875],"usedEvents":[532]}],"src":"113:6582:20"},"id":20},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[4263],"Strings":[3602]},"id":4264,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4179,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":4181,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4264,"sourceUnit":3603,"src":"149:39:21","symbolAliases":[{"foreign":{"id":4180,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"157:7:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":4182,"nodeType":"StructuredDocumentation","src":"190:330:21","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":4263,"linearizedBaseContracts":[4263],"name":"MessageHashUtils","nameLocation":"529:16:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":4191,"nodeType":"Block","src":"1339:341:21","statements":[{"AST":{"nativeSrc":"1374:300:21","nodeType":"YulBlock","src":"1374:300:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1395:4:21","nodeType":"YulLiteral","src":"1395:4:21","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1401:34:21","nodeType":"YulLiteral","src":"1401:34:21","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1388:6:21","nodeType":"YulIdentifier","src":"1388:6:21"},"nativeSrc":"1388:48:21","nodeType":"YulFunctionCall","src":"1388:48:21"},"nativeSrc":"1388:48:21","nodeType":"YulExpressionStatement","src":"1388:48:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1497:4:21","nodeType":"YulLiteral","src":"1497:4:21","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1503:11:21","nodeType":"YulIdentifier","src":"1503:11:21"}],"functionName":{"name":"mstore","nativeSrc":"1490:6:21","nodeType":"YulIdentifier","src":"1490:6:21"},"nativeSrc":"1490:25:21","nodeType":"YulFunctionCall","src":"1490:25:21"},"nativeSrc":"1490:25:21","nodeType":"YulExpressionStatement","src":"1490:25:21"},{"nativeSrc":"1569:31:21","nodeType":"YulAssignment","src":"1569:31:21","value":{"arguments":[{"kind":"number","nativeSrc":"1589:4:21","nodeType":"YulLiteral","src":"1589:4:21","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1595:4:21","nodeType":"YulLiteral","src":"1595:4:21","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1579:9:21","nodeType":"YulIdentifier","src":"1579:9:21"},"nativeSrc":"1579:21:21","nodeType":"YulFunctionCall","src":"1579:21:21"},"variableNames":[{"name":"digest","nativeSrc":"1569:6:21","nodeType":"YulIdentifier","src":"1569:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4188,"isOffset":false,"isSlot":false,"src":"1569:6:21","valueSize":1},{"declaration":4185,"isOffset":false,"isSlot":false,"src":"1503:11:21","valueSize":1}],"flags":["memory-safe"],"id":4190,"nodeType":"InlineAssembly","src":"1349:325:21"}]},"documentation":{"id":4183,"nodeType":"StructuredDocumentation","src":"552:690:21","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":4192,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:21","nodeType":"FunctionDefinition","parameters":{"id":4186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4185,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:21","nodeType":"VariableDeclaration","scope":4192,"src":"1279:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4184,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:21"},"returnParameters":{"id":4189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4188,"mutability":"mutable","name":"digest","nameLocation":"1331:6:21","nodeType":"VariableDeclaration","scope":4192,"src":"1323:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4187,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:21"},"scope":4263,"src":"1247:433:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4217,"nodeType":"Block","src":"2257:143:21","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":4204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":4209,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"2366:7:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:21","memberName":"length","nodeType":"MemberAccess","src":"2366:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4207,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3602,"src":"2349:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3602_$","typeString":"type(library Strings)"}},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:21","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2314,"src":"2349:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4205,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:21","typeDescriptions":{}}},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4213,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"2384:7:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4201,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:21","typeDescriptions":{}}},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:21","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:21","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4200,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4199,"id":4216,"nodeType":"Return","src":"2267:126:21"}]},"documentation":{"id":4193,"nodeType":"StructuredDocumentation","src":"1686:480:21","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":4218,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:21","nodeType":"FunctionDefinition","parameters":{"id":4196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4195,"mutability":"mutable","name":"message","nameLocation":"2216:7:21","nodeType":"VariableDeclaration","scope":4218,"src":"2203:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4194,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:21"},"returnParameters":{"id":4199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4218,"src":"2248:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:21"},"scope":4263,"src":"2171:229:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4237,"nodeType":"Block","src":"2854:80:21","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":4231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":4232,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"2910:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4233,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"2921:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4229,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4228,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4227,"id":4236,"nodeType":"Return","src":"2864:63:21"}]},"documentation":{"id":4219,"nodeType":"StructuredDocumentation","src":"2406:332:21","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":4238,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:21","nodeType":"FunctionDefinition","parameters":{"id":4224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4221,"mutability":"mutable","name":"validator","nameLocation":"2792:9:21","nodeType":"VariableDeclaration","scope":4238,"src":"2784:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4220,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4223,"mutability":"mutable","name":"data","nameLocation":"2816:4:21","nodeType":"VariableDeclaration","scope":4238,"src":"2803:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4222,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:21"},"returnParameters":{"id":4227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4238,"src":"2845:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:21"},"scope":4263,"src":"2743:191:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4249,"nodeType":"Block","src":"3216:216:21","statements":[{"AST":{"nativeSrc":"3251:175:21","nodeType":"YulBlock","src":"3251:175:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3272:4:21","nodeType":"YulLiteral","src":"3272:4:21","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nativeSrc":"3278:10:21","nodeType":"YulLiteral","src":"3278:10:21","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nativeSrc":"3265:6:21","nodeType":"YulIdentifier","src":"3265:6:21"},"nativeSrc":"3265:24:21","nodeType":"YulFunctionCall","src":"3265:24:21"},"nativeSrc":"3265:24:21","nodeType":"YulExpressionStatement","src":"3265:24:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3309:4:21","nodeType":"YulLiteral","src":"3309:4:21","type":"","value":"0x02"},{"arguments":[{"kind":"number","nativeSrc":"3319:2:21","nodeType":"YulLiteral","src":"3319:2:21","type":"","value":"96"},{"name":"validator","nativeSrc":"3323:9:21","nodeType":"YulIdentifier","src":"3323:9:21"}],"functionName":{"name":"shl","nativeSrc":"3315:3:21","nodeType":"YulIdentifier","src":"3315:3:21"},"nativeSrc":"3315:18:21","nodeType":"YulFunctionCall","src":"3315:18:21"}],"functionName":{"name":"mstore","nativeSrc":"3302:6:21","nodeType":"YulIdentifier","src":"3302:6:21"},"nativeSrc":"3302:32:21","nodeType":"YulFunctionCall","src":"3302:32:21"},"nativeSrc":"3302:32:21","nodeType":"YulExpressionStatement","src":"3302:32:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3354:4:21","nodeType":"YulLiteral","src":"3354:4:21","type":"","value":"0x16"},{"name":"messageHash","nativeSrc":"3360:11:21","nodeType":"YulIdentifier","src":"3360:11:21"}],"functionName":{"name":"mstore","nativeSrc":"3347:6:21","nodeType":"YulIdentifier","src":"3347:6:21"},"nativeSrc":"3347:25:21","nodeType":"YulFunctionCall","src":"3347:25:21"},"nativeSrc":"3347:25:21","nodeType":"YulExpressionStatement","src":"3347:25:21"},{"nativeSrc":"3385:31:21","nodeType":"YulAssignment","src":"3385:31:21","value":{"arguments":[{"kind":"number","nativeSrc":"3405:4:21","nodeType":"YulLiteral","src":"3405:4:21","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3411:4:21","nodeType":"YulLiteral","src":"3411:4:21","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nativeSrc":"3395:9:21","nodeType":"YulIdentifier","src":"3395:9:21"},"nativeSrc":"3395:21:21","nodeType":"YulFunctionCall","src":"3395:21:21"},"variableNames":[{"name":"digest","nativeSrc":"3385:6:21","nodeType":"YulIdentifier","src":"3385:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4246,"isOffset":false,"isSlot":false,"src":"3385:6:21","valueSize":1},{"declaration":4243,"isOffset":false,"isSlot":false,"src":"3360:11:21","valueSize":1},{"declaration":4241,"isOffset":false,"isSlot":false,"src":"3323:9:21","valueSize":1}],"flags":["memory-safe"],"id":4248,"nodeType":"InlineAssembly","src":"3226:200:21"}]},"documentation":{"id":4239,"nodeType":"StructuredDocumentation","src":"2940:129:21","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":4250,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:21","nodeType":"FunctionDefinition","parameters":{"id":4244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4241,"mutability":"mutable","name":"validator","nameLocation":"3132:9:21","nodeType":"VariableDeclaration","scope":4250,"src":"3124:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4240,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4243,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:21","nodeType":"VariableDeclaration","scope":4250,"src":"3151:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:21"},"returnParameters":{"id":4247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4246,"mutability":"mutable","name":"digest","nameLocation":"3208:6:21","nodeType":"VariableDeclaration","scope":4250,"src":"3200:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4245,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:21"},"scope":4263,"src":"3074:358:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4261,"nodeType":"Block","src":"3983:265:21","statements":[{"AST":{"nativeSrc":"4018:224:21","nodeType":"YulBlock","src":"4018:224:21","statements":[{"nativeSrc":"4032:22:21","nodeType":"YulVariableDeclaration","src":"4032:22:21","value":{"arguments":[{"kind":"number","nativeSrc":"4049:4:21","nodeType":"YulLiteral","src":"4049:4:21","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"4043:5:21","nodeType":"YulIdentifier","src":"4043:5:21"},"nativeSrc":"4043:11:21","nodeType":"YulFunctionCall","src":"4043:11:21"},"variables":[{"name":"ptr","nativeSrc":"4036:3:21","nodeType":"YulTypedName","src":"4036:3:21","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"4074:3:21","nodeType":"YulIdentifier","src":"4074:3:21"},{"hexValue":"1901","kind":"string","nativeSrc":"4079:10:21","nodeType":"YulLiteral","src":"4079:10:21","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"4067:6:21","nodeType":"YulIdentifier","src":"4067:6:21"},"nativeSrc":"4067:23:21","nodeType":"YulFunctionCall","src":"4067:23:21"},"nativeSrc":"4067:23:21","nodeType":"YulExpressionStatement","src":"4067:23:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4114:3:21","nodeType":"YulIdentifier","src":"4114:3:21"},{"kind":"number","nativeSrc":"4119:4:21","nodeType":"YulLiteral","src":"4119:4:21","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"4110:3:21","nodeType":"YulIdentifier","src":"4110:3:21"},"nativeSrc":"4110:14:21","nodeType":"YulFunctionCall","src":"4110:14:21"},{"name":"domainSeparator","nativeSrc":"4126:15:21","nodeType":"YulIdentifier","src":"4126:15:21"}],"functionName":{"name":"mstore","nativeSrc":"4103:6:21","nodeType":"YulIdentifier","src":"4103:6:21"},"nativeSrc":"4103:39:21","nodeType":"YulFunctionCall","src":"4103:39:21"},"nativeSrc":"4103:39:21","nodeType":"YulExpressionStatement","src":"4103:39:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"4166:3:21","nodeType":"YulIdentifier","src":"4166:3:21"},{"kind":"number","nativeSrc":"4171:4:21","nodeType":"YulLiteral","src":"4171:4:21","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"4162:3:21","nodeType":"YulIdentifier","src":"4162:3:21"},"nativeSrc":"4162:14:21","nodeType":"YulFunctionCall","src":"4162:14:21"},{"name":"structHash","nativeSrc":"4178:10:21","nodeType":"YulIdentifier","src":"4178:10:21"}],"functionName":{"name":"mstore","nativeSrc":"4155:6:21","nodeType":"YulIdentifier","src":"4155:6:21"},"nativeSrc":"4155:34:21","nodeType":"YulFunctionCall","src":"4155:34:21"},"nativeSrc":"4155:34:21","nodeType":"YulExpressionStatement","src":"4155:34:21"},{"nativeSrc":"4202:30:21","nodeType":"YulAssignment","src":"4202:30:21","value":{"arguments":[{"name":"ptr","nativeSrc":"4222:3:21","nodeType":"YulIdentifier","src":"4222:3:21"},{"kind":"number","nativeSrc":"4227:4:21","nodeType":"YulLiteral","src":"4227:4:21","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"4212:9:21","nodeType":"YulIdentifier","src":"4212:9:21"},"nativeSrc":"4212:20:21","nodeType":"YulFunctionCall","src":"4212:20:21"},"variableNames":[{"name":"digest","nativeSrc":"4202:6:21","nodeType":"YulIdentifier","src":"4202:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4258,"isOffset":false,"isSlot":false,"src":"4202:6:21","valueSize":1},{"declaration":4253,"isOffset":false,"isSlot":false,"src":"4126:15:21","valueSize":1},{"declaration":4255,"isOffset":false,"isSlot":false,"src":"4178:10:21","valueSize":1}],"flags":["memory-safe"],"id":4260,"nodeType":"InlineAssembly","src":"3993:249:21"}]},"documentation":{"id":4251,"nodeType":"StructuredDocumentation","src":"3438:431:21","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":4262,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:21","nodeType":"FunctionDefinition","parameters":{"id":4256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4253,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:21","nodeType":"VariableDeclaration","scope":4262,"src":"3899:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4252,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4255,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:21","nodeType":"VariableDeclaration","scope":4262,"src":"3924:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:21"},"returnParameters":{"id":4259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4258,"mutability":"mutable","name":"digest","nameLocation":"3975:6:21","nodeType":"VariableDeclaration","scope":4262,"src":"3967:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:21"},"scope":4263,"src":"3874:374:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4264,"src":"521:3729:21","usedErrors":[],"usedEvents":[]}],"src":"123:4128:21"},"id":21},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[4287],"IERC165":[4299]},"id":4288,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4265,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":4267,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4288,"sourceUnit":4300,"src":"140:38:22","symbolAliases":[{"foreign":{"id":4266,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"148:7:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4269,"name":"IERC165","nameLocations":["688:7:22"],"nodeType":"IdentifierPath","referencedDeclaration":4299,"src":"688:7:22"},"id":4270,"nodeType":"InheritanceSpecifier","src":"688:7:22"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":4268,"nodeType":"StructuredDocumentation","src":"180:479:22","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":4287,"linearizedBaseContracts":[4287,4299],"name":"ERC165","nameLocation":"678:6:22","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[4298],"body":{"id":4285,"nodeType":"Block","src":"812:64:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4278,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"829:11:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4280,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4299,"src":"849:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$4299_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$4299_$","typeString":"type(contract IERC165)"}],"id":4279,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"844:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$4299","typeString":"type(contract IERC165)"}},"id":4282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:22","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4277,"id":4284,"nodeType":"Return","src":"822:47:22"}]},"documentation":{"id":4271,"nodeType":"StructuredDocumentation","src":"702:23:22","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":4286,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:22","nodeType":"FunctionDefinition","parameters":{"id":4274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4273,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:22","nodeType":"VariableDeclaration","scope":4286,"src":"757:18:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4272,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:22","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:22"},"returnParameters":{"id":4277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4286,"src":"806:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4275,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:22"},"scope":4287,"src":"730:146:22","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":4288,"src":"660:218:22","usedErrors":[],"usedEvents":[]}],"src":"114:765:22"},"id":22},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[4299]},"id":4300,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4289,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:23"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":4290,"nodeType":"StructuredDocumentation","src":"142:280:23","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":4299,"linearizedBaseContracts":[4299],"name":"IERC165","nameLocation":"433:7:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4291,"nodeType":"StructuredDocumentation","src":"447:340:23","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":4298,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:23","nodeType":"FunctionDefinition","parameters":{"id":4294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4293,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:23","nodeType":"VariableDeclaration","scope":4298,"src":"819:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":4292,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:23","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:23"},"returnParameters":{"id":4297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4298,"src":"862:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4295,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:23"},"scope":4299,"src":"792:76:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4300,"src":"423:447:23","usedErrors":[],"usedEvents":[]}],"src":"115:756:23"},"id":23},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5920],"Panic":[1682],"SafeCast":[7685]},"id":5921,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4301,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":4303,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5921,"sourceUnit":1683,"src":"129:35:24","symbolAliases":[{"foreign":{"id":4302,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"137:5:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":4305,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5921,"sourceUnit":7686,"src":"165:40:24","symbolAliases":[{"foreign":{"id":4304,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"173:8:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":4306,"nodeType":"StructuredDocumentation","src":"207:73:24","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5920,"linearizedBaseContracts":[5920],"name":"Math","nameLocation":"289:4:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":4311,"members":[{"id":4307,"name":"Floor","nameLocation":"324:5:24","nodeType":"EnumValue","src":"324:5:24"},{"id":4308,"name":"Ceil","nameLocation":"367:4:24","nodeType":"EnumValue","src":"367:4:24"},{"id":4309,"name":"Trunc","nameLocation":"409:5:24","nodeType":"EnumValue","src":"409:5:24"},{"id":4310,"name":"Expand","nameLocation":"439:6:24","nodeType":"EnumValue","src":"439:6:24"}],"name":"Rounding","nameLocation":"305:8:24","nodeType":"EnumDefinition","src":"300:169:24"},{"body":{"id":4324,"nodeType":"Block","src":"731:112:24","statements":[{"AST":{"nativeSrc":"766:71:24","nodeType":"YulBlock","src":"766:71:24","statements":[{"nativeSrc":"780:16:24","nodeType":"YulAssignment","src":"780:16:24","value":{"arguments":[{"name":"a","nativeSrc":"791:1:24","nodeType":"YulIdentifier","src":"791:1:24"},{"name":"b","nativeSrc":"794:1:24","nodeType":"YulIdentifier","src":"794:1:24"}],"functionName":{"name":"add","nativeSrc":"787:3:24","nodeType":"YulIdentifier","src":"787:3:24"},"nativeSrc":"787:9:24","nodeType":"YulFunctionCall","src":"787:9:24"},"variableNames":[{"name":"low","nativeSrc":"780:3:24","nodeType":"YulIdentifier","src":"780:3:24"}]},{"nativeSrc":"809:18:24","nodeType":"YulAssignment","src":"809:18:24","value":{"arguments":[{"name":"low","nativeSrc":"820:3:24","nodeType":"YulIdentifier","src":"820:3:24"},{"name":"a","nativeSrc":"825:1:24","nodeType":"YulIdentifier","src":"825:1:24"}],"functionName":{"name":"lt","nativeSrc":"817:2:24","nodeType":"YulIdentifier","src":"817:2:24"},"nativeSrc":"817:10:24","nodeType":"YulFunctionCall","src":"817:10:24"},"variableNames":[{"name":"high","nativeSrc":"809:4:24","nodeType":"YulIdentifier","src":"809:4:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4314,"isOffset":false,"isSlot":false,"src":"791:1:24","valueSize":1},{"declaration":4314,"isOffset":false,"isSlot":false,"src":"825:1:24","valueSize":1},{"declaration":4316,"isOffset":false,"isSlot":false,"src":"794:1:24","valueSize":1},{"declaration":4319,"isOffset":false,"isSlot":false,"src":"809:4:24","valueSize":1},{"declaration":4321,"isOffset":false,"isSlot":false,"src":"780:3:24","valueSize":1},{"declaration":4321,"isOffset":false,"isSlot":false,"src":"820:3:24","valueSize":1}],"flags":["memory-safe"],"id":4323,"nodeType":"InlineAssembly","src":"741:96:24"}]},"documentation":{"id":4312,"nodeType":"StructuredDocumentation","src":"475:163:24","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":4325,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:24","nodeType":"FunctionDefinition","parameters":{"id":4317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4314,"mutability":"mutable","name":"a","nameLocation":"667:1:24","nodeType":"VariableDeclaration","scope":4325,"src":"659:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4313,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4316,"mutability":"mutable","name":"b","nameLocation":"678:1:24","nodeType":"VariableDeclaration","scope":4325,"src":"670:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4315,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:24"},"returnParameters":{"id":4322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4319,"mutability":"mutable","name":"high","nameLocation":"712:4:24","nodeType":"VariableDeclaration","scope":4325,"src":"704:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4318,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4321,"mutability":"mutable","name":"low","nameLocation":"726:3:24","nodeType":"VariableDeclaration","scope":4325,"src":"718:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4320,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:24"},"scope":5920,"src":"643:200:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4338,"nodeType":"Block","src":"1115:462:24","statements":[{"AST":{"nativeSrc":"1437:134:24","nodeType":"YulBlock","src":"1437:134:24","statements":[{"nativeSrc":"1451:30:24","nodeType":"YulVariableDeclaration","src":"1451:30:24","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:24","nodeType":"YulIdentifier","src":"1468:1:24"},{"name":"b","nativeSrc":"1471:1:24","nodeType":"YulIdentifier","src":"1471:1:24"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:24","nodeType":"YulLiteral","src":"1478:1:24","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:24","nodeType":"YulIdentifier","src":"1474:3:24"},"nativeSrc":"1474:6:24","nodeType":"YulFunctionCall","src":"1474:6:24"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:24","nodeType":"YulIdentifier","src":"1461:6:24"},"nativeSrc":"1461:20:24","nodeType":"YulFunctionCall","src":"1461:20:24"},"variables":[{"name":"mm","nativeSrc":"1455:2:24","nodeType":"YulTypedName","src":"1455:2:24","type":""}]},{"nativeSrc":"1494:16:24","nodeType":"YulAssignment","src":"1494:16:24","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:24","nodeType":"YulIdentifier","src":"1505:1:24"},{"name":"b","nativeSrc":"1508:1:24","nodeType":"YulIdentifier","src":"1508:1:24"}],"functionName":{"name":"mul","nativeSrc":"1501:3:24","nodeType":"YulIdentifier","src":"1501:3:24"},"nativeSrc":"1501:9:24","nodeType":"YulFunctionCall","src":"1501:9:24"},"variableNames":[{"name":"low","nativeSrc":"1494:3:24","nodeType":"YulIdentifier","src":"1494:3:24"}]},{"nativeSrc":"1523:38:24","nodeType":"YulAssignment","src":"1523:38:24","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:24","nodeType":"YulIdentifier","src":"1539:2:24"},{"name":"low","nativeSrc":"1543:3:24","nodeType":"YulIdentifier","src":"1543:3:24"}],"functionName":{"name":"sub","nativeSrc":"1535:3:24","nodeType":"YulIdentifier","src":"1535:3:24"},"nativeSrc":"1535:12:24","nodeType":"YulFunctionCall","src":"1535:12:24"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:24","nodeType":"YulIdentifier","src":"1552:2:24"},{"name":"low","nativeSrc":"1556:3:24","nodeType":"YulIdentifier","src":"1556:3:24"}],"functionName":{"name":"lt","nativeSrc":"1549:2:24","nodeType":"YulIdentifier","src":"1549:2:24"},"nativeSrc":"1549:11:24","nodeType":"YulFunctionCall","src":"1549:11:24"}],"functionName":{"name":"sub","nativeSrc":"1531:3:24","nodeType":"YulIdentifier","src":"1531:3:24"},"nativeSrc":"1531:30:24","nodeType":"YulFunctionCall","src":"1531:30:24"},"variableNames":[{"name":"high","nativeSrc":"1523:4:24","nodeType":"YulIdentifier","src":"1523:4:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4328,"isOffset":false,"isSlot":false,"src":"1468:1:24","valueSize":1},{"declaration":4328,"isOffset":false,"isSlot":false,"src":"1505:1:24","valueSize":1},{"declaration":4330,"isOffset":false,"isSlot":false,"src":"1471:1:24","valueSize":1},{"declaration":4330,"isOffset":false,"isSlot":false,"src":"1508:1:24","valueSize":1},{"declaration":4333,"isOffset":false,"isSlot":false,"src":"1523:4:24","valueSize":1},{"declaration":4335,"isOffset":false,"isSlot":false,"src":"1494:3:24","valueSize":1},{"declaration":4335,"isOffset":false,"isSlot":false,"src":"1543:3:24","valueSize":1},{"declaration":4335,"isOffset":false,"isSlot":false,"src":"1556:3:24","valueSize":1}],"flags":["memory-safe"],"id":4337,"nodeType":"InlineAssembly","src":"1412:159:24"}]},"documentation":{"id":4326,"nodeType":"StructuredDocumentation","src":"849:173:24","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":4339,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:24","nodeType":"FunctionDefinition","parameters":{"id":4331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4328,"mutability":"mutable","name":"a","nameLocation":"1051:1:24","nodeType":"VariableDeclaration","scope":4339,"src":"1043:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4327,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4330,"mutability":"mutable","name":"b","nameLocation":"1062:1:24","nodeType":"VariableDeclaration","scope":4339,"src":"1054:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4329,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:24"},"returnParameters":{"id":4336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4333,"mutability":"mutable","name":"high","nameLocation":"1096:4:24","nodeType":"VariableDeclaration","scope":4339,"src":"1088:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4332,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4335,"mutability":"mutable","name":"low","nameLocation":"1110:3:24","nodeType":"VariableDeclaration","scope":4339,"src":"1102:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4334,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:24"},"scope":5920,"src":"1027:550:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4373,"nodeType":"Block","src":"1784:149:24","statements":[{"id":4372,"nodeType":"UncheckedBlock","src":"1794:133:24","statements":[{"assignments":[4352],"declarations":[{"constant":false,"id":4352,"mutability":"mutable","name":"c","nameLocation":"1826:1:24","nodeType":"VariableDeclaration","scope":4372,"src":"1818:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4351,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4356,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4353,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"1830:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4354,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"1834:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:24"},{"expression":{"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4357,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"1849:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4358,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"1859:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4359,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4342,"src":"1864:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4362,"nodeType":"ExpressionStatement","src":"1849:16:24"},{"expression":{"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4363,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"1879:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4364,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"1888:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4367,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"1908:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4365,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"1892:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7685_$","typeString":"type(library SafeCast)"}},"id":4366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"1892:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4371,"nodeType":"ExpressionStatement","src":"1879:37:24"}]}]},"documentation":{"id":4340,"nodeType":"StructuredDocumentation","src":"1583:105:24","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":4374,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:24","nodeType":"FunctionDefinition","parameters":{"id":4345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4342,"mutability":"mutable","name":"a","nameLocation":"1717:1:24","nodeType":"VariableDeclaration","scope":4374,"src":"1709:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4341,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4344,"mutability":"mutable","name":"b","nameLocation":"1728:1:24","nodeType":"VariableDeclaration","scope":4374,"src":"1720:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4343,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:24"},"returnParameters":{"id":4350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4347,"mutability":"mutable","name":"success","nameLocation":"1759:7:24","nodeType":"VariableDeclaration","scope":4374,"src":"1754:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4346,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4349,"mutability":"mutable","name":"result","nameLocation":"1776:6:24","nodeType":"VariableDeclaration","scope":4374,"src":"1768:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4348,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:24"},"scope":5920,"src":"1693:240:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4408,"nodeType":"Block","src":"2143:149:24","statements":[{"id":4407,"nodeType":"UncheckedBlock","src":"2153:133:24","statements":[{"assignments":[4387],"declarations":[{"constant":false,"id":4387,"mutability":"mutable","name":"c","nameLocation":"2185:1:24","nodeType":"VariableDeclaration","scope":4407,"src":"2177:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4386,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4391,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4388,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"2189:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4389,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"2193:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:24"},{"expression":{"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4392,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"2208:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4393,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"2218:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4394,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"2223:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4397,"nodeType":"ExpressionStatement","src":"2208:16:24"},{"expression":{"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4398,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"2238:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4399,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4387,"src":"2247:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4402,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4382,"src":"2267:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4400,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"2251:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7685_$","typeString":"type(library SafeCast)"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"2251:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4406,"nodeType":"ExpressionStatement","src":"2238:37:24"}]}]},"documentation":{"id":4375,"nodeType":"StructuredDocumentation","src":"1939:108:24","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":4409,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:24","nodeType":"FunctionDefinition","parameters":{"id":4380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4377,"mutability":"mutable","name":"a","nameLocation":"2076:1:24","nodeType":"VariableDeclaration","scope":4409,"src":"2068:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4376,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4379,"mutability":"mutable","name":"b","nameLocation":"2087:1:24","nodeType":"VariableDeclaration","scope":4409,"src":"2079:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4378,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:24"},"returnParameters":{"id":4385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4382,"mutability":"mutable","name":"success","nameLocation":"2118:7:24","nodeType":"VariableDeclaration","scope":4409,"src":"2113:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4381,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4384,"mutability":"mutable","name":"result","nameLocation":"2135:6:24","nodeType":"VariableDeclaration","scope":4409,"src":"2127:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4383,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:24"},"scope":5920,"src":"2052:240:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4438,"nodeType":"Block","src":"2505:391:24","statements":[{"id":4437,"nodeType":"UncheckedBlock","src":"2515:375:24","statements":[{"assignments":[4422],"declarations":[{"constant":false,"id":4422,"mutability":"mutable","name":"c","nameLocation":"2547:1:24","nodeType":"VariableDeclaration","scope":4437,"src":"2539:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4421,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4426,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4423,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"2551:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4424,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4414,"src":"2555:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:24"},{"AST":{"nativeSrc":"2595:188:24","nodeType":"YulBlock","src":"2595:188:24","statements":[{"nativeSrc":"2727:42:24","nodeType":"YulAssignment","src":"2727:42:24","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:24","nodeType":"YulIdentifier","src":"2748:1:24"},{"name":"a","nativeSrc":"2751:1:24","nodeType":"YulIdentifier","src":"2751:1:24"}],"functionName":{"name":"div","nativeSrc":"2744:3:24","nodeType":"YulIdentifier","src":"2744:3:24"},"nativeSrc":"2744:9:24","nodeType":"YulFunctionCall","src":"2744:9:24"},{"name":"b","nativeSrc":"2755:1:24","nodeType":"YulIdentifier","src":"2755:1:24"}],"functionName":{"name":"eq","nativeSrc":"2741:2:24","nodeType":"YulIdentifier","src":"2741:2:24"},"nativeSrc":"2741:16:24","nodeType":"YulFunctionCall","src":"2741:16:24"},{"arguments":[{"name":"a","nativeSrc":"2766:1:24","nodeType":"YulIdentifier","src":"2766:1:24"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:24","nodeType":"YulIdentifier","src":"2759:6:24"},"nativeSrc":"2759:9:24","nodeType":"YulFunctionCall","src":"2759:9:24"}],"functionName":{"name":"or","nativeSrc":"2738:2:24","nodeType":"YulIdentifier","src":"2738:2:24"},"nativeSrc":"2738:31:24","nodeType":"YulFunctionCall","src":"2738:31:24"},"variableNames":[{"name":"success","nativeSrc":"2727:7:24","nodeType":"YulIdentifier","src":"2727:7:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4412,"isOffset":false,"isSlot":false,"src":"2751:1:24","valueSize":1},{"declaration":4412,"isOffset":false,"isSlot":false,"src":"2766:1:24","valueSize":1},{"declaration":4414,"isOffset":false,"isSlot":false,"src":"2755:1:24","valueSize":1},{"declaration":4422,"isOffset":false,"isSlot":false,"src":"2748:1:24","valueSize":1},{"declaration":4417,"isOffset":false,"isSlot":false,"src":"2727:7:24","valueSize":1}],"flags":["memory-safe"],"id":4427,"nodeType":"InlineAssembly","src":"2570:213:24"},{"expression":{"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4428,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"2842:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4429,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"2851:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4432,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"2871:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4430,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"2855:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7685_$","typeString":"type(library SafeCast)"}},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"2855:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4436,"nodeType":"ExpressionStatement","src":"2842:37:24"}]}]},"documentation":{"id":4410,"nodeType":"StructuredDocumentation","src":"2298:111:24","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":4439,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:24","nodeType":"FunctionDefinition","parameters":{"id":4415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4412,"mutability":"mutable","name":"a","nameLocation":"2438:1:24","nodeType":"VariableDeclaration","scope":4439,"src":"2430:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4411,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4414,"mutability":"mutable","name":"b","nameLocation":"2449:1:24","nodeType":"VariableDeclaration","scope":4439,"src":"2441:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4413,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:24"},"returnParameters":{"id":4420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4417,"mutability":"mutable","name":"success","nameLocation":"2480:7:24","nodeType":"VariableDeclaration","scope":4439,"src":"2475:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4416,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4419,"mutability":"mutable","name":"result","nameLocation":"2497:6:24","nodeType":"VariableDeclaration","scope":4439,"src":"2489:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4418,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:24"},"scope":5920,"src":"2414:482:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4459,"nodeType":"Block","src":"3111:231:24","statements":[{"id":4458,"nodeType":"UncheckedBlock","src":"3121:215:24","statements":[{"expression":{"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4451,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"3145:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4452,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"3155:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4456,"nodeType":"ExpressionStatement","src":"3145:15:24"},{"AST":{"nativeSrc":"3199:127:24","nodeType":"YulBlock","src":"3199:127:24","statements":[{"nativeSrc":"3293:19:24","nodeType":"YulAssignment","src":"3293:19:24","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:24","nodeType":"YulIdentifier","src":"3307:1:24"},{"name":"b","nativeSrc":"3310:1:24","nodeType":"YulIdentifier","src":"3310:1:24"}],"functionName":{"name":"div","nativeSrc":"3303:3:24","nodeType":"YulIdentifier","src":"3303:3:24"},"nativeSrc":"3303:9:24","nodeType":"YulFunctionCall","src":"3303:9:24"},"variableNames":[{"name":"result","nativeSrc":"3293:6:24","nodeType":"YulIdentifier","src":"3293:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4442,"isOffset":false,"isSlot":false,"src":"3307:1:24","valueSize":1},{"declaration":4444,"isOffset":false,"isSlot":false,"src":"3310:1:24","valueSize":1},{"declaration":4449,"isOffset":false,"isSlot":false,"src":"3293:6:24","valueSize":1}],"flags":["memory-safe"],"id":4457,"nodeType":"InlineAssembly","src":"3174:152:24"}]}]},"documentation":{"id":4440,"nodeType":"StructuredDocumentation","src":"2902:113:24","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4460,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:24","nodeType":"FunctionDefinition","parameters":{"id":4445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4442,"mutability":"mutable","name":"a","nameLocation":"3044:1:24","nodeType":"VariableDeclaration","scope":4460,"src":"3036:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4441,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4444,"mutability":"mutable","name":"b","nameLocation":"3055:1:24","nodeType":"VariableDeclaration","scope":4460,"src":"3047:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4443,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:24"},"returnParameters":{"id":4450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4447,"mutability":"mutable","name":"success","nameLocation":"3086:7:24","nodeType":"VariableDeclaration","scope":4460,"src":"3081:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4446,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4449,"mutability":"mutable","name":"result","nameLocation":"3103:6:24","nodeType":"VariableDeclaration","scope":4460,"src":"3095:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4448,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:24"},"scope":5920,"src":"3020:322:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4480,"nodeType":"Block","src":"3567:231:24","statements":[{"id":4479,"nodeType":"UncheckedBlock","src":"3577:215:24","statements":[{"expression":{"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4472,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4468,"src":"3601:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4473,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"3611:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4477,"nodeType":"ExpressionStatement","src":"3601:15:24"},{"AST":{"nativeSrc":"3655:127:24","nodeType":"YulBlock","src":"3655:127:24","statements":[{"nativeSrc":"3749:19:24","nodeType":"YulAssignment","src":"3749:19:24","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:24","nodeType":"YulIdentifier","src":"3763:1:24"},{"name":"b","nativeSrc":"3766:1:24","nodeType":"YulIdentifier","src":"3766:1:24"}],"functionName":{"name":"mod","nativeSrc":"3759:3:24","nodeType":"YulIdentifier","src":"3759:3:24"},"nativeSrc":"3759:9:24","nodeType":"YulFunctionCall","src":"3759:9:24"},"variableNames":[{"name":"result","nativeSrc":"3749:6:24","nodeType":"YulIdentifier","src":"3749:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4463,"isOffset":false,"isSlot":false,"src":"3763:1:24","valueSize":1},{"declaration":4465,"isOffset":false,"isSlot":false,"src":"3766:1:24","valueSize":1},{"declaration":4470,"isOffset":false,"isSlot":false,"src":"3749:6:24","valueSize":1}],"flags":["memory-safe"],"id":4478,"nodeType":"InlineAssembly","src":"3630:152:24"}]}]},"documentation":{"id":4461,"nodeType":"StructuredDocumentation","src":"3348:123:24","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4481,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:24","nodeType":"FunctionDefinition","parameters":{"id":4466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4463,"mutability":"mutable","name":"a","nameLocation":"3500:1:24","nodeType":"VariableDeclaration","scope":4481,"src":"3492:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4462,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4465,"mutability":"mutable","name":"b","nameLocation":"3511:1:24","nodeType":"VariableDeclaration","scope":4481,"src":"3503:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4464,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:24"},"returnParameters":{"id":4471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4468,"mutability":"mutable","name":"success","nameLocation":"3542:7:24","nodeType":"VariableDeclaration","scope":4481,"src":"3537:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4467,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4470,"mutability":"mutable","name":"result","nameLocation":"3559:6:24","nodeType":"VariableDeclaration","scope":4481,"src":"3551:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4469,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:24"},"scope":5920,"src":"3476:322:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4510,"nodeType":"Block","src":"3989:122:24","statements":[{"assignments":[4492,4494],"declarations":[{"constant":false,"id":4492,"mutability":"mutable","name":"success","nameLocation":"4005:7:24","nodeType":"VariableDeclaration","scope":4510,"src":"4000:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4491,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4494,"mutability":"mutable","name":"result","nameLocation":"4022:6:24","nodeType":"VariableDeclaration","scope":4510,"src":"4014:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4493,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4499,"initialValue":{"arguments":[{"id":4496,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4484,"src":"4039:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4497,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"4042:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4495,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"4032:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:24"},{"expression":{"arguments":[{"id":4501,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"4069:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4502,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4494,"src":"4078:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4504,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4503,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:24","memberName":"max","nodeType":"MemberAccess","src":"4086:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4500,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"4061:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4490,"id":4509,"nodeType":"Return","src":"4054:50:24"}]},"documentation":{"id":4482,"nodeType":"StructuredDocumentation","src":"3804:103:24","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4511,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:24","nodeType":"FunctionDefinition","parameters":{"id":4487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4484,"mutability":"mutable","name":"a","nameLocation":"3943:1:24","nodeType":"VariableDeclaration","scope":4511,"src":"3935:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4483,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4486,"mutability":"mutable","name":"b","nameLocation":"3954:1:24","nodeType":"VariableDeclaration","scope":4511,"src":"3946:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4485,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:24"},"returnParameters":{"id":4490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4511,"src":"3980:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4488,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:24"},"scope":5920,"src":"3912:199:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4530,"nodeType":"Block","src":"4294:73:24","statements":[{"assignments":[null,4522],"declarations":[null,{"constant":false,"id":4522,"mutability":"mutable","name":"result","nameLocation":"4315:6:24","nodeType":"VariableDeclaration","scope":4530,"src":"4307:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4521,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4527,"initialValue":{"arguments":[{"id":4524,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"4332:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4525,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4516,"src":"4335:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4523,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4409,"src":"4325:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:24"},{"expression":{"id":4528,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"4354:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4520,"id":4529,"nodeType":"Return","src":"4347:13:24"}]},"documentation":{"id":4512,"nodeType":"StructuredDocumentation","src":"4117:95:24","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":4531,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:24","nodeType":"FunctionDefinition","parameters":{"id":4517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4514,"mutability":"mutable","name":"a","nameLocation":"4248:1:24","nodeType":"VariableDeclaration","scope":4531,"src":"4240:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4513,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4516,"mutability":"mutable","name":"b","nameLocation":"4259:1:24","nodeType":"VariableDeclaration","scope":4531,"src":"4251:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4515,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:24"},"returnParameters":{"id":4520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4531,"src":"4285:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4518,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:24"},"scope":5920,"src":"4217:150:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4560,"nodeType":"Block","src":"4564:122:24","statements":[{"assignments":[4542,4544],"declarations":[{"constant":false,"id":4542,"mutability":"mutable","name":"success","nameLocation":"4580:7:24","nodeType":"VariableDeclaration","scope":4560,"src":"4575:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4541,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4544,"mutability":"mutable","name":"result","nameLocation":"4597:6:24","nodeType":"VariableDeclaration","scope":4560,"src":"4589:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4543,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4549,"initialValue":{"arguments":[{"id":4546,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4534,"src":"4614:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4547,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"4617:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4545,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"4607:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:24"},{"expression":{"arguments":[{"id":4551,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"4644:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4552,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"4653:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4554,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:24","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4553,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:24","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:24","memberName":"max","nodeType":"MemberAccess","src":"4661:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4550,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"4636:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4540,"id":4559,"nodeType":"Return","src":"4629:50:24"}]},"documentation":{"id":4532,"nodeType":"StructuredDocumentation","src":"4373:109:24","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4561,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:24","nodeType":"FunctionDefinition","parameters":{"id":4537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4534,"mutability":"mutable","name":"a","nameLocation":"4518:1:24","nodeType":"VariableDeclaration","scope":4561,"src":"4510:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4533,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4536,"mutability":"mutable","name":"b","nameLocation":"4529:1:24","nodeType":"VariableDeclaration","scope":4561,"src":"4521:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4535,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:24"},"returnParameters":{"id":4540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4561,"src":"4555:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4538,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:24"},"scope":5920,"src":"4487:199:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4587,"nodeType":"Block","src":"5158:207:24","statements":[{"id":4586,"nodeType":"UncheckedBlock","src":"5168:191:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4573,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"5306:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4574,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"5312:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4575,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"5316:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4577,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4580,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4564,"src":"5337:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4578,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"5321:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7685_$","typeString":"type(library SafeCast)"}},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"5321:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4583,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4572,"id":4585,"nodeType":"Return","src":"5299:49:24"}]}]},"documentation":{"id":4562,"nodeType":"StructuredDocumentation","src":"4692:374:24","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4588,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:24","nodeType":"FunctionDefinition","parameters":{"id":4569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4564,"mutability":"mutable","name":"condition","nameLocation":"5093:9:24","nodeType":"VariableDeclaration","scope":4588,"src":"5088:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4563,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4566,"mutability":"mutable","name":"a","nameLocation":"5112:1:24","nodeType":"VariableDeclaration","scope":4588,"src":"5104:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4565,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4568,"mutability":"mutable","name":"b","nameLocation":"5123:1:24","nodeType":"VariableDeclaration","scope":4588,"src":"5115:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4567,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:24"},"returnParameters":{"id":4572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4588,"src":"5149:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4570,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:24"},"scope":5920,"src":"5071:294:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4606,"nodeType":"Block","src":"5502:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4599,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"5527:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4600,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"5531:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4602,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4591,"src":"5534:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4603,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"5537:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4598,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"5519:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4597,"id":4605,"nodeType":"Return","src":"5512:27:24"}]},"documentation":{"id":4589,"nodeType":"StructuredDocumentation","src":"5371:59:24","text":" @dev Returns the largest of two numbers."},"id":4607,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:24","nodeType":"FunctionDefinition","parameters":{"id":4594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4591,"mutability":"mutable","name":"a","nameLocation":"5456:1:24","nodeType":"VariableDeclaration","scope":4607,"src":"5448:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4590,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4593,"mutability":"mutable","name":"b","nameLocation":"5467:1:24","nodeType":"VariableDeclaration","scope":4607,"src":"5459:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4592,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:24"},"returnParameters":{"id":4597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4607,"src":"5493:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4595,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:24"},"scope":5920,"src":"5435:111:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4625,"nodeType":"Block","src":"5684:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4618,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"5709:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4619,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"5713:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4621,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4610,"src":"5716:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4622,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"5719:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4617,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"5701:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4616,"id":4624,"nodeType":"Return","src":"5694:27:24"}]},"documentation":{"id":4608,"nodeType":"StructuredDocumentation","src":"5552:60:24","text":" @dev Returns the smallest of two numbers."},"id":4626,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:24","nodeType":"FunctionDefinition","parameters":{"id":4613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4610,"mutability":"mutable","name":"a","nameLocation":"5638:1:24","nodeType":"VariableDeclaration","scope":4626,"src":"5630:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4609,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4612,"mutability":"mutable","name":"b","nameLocation":"5649:1:24","nodeType":"VariableDeclaration","scope":4626,"src":"5641:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4611,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:24"},"returnParameters":{"id":4616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4626,"src":"5675:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4614,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:24"},"scope":5920,"src":"5617:111:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4648,"nodeType":"Block","src":"5912:82:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4636,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"5967:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4637,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"5971:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4639,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4640,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"5977:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4641,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4631,"src":"5981:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4643,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4635,"id":4647,"nodeType":"Return","src":"5959:28:24"}]},"documentation":{"id":4627,"nodeType":"StructuredDocumentation","src":"5734:102:24","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4649,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:24","nodeType":"FunctionDefinition","parameters":{"id":4632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4629,"mutability":"mutable","name":"a","nameLocation":"5866:1:24","nodeType":"VariableDeclaration","scope":4649,"src":"5858:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4628,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4631,"mutability":"mutable","name":"b","nameLocation":"5877:1:24","nodeType":"VariableDeclaration","scope":4649,"src":"5869:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4630,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:24"},"returnParameters":{"id":4635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4649,"src":"5903:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4633,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:24"},"scope":5920,"src":"5841:153:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4689,"nodeType":"Block","src":"6286:633:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4659,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"6300:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4670,"nodeType":"IfStatement","src":"6296:150:24","trueBody":{"id":4669,"nodeType":"Block","src":"6308:138:24","statements":[{"expression":{"arguments":[{"expression":{"id":4665,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"6412:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1682_$","typeString":"type(library Panic)"}},"id":4666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1649,"src":"6412:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4662,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"6400:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1682_$","typeString":"type(library Panic)"}},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1681,"src":"6400:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4668,"nodeType":"ExpressionStatement","src":"6400:35:24"}]}},{"id":4688,"nodeType":"UncheckedBlock","src":"6829:84:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4673,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"6876:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4671,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"6860:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7685_$","typeString":"type(library SafeCast)"}},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"6860:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4677,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4652,"src":"6887:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4680,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4681,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"6896:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4685,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4658,"id":4687,"nodeType":"Return","src":"6853:49:24"}]}]},"documentation":{"id":4650,"nodeType":"StructuredDocumentation","src":"6000:210:24","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4690,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:24","nodeType":"FunctionDefinition","parameters":{"id":4655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4652,"mutability":"mutable","name":"a","nameLocation":"6240:1:24","nodeType":"VariableDeclaration","scope":4690,"src":"6232:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4651,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4654,"mutability":"mutable","name":"b","nameLocation":"6251:1:24","nodeType":"VariableDeclaration","scope":4690,"src":"6243:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4653,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:24"},"returnParameters":{"id":4658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4690,"src":"6277:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4656,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:24"},"scope":5920,"src":"6215:704:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4825,"nodeType":"Block","src":"7340:3585:24","statements":[{"id":4824,"nodeType":"UncheckedBlock","src":"7350:3569:24","statements":[{"assignments":[4703,4705],"declarations":[{"constant":false,"id":4703,"mutability":"mutable","name":"high","nameLocation":"7383:4:24","nodeType":"VariableDeclaration","scope":4824,"src":"7375:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4702,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4705,"mutability":"mutable","name":"low","nameLocation":"7397:3:24","nodeType":"VariableDeclaration","scope":4824,"src":"7389:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4704,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4710,"initialValue":{"arguments":[{"id":4707,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"7411:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4708,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4695,"src":"7414:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4706,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"7404:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4711,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"7498:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4719,"nodeType":"IfStatement","src":"7494:365:24","trueBody":{"id":4718,"nodeType":"Block","src":"7509:350:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4714,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"7827:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4715,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"7833:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4701,"id":4717,"nodeType":"Return","src":"7820:24:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4720,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"7969:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4721,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"7984:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4738,"nodeType":"IfStatement","src":"7965:142:24","trueBody":{"id":4737,"nodeType":"Block","src":"7990:117:24","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4727,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"8028:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4730,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"8046:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1682_$","typeString":"type(library Panic)"}},"id":4731,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1649,"src":"8046:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4732,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"8070:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1682_$","typeString":"type(library Panic)"}},"id":4733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:24","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1645,"src":"8070:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4726,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"8020:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4723,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"8008:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1682_$","typeString":"type(library Panic)"}},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1681,"src":"8008:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4736,"nodeType":"ExpressionStatement","src":"8008:84:24"}]}},{"assignments":[4740],"declarations":[{"constant":false,"id":4740,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:24","nodeType":"VariableDeclaration","scope":4824,"src":"8359:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4739,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4741,"nodeType":"VariableDeclarationStatement","src":"8359:17:24"},{"AST":{"nativeSrc":"8415:283:24","nodeType":"YulBlock","src":"8415:283:24","statements":[{"nativeSrc":"8484:38:24","nodeType":"YulAssignment","src":"8484:38:24","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:24","nodeType":"YulIdentifier","src":"8504:1:24"},{"name":"y","nativeSrc":"8507:1:24","nodeType":"YulIdentifier","src":"8507:1:24"},{"name":"denominator","nativeSrc":"8510:11:24","nodeType":"YulIdentifier","src":"8510:11:24"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:24","nodeType":"YulIdentifier","src":"8497:6:24"},"nativeSrc":"8497:25:24","nodeType":"YulFunctionCall","src":"8497:25:24"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:24","nodeType":"YulIdentifier","src":"8484:9:24"}]},{"nativeSrc":"8604:37:24","nodeType":"YulAssignment","src":"8604:37:24","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:24","nodeType":"YulIdentifier","src":"8616:4:24"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:24","nodeType":"YulIdentifier","src":"8625:9:24"},{"name":"low","nativeSrc":"8636:3:24","nodeType":"YulIdentifier","src":"8636:3:24"}],"functionName":{"name":"gt","nativeSrc":"8622:2:24","nodeType":"YulIdentifier","src":"8622:2:24"},"nativeSrc":"8622:18:24","nodeType":"YulFunctionCall","src":"8622:18:24"}],"functionName":{"name":"sub","nativeSrc":"8612:3:24","nodeType":"YulIdentifier","src":"8612:3:24"},"nativeSrc":"8612:29:24","nodeType":"YulFunctionCall","src":"8612:29:24"},"variableNames":[{"name":"high","nativeSrc":"8604:4:24","nodeType":"YulIdentifier","src":"8604:4:24"}]},{"nativeSrc":"8658:26:24","nodeType":"YulAssignment","src":"8658:26:24","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:24","nodeType":"YulIdentifier","src":"8669:3:24"},{"name":"remainder","nativeSrc":"8674:9:24","nodeType":"YulIdentifier","src":"8674:9:24"}],"functionName":{"name":"sub","nativeSrc":"8665:3:24","nodeType":"YulIdentifier","src":"8665:3:24"},"nativeSrc":"8665:19:24","nodeType":"YulFunctionCall","src":"8665:19:24"},"variableNames":[{"name":"low","nativeSrc":"8658:3:24","nodeType":"YulIdentifier","src":"8658:3:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4697,"isOffset":false,"isSlot":false,"src":"8510:11:24","valueSize":1},{"declaration":4703,"isOffset":false,"isSlot":false,"src":"8604:4:24","valueSize":1},{"declaration":4703,"isOffset":false,"isSlot":false,"src":"8616:4:24","valueSize":1},{"declaration":4705,"isOffset":false,"isSlot":false,"src":"8636:3:24","valueSize":1},{"declaration":4705,"isOffset":false,"isSlot":false,"src":"8658:3:24","valueSize":1},{"declaration":4705,"isOffset":false,"isSlot":false,"src":"8669:3:24","valueSize":1},{"declaration":4740,"isOffset":false,"isSlot":false,"src":"8484:9:24","valueSize":1},{"declaration":4740,"isOffset":false,"isSlot":false,"src":"8625:9:24","valueSize":1},{"declaration":4740,"isOffset":false,"isSlot":false,"src":"8674:9:24","valueSize":1},{"declaration":4693,"isOffset":false,"isSlot":false,"src":"8504:1:24","valueSize":1},{"declaration":4695,"isOffset":false,"isSlot":false,"src":"8507:1:24","valueSize":1}],"flags":["memory-safe"],"id":4742,"nodeType":"InlineAssembly","src":"8390:308:24"},{"assignments":[4744],"declarations":[{"constant":false,"id":4744,"mutability":"mutable","name":"twos","nameLocation":"8910:4:24","nodeType":"VariableDeclaration","scope":4824,"src":"8902:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4743,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4751,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4745,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"8917:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4747,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"8936:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4749,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:24"},{"AST":{"nativeSrc":"8987:359:24","nodeType":"YulBlock","src":"8987:359:24","statements":[{"nativeSrc":"9052:37:24","nodeType":"YulAssignment","src":"9052:37:24","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:24","nodeType":"YulIdentifier","src":"9071:11:24"},{"name":"twos","nativeSrc":"9084:4:24","nodeType":"YulIdentifier","src":"9084:4:24"}],"functionName":{"name":"div","nativeSrc":"9067:3:24","nodeType":"YulIdentifier","src":"9067:3:24"},"nativeSrc":"9067:22:24","nodeType":"YulFunctionCall","src":"9067:22:24"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:24","nodeType":"YulIdentifier","src":"9052:11:24"}]},{"nativeSrc":"9153:21:24","nodeType":"YulAssignment","src":"9153:21:24","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:24","nodeType":"YulIdentifier","src":"9164:3:24"},{"name":"twos","nativeSrc":"9169:4:24","nodeType":"YulIdentifier","src":"9169:4:24"}],"functionName":{"name":"div","nativeSrc":"9160:3:24","nodeType":"YulIdentifier","src":"9160:3:24"},"nativeSrc":"9160:14:24","nodeType":"YulFunctionCall","src":"9160:14:24"},"variableNames":[{"name":"low","nativeSrc":"9153:3:24","nodeType":"YulIdentifier","src":"9153:3:24"}]},{"nativeSrc":"9293:39:24","nodeType":"YulAssignment","src":"9293:39:24","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:24","nodeType":"YulLiteral","src":"9313:1:24","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:24","nodeType":"YulIdentifier","src":"9316:4:24"}],"functionName":{"name":"sub","nativeSrc":"9309:3:24","nodeType":"YulIdentifier","src":"9309:3:24"},"nativeSrc":"9309:12:24","nodeType":"YulFunctionCall","src":"9309:12:24"},{"name":"twos","nativeSrc":"9323:4:24","nodeType":"YulIdentifier","src":"9323:4:24"}],"functionName":{"name":"div","nativeSrc":"9305:3:24","nodeType":"YulIdentifier","src":"9305:3:24"},"nativeSrc":"9305:23:24","nodeType":"YulFunctionCall","src":"9305:23:24"},{"kind":"number","nativeSrc":"9330:1:24","nodeType":"YulLiteral","src":"9330:1:24","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:24","nodeType":"YulIdentifier","src":"9301:3:24"},"nativeSrc":"9301:31:24","nodeType":"YulFunctionCall","src":"9301:31:24"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:24","nodeType":"YulIdentifier","src":"9293:4:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4697,"isOffset":false,"isSlot":false,"src":"9052:11:24","valueSize":1},{"declaration":4697,"isOffset":false,"isSlot":false,"src":"9071:11:24","valueSize":1},{"declaration":4705,"isOffset":false,"isSlot":false,"src":"9153:3:24","valueSize":1},{"declaration":4705,"isOffset":false,"isSlot":false,"src":"9164:3:24","valueSize":1},{"declaration":4744,"isOffset":false,"isSlot":false,"src":"9084:4:24","valueSize":1},{"declaration":4744,"isOffset":false,"isSlot":false,"src":"9169:4:24","valueSize":1},{"declaration":4744,"isOffset":false,"isSlot":false,"src":"9293:4:24","valueSize":1},{"declaration":4744,"isOffset":false,"isSlot":false,"src":"9316:4:24","valueSize":1},{"declaration":4744,"isOffset":false,"isSlot":false,"src":"9323:4:24","valueSize":1}],"flags":["memory-safe"],"id":4752,"nodeType":"InlineAssembly","src":"8962:384:24"},{"expression":{"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4753,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"9409:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4754,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4703,"src":"9416:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4755,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4744,"src":"9423:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4758,"nodeType":"ExpressionStatement","src":"9409:18:24"},{"assignments":[4760],"declarations":[{"constant":false,"id":4760,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:24","nodeType":"VariableDeclaration","scope":4824,"src":"9762:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4759,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4767,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4762,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"9785:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4764,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:24"},{"expression":{"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4768,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"10018:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4770,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"10033:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4771,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"10047:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4775,"nodeType":"ExpressionStatement","src":"10018:36:24"},{"expression":{"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4776,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"10088:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4778,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"10103:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4779,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"10117:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4783,"nodeType":"ExpressionStatement","src":"10088:36:24"},{"expression":{"id":4790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4784,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"10160:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4786,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"10175:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4787,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"10189:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4791,"nodeType":"ExpressionStatement","src":"10160:36:24"},{"expression":{"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4792,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"10231:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4794,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"10246:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4795,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"10260:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4799,"nodeType":"ExpressionStatement","src":"10231:36:24"},{"expression":{"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4800,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"10304:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4802,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"10319:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4803,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"10333:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4807,"nodeType":"ExpressionStatement","src":"10304:36:24"},{"expression":{"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4808,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"10378:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4810,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4697,"src":"10393:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4811,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"10407:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4815,"nodeType":"ExpressionStatement","src":"10378:36:24"},{"expression":{"id":4820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4816,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"10859:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4817,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4705,"src":"10868:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4818,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"10874:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4821,"nodeType":"ExpressionStatement","src":"10859:22:24"},{"expression":{"id":4822,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4700,"src":"10902:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4701,"id":4823,"nodeType":"Return","src":"10895:13:24"}]}]},"documentation":{"id":4691,"nodeType":"StructuredDocumentation","src":"6925:312:24","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4826,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:24","nodeType":"FunctionDefinition","parameters":{"id":4698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4693,"mutability":"mutable","name":"x","nameLocation":"7266:1:24","nodeType":"VariableDeclaration","scope":4826,"src":"7258:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4692,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4695,"mutability":"mutable","name":"y","nameLocation":"7277:1:24","nodeType":"VariableDeclaration","scope":4826,"src":"7269:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4694,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4697,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:24","nodeType":"VariableDeclaration","scope":4826,"src":"7280:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4696,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:24"},"returnParameters":{"id":4701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4700,"mutability":"mutable","name":"result","nameLocation":"7332:6:24","nodeType":"VariableDeclaration","scope":4826,"src":"7324:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4699,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:24"},"scope":5920,"src":"7242:3683:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4862,"nodeType":"Block","src":"11164:128:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4842,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"11188:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4843,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"11191:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4844,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"11194:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4841,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4826,4863],"referencedDeclaration":4826,"src":"11181:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4849,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4836,"src":"11242:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"}],"id":4848,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"11225:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4311_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4852,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"11262:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4853,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4831,"src":"11265:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4854,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4833,"src":"11268:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4851,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:24","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4846,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"11209:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7685_$","typeString":"type(library SafeCast)"}},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"11209:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4840,"id":4861,"nodeType":"Return","src":"11174:111:24"}]},"documentation":{"id":4827,"nodeType":"StructuredDocumentation","src":"10931:118:24","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4863,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:24","nodeType":"FunctionDefinition","parameters":{"id":4837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4829,"mutability":"mutable","name":"x","nameLocation":"11078:1:24","nodeType":"VariableDeclaration","scope":4863,"src":"11070:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4828,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4831,"mutability":"mutable","name":"y","nameLocation":"11089:1:24","nodeType":"VariableDeclaration","scope":4863,"src":"11081:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4830,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4833,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:24","nodeType":"VariableDeclaration","scope":4863,"src":"11092:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4832,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4836,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:24","nodeType":"VariableDeclaration","scope":4863,"src":"11113:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"},"typeName":{"id":4835,"nodeType":"UserDefinedTypeName","pathNode":{"id":4834,"name":"Rounding","nameLocations":["11113:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":4311,"src":"11113:8:24"},"referencedDeclaration":4311,"src":"11113:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:24"},"returnParameters":{"id":4840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4863,"src":"11155:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4838,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:24"},"scope":5920,"src":"11054:238:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4912,"nodeType":"Block","src":"11500:245:24","statements":[{"id":4911,"nodeType":"UncheckedBlock","src":"11510:229:24","statements":[{"assignments":[4876,4878],"declarations":[{"constant":false,"id":4876,"mutability":"mutable","name":"high","nameLocation":"11543:4:24","nodeType":"VariableDeclaration","scope":4911,"src":"11535:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4875,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4878,"mutability":"mutable","name":"low","nameLocation":"11557:3:24","nodeType":"VariableDeclaration","scope":4911,"src":"11549:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4877,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4883,"initialValue":{"arguments":[{"id":4880,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4866,"src":"11571:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4881,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4868,"src":"11574:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4879,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"11564:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4884,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"11594:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4886,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"11607:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4897,"nodeType":"IfStatement","src":"11590:86:24","trueBody":{"id":4896,"nodeType":"Block","src":"11610:66:24","statements":[{"expression":{"arguments":[{"expression":{"id":4892,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"11640:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1682_$","typeString":"type(library Panic)"}},"id":4893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:24","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1645,"src":"11640:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4889,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"11628:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1682_$","typeString":"type(library Panic)"}},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1681,"src":"11628:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4895,"nodeType":"ExpressionStatement","src":"11628:33:24"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4898,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"11697:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":4899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4900,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"11712:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4902,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4904,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4905,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"11719:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4906,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"11726:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4908,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4874,"id":4910,"nodeType":"Return","src":"11689:39:24"}]}]},"documentation":{"id":4864,"nodeType":"StructuredDocumentation","src":"11298:111:24","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":4913,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:24","nodeType":"FunctionDefinition","parameters":{"id":4871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4866,"mutability":"mutable","name":"x","nameLocation":"11438:1:24","nodeType":"VariableDeclaration","scope":4913,"src":"11430:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4865,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4868,"mutability":"mutable","name":"y","nameLocation":"11449:1:24","nodeType":"VariableDeclaration","scope":4913,"src":"11441:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4867,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4870,"mutability":"mutable","name":"n","nameLocation":"11458:1:24","nodeType":"VariableDeclaration","scope":4913,"src":"11452:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4869,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:24"},"returnParameters":{"id":4874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4873,"mutability":"mutable","name":"result","nameLocation":"11492:6:24","nodeType":"VariableDeclaration","scope":4913,"src":"11484:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4872,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:24"},"scope":5920,"src":"11414:331:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4951,"nodeType":"Block","src":"11963:113:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4929,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"11987:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4930,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"11990:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4931,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"11993:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4928,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[4913,4952],"referencedDeclaration":4913,"src":"11980:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4936,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4923,"src":"12031:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"}],"id":4935,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"12014:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4311_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4939,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"12051:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4940,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"12054:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4942,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"12062:1:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4938,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:24","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4933,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"11998:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7685_$","typeString":"type(library SafeCast)"}},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"11998:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4927,"id":4950,"nodeType":"Return","src":"11973:96:24"}]},"documentation":{"id":4914,"nodeType":"StructuredDocumentation","src":"11751:109:24","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4952,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:24","nodeType":"FunctionDefinition","parameters":{"id":4924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4916,"mutability":"mutable","name":"x","nameLocation":"11889:1:24","nodeType":"VariableDeclaration","scope":4952,"src":"11881:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4915,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4918,"mutability":"mutable","name":"y","nameLocation":"11900:1:24","nodeType":"VariableDeclaration","scope":4952,"src":"11892:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4917,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4920,"mutability":"mutable","name":"n","nameLocation":"11909:1:24","nodeType":"VariableDeclaration","scope":4952,"src":"11903:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4919,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4923,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:24","nodeType":"VariableDeclaration","scope":4952,"src":"11912:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"},"typeName":{"id":4922,"nodeType":"UserDefinedTypeName","pathNode":{"id":4921,"name":"Rounding","nameLocations":["11912:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":4311,"src":"11912:8:24"},"referencedDeclaration":4311,"src":"11912:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:24"},"returnParameters":{"id":4927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4952,"src":"11954:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4925,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:24"},"scope":5920,"src":"11865:211:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5048,"nodeType":"Block","src":"12710:1849:24","statements":[{"id":5047,"nodeType":"UncheckedBlock","src":"12720:1833:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4962,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"12748:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4967,"nodeType":"IfStatement","src":"12744:20:24","trueBody":{"expression":{"hexValue":"30","id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4961,"id":4966,"nodeType":"Return","src":"12756:8:24"}},{"assignments":[4969],"declarations":[{"constant":false,"id":4969,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:24","nodeType":"VariableDeclaration","scope":5047,"src":"13235:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4968,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4973,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4970,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4955,"src":"13255:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4971,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"13259:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:24"},{"assignments":[4975],"declarations":[{"constant":false,"id":4975,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:24","nodeType":"VariableDeclaration","scope":5047,"src":"13274:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4974,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4977,"initialValue":{"id":4976,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"13288:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:24"},{"assignments":[4979],"declarations":[{"constant":false,"id":4979,"mutability":"mutable","name":"x","nameLocation":"13432:1:24","nodeType":"VariableDeclaration","scope":5047,"src":"13425:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4978,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4981,"initialValue":{"hexValue":"30","id":4980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:24"},{"assignments":[4983],"declarations":[{"constant":false,"id":4983,"mutability":"mutable","name":"y","nameLocation":"13458:1:24","nodeType":"VariableDeclaration","scope":5047,"src":"13451:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4982,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4985,"initialValue":{"hexValue":"31","id":4984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:24"},{"body":{"id":5022,"nodeType":"Block","src":"13501:882:24","statements":[{"assignments":[4990],"declarations":[{"constant":false,"id":4990,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:24","nodeType":"VariableDeclaration","scope":5022,"src":"13519:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4989,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4994,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4991,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"13538:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4992,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"13544:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:24"},{"expression":{"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4995,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"13573:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4996,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"13578:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4997,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4998,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"13678:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4999,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"13923:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5000,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"13929:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5001,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"13941:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5004,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:24","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5006,"nodeType":"ExpressionStatement","src":"13572:395:24"},{"expression":{"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":5007,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"13987:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5008,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4983,"src":"13990:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5009,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":5010,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4983,"src":"14072:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5011,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"14326:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5012,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4983,"src":"14330:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5015,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4990,"src":"14341:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5013,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:24","typeDescriptions":{}}},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5019,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:24","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5021,"nodeType":"ExpressionStatement","src":"13986:382:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4986,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"13485:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5023,"nodeType":"WhileStatement","src":"13478:905:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5024,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4975,"src":"14401:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":5025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5029,"nodeType":"IfStatement","src":"14397:22:24","trueBody":{"expression":{"hexValue":"30","id":5027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4961,"id":5028,"nodeType":"Return","src":"14411:8:24"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5031,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"14470:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5034,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4957,"src":"14477:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":5038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:24","subExpression":{"id":5037,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"14490:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5035,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:24","typeDescriptions":{}}},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":5043,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"14502:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5041,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:24","typeDescriptions":{}}},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5030,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"14462:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4961,"id":5046,"nodeType":"Return","src":"14455:50:24"}]}]},"documentation":{"id":4953,"nodeType":"StructuredDocumentation","src":"12082:553:24","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":5049,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:24","nodeType":"FunctionDefinition","parameters":{"id":4958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4955,"mutability":"mutable","name":"a","nameLocation":"12664:1:24","nodeType":"VariableDeclaration","scope":5049,"src":"12656:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4954,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4957,"mutability":"mutable","name":"n","nameLocation":"12675:1:24","nodeType":"VariableDeclaration","scope":5049,"src":"12667:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4956,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:24"},"returnParameters":{"id":4961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5049,"src":"12701:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4959,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:24"},"scope":5920,"src":"12640:1919:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5069,"nodeType":"Block","src":"15159:82:24","statements":[{"id":5068,"nodeType":"UncheckedBlock","src":"15169:66:24","statements":[{"expression":{"arguments":[{"id":5061,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"15212:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5062,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"15215:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":5063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5065,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5054,"src":"15222:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5059,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"15200:4:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5920_$","typeString":"type(library Math)"}},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:24","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":5106,"src":"15200:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5058,"id":5067,"nodeType":"Return","src":"15193:31:24"}]}]},"documentation":{"id":5050,"nodeType":"StructuredDocumentation","src":"14565:514:24","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":5070,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:24","nodeType":"FunctionDefinition","parameters":{"id":5055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5052,"mutability":"mutable","name":"a","nameLocation":"15113:1:24","nodeType":"VariableDeclaration","scope":5070,"src":"15105:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5051,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5054,"mutability":"mutable","name":"p","nameLocation":"15124:1:24","nodeType":"VariableDeclaration","scope":5070,"src":"15116:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5053,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:24"},"returnParameters":{"id":5058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5070,"src":"15150:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5056,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:24"},"scope":5920,"src":"15084:157:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5105,"nodeType":"Block","src":"16011:174:24","statements":[{"assignments":[5083,5085],"declarations":[{"constant":false,"id":5083,"mutability":"mutable","name":"success","nameLocation":"16027:7:24","nodeType":"VariableDeclaration","scope":5105,"src":"16022:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5082,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5085,"mutability":"mutable","name":"result","nameLocation":"16044:6:24","nodeType":"VariableDeclaration","scope":5105,"src":"16036:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5084,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5091,"initialValue":{"arguments":[{"id":5087,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5073,"src":"16064:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5088,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5075,"src":"16067:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5089,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5077,"src":"16070:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5086,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5130,5212],"referencedDeclaration":5130,"src":"16054:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":5090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:24"},{"condition":{"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:24","subExpression":{"id":5092,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"16087:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5102,"nodeType":"IfStatement","src":"16082:74:24","trueBody":{"id":5101,"nodeType":"Block","src":"16096:60:24","statements":[{"expression":{"arguments":[{"expression":{"id":5097,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"16122:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1682_$","typeString":"type(library Panic)"}},"id":5098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1649,"src":"16122:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5094,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"16110:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1682_$","typeString":"type(library Panic)"}},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1681,"src":"16110:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5100,"nodeType":"ExpressionStatement","src":"16110:35:24"}]}},{"expression":{"id":5103,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"16172:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5081,"id":5104,"nodeType":"Return","src":"16165:13:24"}]},"documentation":{"id":5071,"nodeType":"StructuredDocumentation","src":"15247:678:24","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":5106,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:24","nodeType":"FunctionDefinition","parameters":{"id":5078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5073,"mutability":"mutable","name":"b","nameLocation":"15954:1:24","nodeType":"VariableDeclaration","scope":5106,"src":"15946:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5072,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5075,"mutability":"mutable","name":"e","nameLocation":"15965:1:24","nodeType":"VariableDeclaration","scope":5106,"src":"15957:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5074,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5077,"mutability":"mutable","name":"m","nameLocation":"15976:1:24","nodeType":"VariableDeclaration","scope":5106,"src":"15968:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5076,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:24"},"returnParameters":{"id":5081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5106,"src":"16002:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5079,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:24"},"scope":5920,"src":"15930:255:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5129,"nodeType":"Block","src":"17039:1493:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5120,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"17053:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5127,"nodeType":"IfStatement","src":"17049:29:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5125,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5119,"id":5126,"nodeType":"Return","src":"17061:17:24"}},{"AST":{"nativeSrc":"17113:1413:24","nodeType":"YulBlock","src":"17113:1413:24","statements":[{"nativeSrc":"17127:22:24","nodeType":"YulVariableDeclaration","src":"17127:22:24","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:24","nodeType":"YulLiteral","src":"17144:4:24","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:24","nodeType":"YulIdentifier","src":"17138:5:24"},"nativeSrc":"17138:11:24","nodeType":"YulFunctionCall","src":"17138:11:24"},"variables":[{"name":"ptr","nativeSrc":"17131:3:24","nodeType":"YulTypedName","src":"17131:3:24","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:24","nodeType":"YulIdentifier","src":"18057:3:24"},{"kind":"number","nativeSrc":"18062:4:24","nodeType":"YulLiteral","src":"18062:4:24","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:24","nodeType":"YulIdentifier","src":"18050:6:24"},"nativeSrc":"18050:17:24","nodeType":"YulFunctionCall","src":"18050:17:24"},"nativeSrc":"18050:17:24","nodeType":"YulExpressionStatement","src":"18050:17:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:24","nodeType":"YulIdentifier","src":"18091:3:24"},{"kind":"number","nativeSrc":"18096:4:24","nodeType":"YulLiteral","src":"18096:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:24","nodeType":"YulIdentifier","src":"18087:3:24"},"nativeSrc":"18087:14:24","nodeType":"YulFunctionCall","src":"18087:14:24"},{"kind":"number","nativeSrc":"18103:4:24","nodeType":"YulLiteral","src":"18103:4:24","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:24","nodeType":"YulIdentifier","src":"18080:6:24"},"nativeSrc":"18080:28:24","nodeType":"YulFunctionCall","src":"18080:28:24"},"nativeSrc":"18080:28:24","nodeType":"YulExpressionStatement","src":"18080:28:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:24","nodeType":"YulIdentifier","src":"18132:3:24"},{"kind":"number","nativeSrc":"18137:4:24","nodeType":"YulLiteral","src":"18137:4:24","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:24","nodeType":"YulIdentifier","src":"18128:3:24"},"nativeSrc":"18128:14:24","nodeType":"YulFunctionCall","src":"18128:14:24"},{"kind":"number","nativeSrc":"18144:4:24","nodeType":"YulLiteral","src":"18144:4:24","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:24","nodeType":"YulIdentifier","src":"18121:6:24"},"nativeSrc":"18121:28:24","nodeType":"YulFunctionCall","src":"18121:28:24"},"nativeSrc":"18121:28:24","nodeType":"YulExpressionStatement","src":"18121:28:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:24","nodeType":"YulIdentifier","src":"18173:3:24"},{"kind":"number","nativeSrc":"18178:4:24","nodeType":"YulLiteral","src":"18178:4:24","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:24","nodeType":"YulIdentifier","src":"18169:3:24"},"nativeSrc":"18169:14:24","nodeType":"YulFunctionCall","src":"18169:14:24"},{"name":"b","nativeSrc":"18185:1:24","nodeType":"YulIdentifier","src":"18185:1:24"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:24","nodeType":"YulIdentifier","src":"18162:6:24"},"nativeSrc":"18162:25:24","nodeType":"YulFunctionCall","src":"18162:25:24"},"nativeSrc":"18162:25:24","nodeType":"YulExpressionStatement","src":"18162:25:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:24","nodeType":"YulIdentifier","src":"18211:3:24"},{"kind":"number","nativeSrc":"18216:4:24","nodeType":"YulLiteral","src":"18216:4:24","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:24","nodeType":"YulIdentifier","src":"18207:3:24"},"nativeSrc":"18207:14:24","nodeType":"YulFunctionCall","src":"18207:14:24"},{"name":"e","nativeSrc":"18223:1:24","nodeType":"YulIdentifier","src":"18223:1:24"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:24","nodeType":"YulIdentifier","src":"18200:6:24"},"nativeSrc":"18200:25:24","nodeType":"YulFunctionCall","src":"18200:25:24"},"nativeSrc":"18200:25:24","nodeType":"YulExpressionStatement","src":"18200:25:24"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:24","nodeType":"YulIdentifier","src":"18249:3:24"},{"kind":"number","nativeSrc":"18254:4:24","nodeType":"YulLiteral","src":"18254:4:24","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:24","nodeType":"YulIdentifier","src":"18245:3:24"},"nativeSrc":"18245:14:24","nodeType":"YulFunctionCall","src":"18245:14:24"},{"name":"m","nativeSrc":"18261:1:24","nodeType":"YulIdentifier","src":"18261:1:24"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:24","nodeType":"YulIdentifier","src":"18238:6:24"},"nativeSrc":"18238:25:24","nodeType":"YulFunctionCall","src":"18238:25:24"},"nativeSrc":"18238:25:24","nodeType":"YulExpressionStatement","src":"18238:25:24"},{"nativeSrc":"18425:57:24","nodeType":"YulAssignment","src":"18425:57:24","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:24","nodeType":"YulIdentifier","src":"18447:3:24"},"nativeSrc":"18447:5:24","nodeType":"YulFunctionCall","src":"18447:5:24"},{"kind":"number","nativeSrc":"18454:4:24","nodeType":"YulLiteral","src":"18454:4:24","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:24","nodeType":"YulIdentifier","src":"18460:3:24"},{"kind":"number","nativeSrc":"18465:4:24","nodeType":"YulLiteral","src":"18465:4:24","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:24","nodeType":"YulLiteral","src":"18471:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:24","nodeType":"YulLiteral","src":"18477:4:24","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:24","nodeType":"YulIdentifier","src":"18436:10:24"},"nativeSrc":"18436:46:24","nodeType":"YulFunctionCall","src":"18436:46:24"},"variableNames":[{"name":"success","nativeSrc":"18425:7:24","nodeType":"YulIdentifier","src":"18425:7:24"}]},{"nativeSrc":"18495:21:24","nodeType":"YulAssignment","src":"18495:21:24","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:24","nodeType":"YulLiteral","src":"18511:4:24","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:24","nodeType":"YulIdentifier","src":"18505:5:24"},"nativeSrc":"18505:11:24","nodeType":"YulFunctionCall","src":"18505:11:24"},"variableNames":[{"name":"result","nativeSrc":"18495:6:24","nodeType":"YulIdentifier","src":"18495:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5109,"isOffset":false,"isSlot":false,"src":"18185:1:24","valueSize":1},{"declaration":5111,"isOffset":false,"isSlot":false,"src":"18223:1:24","valueSize":1},{"declaration":5113,"isOffset":false,"isSlot":false,"src":"18261:1:24","valueSize":1},{"declaration":5118,"isOffset":false,"isSlot":false,"src":"18495:6:24","valueSize":1},{"declaration":5116,"isOffset":false,"isSlot":false,"src":"18425:7:24","valueSize":1}],"flags":["memory-safe"],"id":5128,"nodeType":"InlineAssembly","src":"17088:1438:24"}]},"documentation":{"id":5107,"nodeType":"StructuredDocumentation","src":"16191:738:24","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":5130,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:24","nodeType":"FunctionDefinition","parameters":{"id":5114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5109,"mutability":"mutable","name":"b","nameLocation":"16961:1:24","nodeType":"VariableDeclaration","scope":5130,"src":"16953:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5108,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5111,"mutability":"mutable","name":"e","nameLocation":"16972:1:24","nodeType":"VariableDeclaration","scope":5130,"src":"16964:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5110,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5113,"mutability":"mutable","name":"m","nameLocation":"16983:1:24","nodeType":"VariableDeclaration","scope":5130,"src":"16975:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5112,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:24"},"returnParameters":{"id":5119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5116,"mutability":"mutable","name":"success","nameLocation":"17014:7:24","nodeType":"VariableDeclaration","scope":5130,"src":"17009:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5115,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5118,"mutability":"mutable","name":"result","nameLocation":"17031:6:24","nodeType":"VariableDeclaration","scope":5130,"src":"17023:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5117,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:24"},"scope":5920,"src":"16934:1598:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5165,"nodeType":"Block","src":"18729:179:24","statements":[{"assignments":[5143,5145],"declarations":[{"constant":false,"id":5143,"mutability":"mutable","name":"success","nameLocation":"18745:7:24","nodeType":"VariableDeclaration","scope":5165,"src":"18740:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5142,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5145,"mutability":"mutable","name":"result","nameLocation":"18767:6:24","nodeType":"VariableDeclaration","scope":5165,"src":"18754:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5144,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5151,"initialValue":{"arguments":[{"id":5147,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5133,"src":"18787:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5148,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5135,"src":"18790:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5149,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"18793:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5146,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[5130,5212],"referencedDeclaration":5212,"src":"18777:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:24"},{"condition":{"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:24","subExpression":{"id":5152,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5143,"src":"18810:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5162,"nodeType":"IfStatement","src":"18805:74:24","trueBody":{"id":5161,"nodeType":"Block","src":"18819:60:24","statements":[{"expression":{"arguments":[{"expression":{"id":5157,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"18845:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1682_$","typeString":"type(library Panic)"}},"id":5158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:24","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1649,"src":"18845:22:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5154,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"18833:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1682_$","typeString":"type(library Panic)"}},"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:24","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1681,"src":"18833:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5160,"nodeType":"ExpressionStatement","src":"18833:35:24"}]}},{"expression":{"id":5163,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"18895:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":5141,"id":5164,"nodeType":"Return","src":"18888:13:24"}]},"documentation":{"id":5131,"nodeType":"StructuredDocumentation","src":"18538:85:24","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":5166,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:24","nodeType":"FunctionDefinition","parameters":{"id":5138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5133,"mutability":"mutable","name":"b","nameLocation":"18657:1:24","nodeType":"VariableDeclaration","scope":5166,"src":"18644:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5132,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5135,"mutability":"mutable","name":"e","nameLocation":"18673:1:24","nodeType":"VariableDeclaration","scope":5166,"src":"18660:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5134,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5137,"mutability":"mutable","name":"m","nameLocation":"18689:1:24","nodeType":"VariableDeclaration","scope":5166,"src":"18676:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5136,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:24"},"returnParameters":{"id":5141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5166,"src":"18715:12:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5139,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:24"},"scope":5920,"src":"18628:280:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5211,"nodeType":"Block","src":"19162:771:24","statements":[{"condition":{"arguments":[{"id":5181,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"19187:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5180,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"19176:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5190,"nodeType":"IfStatement","src":"19172:47:24","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:24","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5184,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":5188,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:24","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":5179,"id":5189,"nodeType":"Return","src":"19191:28:24"}},{"assignments":[5192],"declarations":[{"constant":false,"id":5192,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:24","nodeType":"VariableDeclaration","scope":5211,"src":"19230:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5191,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5195,"initialValue":{"expression":{"id":5193,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"19245:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:24","memberName":"length","nodeType":"MemberAccess","src":"19245:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:24"},{"expression":{"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5196,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"19335:6:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":5199,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"19361:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:24","memberName":"length","nodeType":"MemberAccess","src":"19361:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5201,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"19371:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:24","memberName":"length","nodeType":"MemberAccess","src":"19371:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5203,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"19381:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5204,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"19387:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5205,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5171,"src":"19390:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5206,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"19393:1:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5197,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:24","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:24","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:24","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5209,"nodeType":"ExpressionStatement","src":"19335:60:24"},{"AST":{"nativeSrc":"19431:496:24","nodeType":"YulBlock","src":"19431:496:24","statements":[{"nativeSrc":"19445:32:24","nodeType":"YulVariableDeclaration","src":"19445:32:24","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:24","nodeType":"YulIdentifier","src":"19464:6:24"},{"kind":"number","nativeSrc":"19472:4:24","nodeType":"YulLiteral","src":"19472:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:24","nodeType":"YulIdentifier","src":"19460:3:24"},"nativeSrc":"19460:17:24","nodeType":"YulFunctionCall","src":"19460:17:24"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:24","nodeType":"YulTypedName","src":"19449:7:24","type":""}]},{"nativeSrc":"19567:73:24","nodeType":"YulAssignment","src":"19567:73:24","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:24","nodeType":"YulIdentifier","src":"19589:3:24"},"nativeSrc":"19589:5:24","nodeType":"YulFunctionCall","src":"19589:5:24"},{"kind":"number","nativeSrc":"19596:4:24","nodeType":"YulLiteral","src":"19596:4:24","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:24","nodeType":"YulIdentifier","src":"19602:7:24"},{"arguments":[{"name":"result","nativeSrc":"19617:6:24","nodeType":"YulIdentifier","src":"19617:6:24"}],"functionName":{"name":"mload","nativeSrc":"19611:5:24","nodeType":"YulIdentifier","src":"19611:5:24"},"nativeSrc":"19611:13:24","nodeType":"YulFunctionCall","src":"19611:13:24"},{"name":"dataPtr","nativeSrc":"19626:7:24","nodeType":"YulIdentifier","src":"19626:7:24"},{"name":"mLen","nativeSrc":"19635:4:24","nodeType":"YulIdentifier","src":"19635:4:24"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:24","nodeType":"YulIdentifier","src":"19578:10:24"},"nativeSrc":"19578:62:24","nodeType":"YulFunctionCall","src":"19578:62:24"},"variableNames":[{"name":"success","nativeSrc":"19567:7:24","nodeType":"YulIdentifier","src":"19567:7:24"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:24","nodeType":"YulIdentifier","src":"19796:6:24"},{"name":"mLen","nativeSrc":"19804:4:24","nodeType":"YulIdentifier","src":"19804:4:24"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:24","nodeType":"YulIdentifier","src":"19789:6:24"},"nativeSrc":"19789:20:24","nodeType":"YulFunctionCall","src":"19789:20:24"},"nativeSrc":"19789:20:24","nodeType":"YulExpressionStatement","src":"19789:20:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:24","nodeType":"YulLiteral","src":"19892:4:24","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:24","nodeType":"YulIdentifier","src":"19902:7:24"},{"name":"mLen","nativeSrc":"19911:4:24","nodeType":"YulIdentifier","src":"19911:4:24"}],"functionName":{"name":"add","nativeSrc":"19898:3:24","nodeType":"YulIdentifier","src":"19898:3:24"},"nativeSrc":"19898:18:24","nodeType":"YulFunctionCall","src":"19898:18:24"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:24","nodeType":"YulIdentifier","src":"19885:6:24"},"nativeSrc":"19885:32:24","nodeType":"YulFunctionCall","src":"19885:32:24"},"nativeSrc":"19885:32:24","nodeType":"YulExpressionStatement","src":"19885:32:24"}]},"evmVersion":"paris","externalReferences":[{"declaration":5192,"isOffset":false,"isSlot":false,"src":"19635:4:24","valueSize":1},{"declaration":5192,"isOffset":false,"isSlot":false,"src":"19804:4:24","valueSize":1},{"declaration":5192,"isOffset":false,"isSlot":false,"src":"19911:4:24","valueSize":1},{"declaration":5178,"isOffset":false,"isSlot":false,"src":"19464:6:24","valueSize":1},{"declaration":5178,"isOffset":false,"isSlot":false,"src":"19617:6:24","valueSize":1},{"declaration":5178,"isOffset":false,"isSlot":false,"src":"19796:6:24","valueSize":1},{"declaration":5176,"isOffset":false,"isSlot":false,"src":"19567:7:24","valueSize":1}],"flags":["memory-safe"],"id":5210,"nodeType":"InlineAssembly","src":"19406:521:24"}]},"documentation":{"id":5167,"nodeType":"StructuredDocumentation","src":"18914:88:24","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":5212,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:24","nodeType":"FunctionDefinition","parameters":{"id":5174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5169,"mutability":"mutable","name":"b","nameLocation":"19048:1:24","nodeType":"VariableDeclaration","scope":5212,"src":"19035:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5168,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5171,"mutability":"mutable","name":"e","nameLocation":"19072:1:24","nodeType":"VariableDeclaration","scope":5212,"src":"19059:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5170,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5173,"mutability":"mutable","name":"m","nameLocation":"19096:1:24","nodeType":"VariableDeclaration","scope":5212,"src":"19083:14:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5172,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:24"},"returnParameters":{"id":5179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5176,"mutability":"mutable","name":"success","nameLocation":"19132:7:24","nodeType":"VariableDeclaration","scope":5212,"src":"19127:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5175,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5178,"mutability":"mutable","name":"result","nameLocation":"19154:6:24","nodeType":"VariableDeclaration","scope":5212,"src":"19141:19:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5177,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:24"},"scope":5920,"src":"19007:926:24","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5244,"nodeType":"Block","src":"20088:176:24","statements":[{"body":{"id":5240,"nodeType":"Block","src":"20145:92:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5231,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"20163:9:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5233,"indexExpression":{"id":5232,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"20173:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:24","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5239,"nodeType":"IfStatement","src":"20159:68:24","trueBody":{"id":5238,"nodeType":"Block","src":"20182:45:24","statements":[{"expression":{"hexValue":"66616c7365","id":5236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5219,"id":5237,"nodeType":"Return","src":"20200:12:24"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5224,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"20118:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5225,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5215,"src":"20122:9:24","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:24","memberName":"length","nodeType":"MemberAccess","src":"20122:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5241,"initializationExpression":{"assignments":[5221],"declarations":[{"constant":false,"id":5221,"mutability":"mutable","name":"i","nameLocation":"20111:1:24","nodeType":"VariableDeclaration","scope":5241,"src":"20103:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5220,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5223,"initialValue":{"hexValue":"30","id":5222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:24"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:24","subExpression":{"id":5228,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"20142:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5230,"nodeType":"ExpressionStatement","src":"20140:3:24"},"nodeType":"ForStatement","src":"20098:139:24"},{"expression":{"hexValue":"74727565","id":5242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5219,"id":5243,"nodeType":"Return","src":"20246:11:24"}]},"documentation":{"id":5213,"nodeType":"StructuredDocumentation","src":"19939:72:24","text":" @dev Returns whether the provided byte array is zero."},"id":5245,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:24","nodeType":"FunctionDefinition","parameters":{"id":5216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5215,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:24","nodeType":"VariableDeclaration","scope":5245,"src":"20036:22:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5214,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:24"},"returnParameters":{"id":5219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5245,"src":"20082:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5217,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:24"},"scope":5920,"src":"20016:248:24","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5463,"nodeType":"Block","src":"20624:5124:24","statements":[{"id":5462,"nodeType":"UncheckedBlock","src":"20634:5108:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5253,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"20728:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":5254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5259,"nodeType":"IfStatement","src":"20724:53:24","trueBody":{"id":5258,"nodeType":"Block","src":"20736:41:24","statements":[{"expression":{"id":5256,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"20761:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5252,"id":5257,"nodeType":"Return","src":"20754:8:24"}]}},{"assignments":[5261],"declarations":[{"constant":false,"id":5261,"mutability":"mutable","name":"aa","nameLocation":"21712:2:24","nodeType":"VariableDeclaration","scope":5462,"src":"21704:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5260,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5263,"initialValue":{"id":5262,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"21717:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:24"},{"assignments":[5265],"declarations":[{"constant":false,"id":5265,"mutability":"mutable","name":"xn","nameLocation":"21740:2:24","nodeType":"VariableDeclaration","scope":5462,"src":"21732:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5264,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5267,"initialValue":{"hexValue":"31","id":5266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5268,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"21765:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5272,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5283,"nodeType":"IfStatement","src":"21761:92:24","trueBody":{"id":5282,"nodeType":"Block","src":"21783:70:24","statements":[{"expression":{"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5274,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"21801:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":5275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:24","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5277,"nodeType":"ExpressionStatement","src":"21801:10:24"},{"expression":{"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5278,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"21829:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":5279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5281,"nodeType":"ExpressionStatement","src":"21829:9:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5284,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"21870:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5288,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5299,"nodeType":"IfStatement","src":"21866:90:24","trueBody":{"id":5298,"nodeType":"Block","src":"21887:69:24","statements":[{"expression":{"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5290,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"21905:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":5291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5293,"nodeType":"ExpressionStatement","src":"21905:9:24"},{"expression":{"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5294,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"21932:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":5295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5297,"nodeType":"ExpressionStatement","src":"21932:9:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5300,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"21973:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5304,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5315,"nodeType":"IfStatement","src":"21969:90:24","trueBody":{"id":5314,"nodeType":"Block","src":"21990:69:24","statements":[{"expression":{"id":5308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5306,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"22008:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":5307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5309,"nodeType":"ExpressionStatement","src":"22008:9:24"},{"expression":{"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5310,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"22035:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":5311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5313,"nodeType":"ExpressionStatement","src":"22035:9:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5316,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"22076:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:24","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5331,"nodeType":"IfStatement","src":"22072:89:24","trueBody":{"id":5330,"nodeType":"Block","src":"22093:68:24","statements":[{"expression":{"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5322,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"22111:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":5323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5325,"nodeType":"ExpressionStatement","src":"22111:9:24"},{"expression":{"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5326,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"22138:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":5327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5329,"nodeType":"ExpressionStatement","src":"22138:8:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5332,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"22178:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5336,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:24","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5347,"nodeType":"IfStatement","src":"22174:87:24","trueBody":{"id":5346,"nodeType":"Block","src":"22194:67:24","statements":[{"expression":{"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5338,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"22212:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5341,"nodeType":"ExpressionStatement","src":"22212:8:24"},{"expression":{"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5342,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"22238:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5345,"nodeType":"ExpressionStatement","src":"22238:8:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5348,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"22278:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5352,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5363,"nodeType":"IfStatement","src":"22274:87:24","trueBody":{"id":5362,"nodeType":"Block","src":"22294:67:24","statements":[{"expression":{"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5354,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"22312:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5357,"nodeType":"ExpressionStatement","src":"22312:8:24"},{"expression":{"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5358,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"22338:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5361,"nodeType":"ExpressionStatement","src":"22338:8:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5364,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5261,"src":"22378:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5367,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5368,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5375,"nodeType":"IfStatement","src":"22374:61:24","trueBody":{"id":5374,"nodeType":"Block","src":"22394:41:24","statements":[{"expression":{"id":5372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5370,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"22412:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5373,"nodeType":"ExpressionStatement","src":"22412:8:24"}]}},{"expression":{"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5376,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"22855:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5378,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"22865:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5380,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5384,"nodeType":"ExpressionStatement","src":"22855:18:24"},{"expression":{"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5385,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"24760:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5386,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"24766:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5387,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"24771:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5388,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"24775:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5391,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5395,"nodeType":"ExpressionStatement","src":"24760:23:24"},{"expression":{"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5396,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"24869:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5397,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"24875:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5398,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"24880:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5399,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"24884:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5402,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5406,"nodeType":"ExpressionStatement","src":"24869:23:24"},{"expression":{"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5407,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"24980:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5408,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"24986:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5409,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"24991:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5410,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"24995:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5413,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5417,"nodeType":"ExpressionStatement","src":"24980:23:24"},{"expression":{"id":5427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5418,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"25089:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5419,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"25095:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5420,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"25100:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5421,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"25104:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5424,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5428,"nodeType":"ExpressionStatement","src":"25089:23:24"},{"expression":{"id":5438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5429,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"25199:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5430,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"25205:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5431,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"25210:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5432,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"25214:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5435,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5439,"nodeType":"ExpressionStatement","src":"25199:23:24"},{"expression":{"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5440,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"25309:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5441,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"25315:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5442,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"25320:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5443,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"25324:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5446,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5450,"nodeType":"ExpressionStatement","src":"25309:23:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5451,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"25698:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5454,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"25719:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5455,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"25724:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5456,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5265,"src":"25728:2:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5452,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"25703:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7685_$","typeString":"type(library SafeCast)"}},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"25703:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5252,"id":5461,"nodeType":"Return","src":"25691:40:24"}]}]},"documentation":{"id":5246,"nodeType":"StructuredDocumentation","src":"20270:292:24","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5464,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:24","nodeType":"FunctionDefinition","parameters":{"id":5249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5248,"mutability":"mutable","name":"a","nameLocation":"20589:1:24","nodeType":"VariableDeclaration","scope":5464,"src":"20581:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5247,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:24"},"returnParameters":{"id":5252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5464,"src":"20615:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5250,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:24"},"scope":5920,"src":"20567:5181:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5497,"nodeType":"Block","src":"25921:171:24","statements":[{"id":5496,"nodeType":"UncheckedBlock","src":"25931:155:24","statements":[{"assignments":[5476],"declarations":[{"constant":false,"id":5476,"mutability":"mutable","name":"result","nameLocation":"25963:6:24","nodeType":"VariableDeclaration","scope":5496,"src":"25955:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5475,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5480,"initialValue":{"arguments":[{"id":5478,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"25977:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5477,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5464,5498],"referencedDeclaration":5464,"src":"25972:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5481,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"26000:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5485,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"26042:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"}],"id":5484,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"26025:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4311_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5487,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"26055:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5488,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5476,"src":"26064:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5490,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"26073:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5482,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"26009:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7685_$","typeString":"type(library SafeCast)"}},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"26009:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5474,"id":5495,"nodeType":"Return","src":"25993:82:24"}]}]},"documentation":{"id":5465,"nodeType":"StructuredDocumentation","src":"25754:86:24","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5498,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:24","nodeType":"FunctionDefinition","parameters":{"id":5471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5467,"mutability":"mutable","name":"a","nameLocation":"25867:1:24","nodeType":"VariableDeclaration","scope":5498,"src":"25859:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5466,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5470,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:24","nodeType":"VariableDeclaration","scope":5498,"src":"25870:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"},"typeName":{"id":5469,"nodeType":"UserDefinedTypeName","pathNode":{"id":5468,"name":"Rounding","nameLocations":["25870:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":4311,"src":"25870:8:24"},"referencedDeclaration":4311,"src":"25870:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:24"},"returnParameters":{"id":5474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5498,"src":"25912:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5472,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:24"},"scope":5920,"src":"25845:247:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5588,"nodeType":"Block","src":"26281:2334:24","statements":[{"expression":{"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5506,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"26363:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5509,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"26383:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5507,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"26367:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7685_$","typeString":"type(library SafeCast)"}},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"26367:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:24","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5516,"nodeType":"ExpressionStatement","src":"26363:64:24"},{"expression":{"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5517,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"26503:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5520,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"26525:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5521,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"26530:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5523,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5518,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"26508:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7685_$","typeString":"type(library SafeCast)"}},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"26508:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:24","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5530,"nodeType":"ExpressionStatement","src":"26503:56:24"},{"expression":{"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5531,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"26634:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5534,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"26656:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5535,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"26661:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5537,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5532,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"26639:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7685_$","typeString":"type(library SafeCast)"}},"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"26639:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:24","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5544,"nodeType":"ExpressionStatement","src":"26634:48:24"},{"expression":{"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5545,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"26757:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5548,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"26779:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5549,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"26784:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:24","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5546,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"26762:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7685_$","typeString":"type(library SafeCast)"}},"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"26762:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5558,"nodeType":"ExpressionStatement","src":"26757:44:24"},{"expression":{"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5559,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"26874:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5562,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"26896:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5563,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"26901:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5565,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5560,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"26879:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7685_$","typeString":"type(library SafeCast)"}},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"26879:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5572,"nodeType":"ExpressionStatement","src":"26874:42:24"},{"expression":{"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5573,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"26988:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5576,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5501,"src":"27010:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5577,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5504,"src":"27015:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5579,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":5580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:24","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5574,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"26993:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7685_$","typeString":"type(library SafeCast)"}},"id":5575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"26993:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5586,"nodeType":"ExpressionStatement","src":"26988:41:24"},{"AST":{"nativeSrc":"28490:119:24","nodeType":"YulBlock","src":"28490:119:24","statements":[{"nativeSrc":"28504:95:24","nodeType":"YulAssignment","src":"28504:95:24","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:24","nodeType":"YulIdentifier","src":"28512:1:24"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:24","nodeType":"YulIdentifier","src":"28524:1:24"},{"name":"x","nativeSrc":"28527:1:24","nodeType":"YulIdentifier","src":"28527:1:24"}],"functionName":{"name":"shr","nativeSrc":"28520:3:24","nodeType":"YulIdentifier","src":"28520:3:24"},"nativeSrc":"28520:9:24","nodeType":"YulFunctionCall","src":"28520:9:24"},{"kind":"number","nativeSrc":"28531:66:24","nodeType":"YulLiteral","src":"28531:66:24","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:24","nodeType":"YulIdentifier","src":"28515:4:24"},"nativeSrc":"28515:83:24","nodeType":"YulFunctionCall","src":"28515:83:24"}],"functionName":{"name":"or","nativeSrc":"28509:2:24","nodeType":"YulIdentifier","src":"28509:2:24"},"nativeSrc":"28509:90:24","nodeType":"YulFunctionCall","src":"28509:90:24"},"variableNames":[{"name":"r","nativeSrc":"28504:1:24","nodeType":"YulIdentifier","src":"28504:1:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5504,"isOffset":false,"isSlot":false,"src":"28504:1:24","valueSize":1},{"declaration":5504,"isOffset":false,"isSlot":false,"src":"28512:1:24","valueSize":1},{"declaration":5504,"isOffset":false,"isSlot":false,"src":"28524:1:24","valueSize":1},{"declaration":5501,"isOffset":false,"isSlot":false,"src":"28527:1:24","valueSize":1}],"flags":["memory-safe"],"id":5587,"nodeType":"InlineAssembly","src":"28465:144:24"}]},"documentation":{"id":5499,"nodeType":"StructuredDocumentation","src":"26098:119:24","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5589,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:24","nodeType":"FunctionDefinition","parameters":{"id":5502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5501,"mutability":"mutable","name":"x","nameLocation":"26244:1:24","nodeType":"VariableDeclaration","scope":5589,"src":"26236:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5500,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:24"},"returnParameters":{"id":5505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5504,"mutability":"mutable","name":"r","nameLocation":"26278:1:24","nodeType":"VariableDeclaration","scope":5589,"src":"26270:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5503,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:24"},"scope":5920,"src":"26222:2393:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5622,"nodeType":"Block","src":"28848:175:24","statements":[{"id":5621,"nodeType":"UncheckedBlock","src":"28858:159:24","statements":[{"assignments":[5601],"declarations":[{"constant":false,"id":5601,"mutability":"mutable","name":"result","nameLocation":"28890:6:24","nodeType":"VariableDeclaration","scope":5621,"src":"28882:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5600,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5605,"initialValue":{"arguments":[{"id":5603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"28904:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5602,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5589,5623],"referencedDeclaration":5589,"src":"28899:4:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5606,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"28931:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5610,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5595,"src":"28973:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"}],"id":5609,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"28956:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4311_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5613,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5601,"src":"28991:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"29000:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5607,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"28940:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7685_$","typeString":"type(library SafeCast)"}},"id":5608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"28940:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5599,"id":5620,"nodeType":"Return","src":"28924:82:24"}]}]},"documentation":{"id":5590,"nodeType":"StructuredDocumentation","src":"28621:142:24","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5623,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:24","nodeType":"FunctionDefinition","parameters":{"id":5596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5592,"mutability":"mutable","name":"value","nameLocation":"28790:5:24","nodeType":"VariableDeclaration","scope":5623,"src":"28782:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5591,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5595,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:24","nodeType":"VariableDeclaration","scope":5623,"src":"28797:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"},"typeName":{"id":5594,"nodeType":"UserDefinedTypeName","pathNode":{"id":5593,"name":"Rounding","nameLocations":["28797:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":4311,"src":"28797:8:24"},"referencedDeclaration":4311,"src":"28797:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:24"},"returnParameters":{"id":5599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5623,"src":"28839:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5597,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:24"},"scope":5920,"src":"28768:255:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5751,"nodeType":"Block","src":"29216:854:24","statements":[{"assignments":[5632],"declarations":[{"constant":false,"id":5632,"mutability":"mutable","name":"result","nameLocation":"29234:6:24","nodeType":"VariableDeclaration","scope":5751,"src":"29226:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5631,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5634,"initialValue":{"hexValue":"30","id":5633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:24"},{"id":5748,"nodeType":"UncheckedBlock","src":"29254:787:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"29282:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5651,"nodeType":"IfStatement","src":"29278:103:24","trueBody":{"id":5650,"nodeType":"Block","src":"29301:80:24","statements":[{"expression":{"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"29319:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5645,"nodeType":"ExpressionStatement","src":"29319:17:24"},{"expression":{"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5646,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"29354:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:24","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5649,"nodeType":"ExpressionStatement","src":"29354:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"29398:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5668,"nodeType":"IfStatement","src":"29394:103:24","trueBody":{"id":5667,"nodeType":"Block","src":"29417:80:24","statements":[{"expression":{"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"29435:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5662,"nodeType":"ExpressionStatement","src":"29435:17:24"},{"expression":{"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5663,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"29470:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:24","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5666,"nodeType":"ExpressionStatement","src":"29470:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"29514:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5685,"nodeType":"IfStatement","src":"29510:103:24","trueBody":{"id":5684,"nodeType":"Block","src":"29533:80:24","statements":[{"expression":{"id":5678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"29551:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:24","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5679,"nodeType":"ExpressionStatement","src":"29551:17:24"},{"expression":{"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5680,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"29586:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:24","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5683,"nodeType":"ExpressionStatement","src":"29586:12:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"29630:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5702,"nodeType":"IfStatement","src":"29626:100:24","trueBody":{"id":5701,"nodeType":"Block","src":"29648:78:24","statements":[{"expression":{"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"29666:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5696,"nodeType":"ExpressionStatement","src":"29666:16:24"},{"expression":{"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5697,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"29700:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:24","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5700,"nodeType":"ExpressionStatement","src":"29700:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"29743:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5719,"nodeType":"IfStatement","src":"29739:100:24","trueBody":{"id":5718,"nodeType":"Block","src":"29761:78:24","statements":[{"expression":{"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"29779:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5713,"nodeType":"ExpressionStatement","src":"29779:16:24"},{"expression":{"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5714,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"29813:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5717,"nodeType":"ExpressionStatement","src":"29813:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"29856:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5736,"nodeType":"IfStatement","src":"29852:100:24","trueBody":{"id":5735,"nodeType":"Block","src":"29874:78:24","statements":[{"expression":{"id":5729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"29892:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5730,"nodeType":"ExpressionStatement","src":"29892:16:24"},{"expression":{"id":5733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5731,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"29926:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5734,"nodeType":"ExpressionStatement","src":"29926:11:24"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"29969:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5747,"nodeType":"IfStatement","src":"29965:66:24","trueBody":{"id":5746,"nodeType":"Block","src":"29987:44:24","statements":[{"expression":{"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5742,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"30005:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5745,"nodeType":"ExpressionStatement","src":"30005:11:24"}]}}]},{"expression":{"id":5749,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"30057:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5630,"id":5750,"nodeType":"Return","src":"30050:13:24"}]},"documentation":{"id":5624,"nodeType":"StructuredDocumentation","src":"29029:120:24","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5752,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:24","nodeType":"FunctionDefinition","parameters":{"id":5627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5626,"mutability":"mutable","name":"value","nameLocation":"29177:5:24","nodeType":"VariableDeclaration","scope":5752,"src":"29169:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5625,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:24"},"returnParameters":{"id":5630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5752,"src":"29207:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5628,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:24"},"scope":5920,"src":"29154:916:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5785,"nodeType":"Block","src":"30305:177:24","statements":[{"id":5784,"nodeType":"UncheckedBlock","src":"30315:161:24","statements":[{"assignments":[5764],"declarations":[{"constant":false,"id":5764,"mutability":"mutable","name":"result","nameLocation":"30347:6:24","nodeType":"VariableDeclaration","scope":5784,"src":"30339:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5763,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5768,"initialValue":{"arguments":[{"id":5766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5755,"src":"30362:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5765,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5752,5786],"referencedDeclaration":5752,"src":"30356:5:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5769,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"30389:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5773,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5758,"src":"30431:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"}],"id":5772,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"30414:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4311_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5776,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"30450:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5755,"src":"30459:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5770,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"30398:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7685_$","typeString":"type(library SafeCast)"}},"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"30398:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5762,"id":5783,"nodeType":"Return","src":"30382:83:24"}]}]},"documentation":{"id":5753,"nodeType":"StructuredDocumentation","src":"30076:143:24","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5786,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:24","nodeType":"FunctionDefinition","parameters":{"id":5759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5755,"mutability":"mutable","name":"value","nameLocation":"30247:5:24","nodeType":"VariableDeclaration","scope":5786,"src":"30239:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5754,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5758,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:24","nodeType":"VariableDeclaration","scope":5786,"src":"30254:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"},"typeName":{"id":5757,"nodeType":"UserDefinedTypeName","pathNode":{"id":5756,"name":"Rounding","nameLocations":["30254:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":4311,"src":"30254:8:24"},"referencedDeclaration":4311,"src":"30254:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:24"},"returnParameters":{"id":5762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5786,"src":"30296:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5760,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:24"},"scope":5920,"src":"30224:258:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5862,"nodeType":"Block","src":"30800:675:24","statements":[{"expression":{"id":5803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5794,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"30882:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5797,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5789,"src":"30902:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:24","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5795,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"30886:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7685_$","typeString":"type(library SafeCast)"}},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"30886:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:24","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5804,"nodeType":"ExpressionStatement","src":"30882:64:24"},{"expression":{"id":5817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5805,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"31022:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5808,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5789,"src":"31044:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5809,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"31049:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5811,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:24","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5806,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"31027:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7685_$","typeString":"type(library SafeCast)"}},"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"31027:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:24","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5818,"nodeType":"ExpressionStatement","src":"31022:56:24"},{"expression":{"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5819,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"31153:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5822,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5789,"src":"31175:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5823,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"31180:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5825,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:24","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5820,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"31158:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7685_$","typeString":"type(library SafeCast)"}},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"31158:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:24","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5832,"nodeType":"ExpressionStatement","src":"31153:48:24"},{"expression":{"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5833,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"31276:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5836,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5789,"src":"31298:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5837,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"31303:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5839,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:24","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5834,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"31281:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7685_$","typeString":"type(library SafeCast)"}},"id":5835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"31281:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:24","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5846,"nodeType":"ExpressionStatement","src":"31276:44:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5847,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"31426:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":5848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5853,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5789,"src":"31453:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5854,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5792,"src":"31458:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5856,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5851,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"31436:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7685_$","typeString":"type(library SafeCast)"}},"id":5852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"31436:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5793,"id":5861,"nodeType":"Return","src":"31418:50:24"}]},"documentation":{"id":5787,"nodeType":"StructuredDocumentation","src":"30488:246:24","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5863,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:24","nodeType":"FunctionDefinition","parameters":{"id":5790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5789,"mutability":"mutable","name":"x","nameLocation":"30763:1:24","nodeType":"VariableDeclaration","scope":5863,"src":"30755:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5788,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:24"},"returnParameters":{"id":5793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5792,"mutability":"mutable","name":"r","nameLocation":"30797:1:24","nodeType":"VariableDeclaration","scope":5863,"src":"30789:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5791,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:24"},"scope":5920,"src":"30739:736:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5899,"nodeType":"Block","src":"31712:184:24","statements":[{"id":5898,"nodeType":"UncheckedBlock","src":"31722:168:24","statements":[{"assignments":[5875],"declarations":[{"constant":false,"id":5875,"mutability":"mutable","name":"result","nameLocation":"31754:6:24","nodeType":"VariableDeclaration","scope":5898,"src":"31746:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5874,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5879,"initialValue":{"arguments":[{"id":5877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"31770:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5876,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5863,5900],"referencedDeclaration":5863,"src":"31763:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5880,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5875,"src":"31797:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5884,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"31839:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"}],"id":5883,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"31822:16:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$4311_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5887,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5875,"src":"31858:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5866,"src":"31873:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5881,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"31806:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7685_$","typeString":"type(library SafeCast)"}},"id":5882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"31806:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5873,"id":5897,"nodeType":"Return","src":"31790:89:24"}]}]},"documentation":{"id":5864,"nodeType":"StructuredDocumentation","src":"31481:144:24","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5900,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:24","nodeType":"FunctionDefinition","parameters":{"id":5870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5866,"mutability":"mutable","name":"value","nameLocation":"31654:5:24","nodeType":"VariableDeclaration","scope":5900,"src":"31646:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5865,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5869,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:24","nodeType":"VariableDeclaration","scope":5900,"src":"31661:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"},"typeName":{"id":5868,"nodeType":"UserDefinedTypeName","pathNode":{"id":5867,"name":"Rounding","nameLocations":["31661:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":4311,"src":"31661:8:24"},"referencedDeclaration":4311,"src":"31661:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:24"},"returnParameters":{"id":5873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5900,"src":"31703:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5871,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:24"},"scope":5920,"src":"31630:266:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5918,"nodeType":"Block","src":"32094:48:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5911,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5904,"src":"32117:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"}],"id":5910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5909,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:24","typeDescriptions":{}}},"id":5912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:24","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:24","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5908,"id":5917,"nodeType":"Return","src":"32104:31:24"}]},"documentation":{"id":5901,"nodeType":"StructuredDocumentation","src":"31902:113:24","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5919,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:24","nodeType":"FunctionDefinition","parameters":{"id":5905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5904,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:24","nodeType":"VariableDeclaration","scope":5919,"src":"32046:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"},"typeName":{"id":5903,"nodeType":"UserDefinedTypeName","pathNode":{"id":5902,"name":"Rounding","nameLocations":["32046:8:24"],"nodeType":"IdentifierPath","referencedDeclaration":4311,"src":"32046:8:24"},"referencedDeclaration":4311,"src":"32046:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4311","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:24"},"returnParameters":{"id":5908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5919,"src":"32088:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5906,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:24"},"scope":5920,"src":"32020:122:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5921,"src":"281:31863:24","usedErrors":[],"usedEvents":[]}],"src":"103:32042:24"},"id":24},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7685]},"id":7686,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5922,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5923,"nodeType":"StructuredDocumentation","src":"218:550:25","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7685,"linearizedBaseContracts":[7685],"name":"SafeCast","nameLocation":"777:8:25","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5924,"nodeType":"StructuredDocumentation","src":"792:68:25","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5930,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:25","nodeType":"ErrorDefinition","parameters":{"id":5929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5926,"mutability":"mutable","name":"bits","nameLocation":"908:4:25","nodeType":"VariableDeclaration","scope":5930,"src":"902:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5925,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5928,"mutability":"mutable","name":"value","nameLocation":"922:5:25","nodeType":"VariableDeclaration","scope":5930,"src":"914:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5927,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:25"},"src":"865:64:25"},{"documentation":{"id":5931,"nodeType":"StructuredDocumentation","src":"935:75:25","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5935,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:25","nodeType":"ErrorDefinition","parameters":{"id":5934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5933,"mutability":"mutable","name":"value","nameLocation":"1056:5:25","nodeType":"VariableDeclaration","scope":5935,"src":"1049:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5932,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:25"},"src":"1015:48:25"},{"documentation":{"id":5936,"nodeType":"StructuredDocumentation","src":"1069:67:25","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5942,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:25","nodeType":"ErrorDefinition","parameters":{"id":5941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5938,"mutability":"mutable","name":"bits","nameLocation":"1183:4:25","nodeType":"VariableDeclaration","scope":5942,"src":"1177:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5937,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5940,"mutability":"mutable","name":"value","nameLocation":"1196:5:25","nodeType":"VariableDeclaration","scope":5942,"src":"1189:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5939,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:25"},"src":"1141:62:25"},{"documentation":{"id":5943,"nodeType":"StructuredDocumentation","src":"1209:75:25","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5947,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:25","nodeType":"ErrorDefinition","parameters":{"id":5946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5945,"mutability":"mutable","name":"value","nameLocation":"1331:5:25","nodeType":"VariableDeclaration","scope":5947,"src":"1323:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5944,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:25"},"src":"1289:49:25"},{"body":{"id":5974,"nodeType":"Block","src":"1695:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"1709:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5957,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5956,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:25","memberName":"max","nodeType":"MemberAccess","src":"1717:17:25","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5968,"nodeType":"IfStatement","src":"1705:105:25","trueBody":{"id":5967,"nodeType":"Block","src":"1736:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:25","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5964,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"1793:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5962,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"1757:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5966,"nodeType":"RevertStatement","src":"1750:49:25"}]}},{"expression":{"arguments":[{"id":5971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5950,"src":"1834:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5969,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:25","typeDescriptions":{}}},"id":5972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5954,"id":5973,"nodeType":"Return","src":"1819:21:25"}]},"documentation":{"id":5948,"nodeType":"StructuredDocumentation","src":"1344:280:25","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5975,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:25","nodeType":"FunctionDefinition","parameters":{"id":5951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5950,"mutability":"mutable","name":"value","nameLocation":"1656:5:25","nodeType":"VariableDeclaration","scope":5975,"src":"1648:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5949,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:25"},"returnParameters":{"id":5954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5975,"src":"1686:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5952,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:25","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:25"},"scope":7685,"src":"1629:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6002,"nodeType":"Block","src":"2204:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"2218:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5985,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5984,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:25","memberName":"max","nodeType":"MemberAccess","src":"2226:17:25","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5996,"nodeType":"IfStatement","src":"2214:105:25","trueBody":{"id":5995,"nodeType":"Block","src":"2245:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:25","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"2302:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5990,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"2266:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5994,"nodeType":"RevertStatement","src":"2259:49:25"}]}},{"expression":{"arguments":[{"id":5999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5978,"src":"2343:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5997,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:25","typeDescriptions":{}}},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5982,"id":6001,"nodeType":"Return","src":"2328:21:25"}]},"documentation":{"id":5976,"nodeType":"StructuredDocumentation","src":"1853:280:25","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6003,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:25","nodeType":"FunctionDefinition","parameters":{"id":5979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5978,"mutability":"mutable","name":"value","nameLocation":"2165:5:25","nodeType":"VariableDeclaration","scope":6003,"src":"2157:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5977,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:25"},"returnParameters":{"id":5982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6003,"src":"2195:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5980,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:25","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:25"},"scope":7685,"src":"2138:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6030,"nodeType":"Block","src":"2713:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"2727:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6013,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":6012,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":6016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:25","memberName":"max","nodeType":"MemberAccess","src":"2735:17:25","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6024,"nodeType":"IfStatement","src":"2723:105:25","trueBody":{"id":6023,"nodeType":"Block","src":"2754:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:25","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"2811:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6018,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"2775:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6022,"nodeType":"RevertStatement","src":"2768:49:25"}]}},{"expression":{"arguments":[{"id":6027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6006,"src":"2852:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":6025,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:25","typeDescriptions":{}}},"id":6028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":6010,"id":6029,"nodeType":"Return","src":"2837:21:25"}]},"documentation":{"id":6004,"nodeType":"StructuredDocumentation","src":"2362:280:25","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6031,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:25","nodeType":"FunctionDefinition","parameters":{"id":6007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6006,"mutability":"mutable","name":"value","nameLocation":"2674:5:25","nodeType":"VariableDeclaration","scope":6031,"src":"2666:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6005,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:25"},"returnParameters":{"id":6010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6031,"src":"2704:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":6008,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:25","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:25"},"scope":7685,"src":"2647:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6058,"nodeType":"Block","src":"3222:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"3236:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6041,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":6040,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":6044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:25","memberName":"max","nodeType":"MemberAccess","src":"3244:17:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6052,"nodeType":"IfStatement","src":"3232:105:25","trueBody":{"id":6051,"nodeType":"Block","src":"3263:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:25","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"3320:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6046,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"3284:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6050,"nodeType":"RevertStatement","src":"3277:49:25"}]}},{"expression":{"arguments":[{"id":6055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"3361:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":6053,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:25","typeDescriptions":{}}},"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":6038,"id":6057,"nodeType":"Return","src":"3346:21:25"}]},"documentation":{"id":6032,"nodeType":"StructuredDocumentation","src":"2871:280:25","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6059,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:25","nodeType":"FunctionDefinition","parameters":{"id":6035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6034,"mutability":"mutable","name":"value","nameLocation":"3183:5:25","nodeType":"VariableDeclaration","scope":6059,"src":"3175:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6033,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:25"},"returnParameters":{"id":6038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6059,"src":"3213:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":6036,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:25","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:25"},"scope":7685,"src":"3156:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6086,"nodeType":"Block","src":"3731:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"3745:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6069,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":6068,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":6072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:25","memberName":"max","nodeType":"MemberAccess","src":"3753:17:25","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6080,"nodeType":"IfStatement","src":"3741:105:25","trueBody":{"id":6079,"nodeType":"Block","src":"3772:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:25","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"3829:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6074,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"3793:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6078,"nodeType":"RevertStatement","src":"3786:49:25"}]}},{"expression":{"arguments":[{"id":6083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6062,"src":"3870:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":6081,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:25","typeDescriptions":{}}},"id":6084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":6066,"id":6085,"nodeType":"Return","src":"3855:21:25"}]},"documentation":{"id":6060,"nodeType":"StructuredDocumentation","src":"3380:280:25","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6087,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:25","nodeType":"FunctionDefinition","parameters":{"id":6063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6062,"mutability":"mutable","name":"value","nameLocation":"3692:5:25","nodeType":"VariableDeclaration","scope":6087,"src":"3684:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6061,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:25"},"returnParameters":{"id":6066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6087,"src":"3722:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":6064,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:25","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:25"},"scope":7685,"src":"3665:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6114,"nodeType":"Block","src":"4240:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"4254:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6097,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":6096,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":6100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:25","memberName":"max","nodeType":"MemberAccess","src":"4262:17:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6108,"nodeType":"IfStatement","src":"4250:105:25","trueBody":{"id":6107,"nodeType":"Block","src":"4281:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:25","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"4338:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6102,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"4302:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6106,"nodeType":"RevertStatement","src":"4295:49:25"}]}},{"expression":{"arguments":[{"id":6111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"4379:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":6109,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:25","typeDescriptions":{}}},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":6094,"id":6113,"nodeType":"Return","src":"4364:21:25"}]},"documentation":{"id":6088,"nodeType":"StructuredDocumentation","src":"3889:280:25","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6115,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:25","nodeType":"FunctionDefinition","parameters":{"id":6091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6090,"mutability":"mutable","name":"value","nameLocation":"4201:5:25","nodeType":"VariableDeclaration","scope":6115,"src":"4193:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6089,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:25"},"returnParameters":{"id":6094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6115,"src":"4231:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":6092,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:25","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:25"},"scope":7685,"src":"4174:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6142,"nodeType":"Block","src":"4749:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"4763:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6125,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":6124,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":6128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:25","memberName":"max","nodeType":"MemberAccess","src":"4771:17:25","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6136,"nodeType":"IfStatement","src":"4759:105:25","trueBody":{"id":6135,"nodeType":"Block","src":"4790:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:25","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"4847:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6130,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"4811:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6134,"nodeType":"RevertStatement","src":"4804:49:25"}]}},{"expression":{"arguments":[{"id":6139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6118,"src":"4888:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":6137,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:25","typeDescriptions":{}}},"id":6140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":6122,"id":6141,"nodeType":"Return","src":"4873:21:25"}]},"documentation":{"id":6116,"nodeType":"StructuredDocumentation","src":"4398:280:25","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6143,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:25","nodeType":"FunctionDefinition","parameters":{"id":6119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6118,"mutability":"mutable","name":"value","nameLocation":"4710:5:25","nodeType":"VariableDeclaration","scope":6143,"src":"4702:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6117,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:25"},"returnParameters":{"id":6122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6143,"src":"4740:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":6120,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:25","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:25"},"scope":7685,"src":"4683:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6170,"nodeType":"Block","src":"5258:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"5272:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6153,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":6152,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":6156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:25","memberName":"max","nodeType":"MemberAccess","src":"5280:17:25","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6164,"nodeType":"IfStatement","src":"5268:105:25","trueBody":{"id":6163,"nodeType":"Block","src":"5299:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:25","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"5356:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6158,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"5320:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6162,"nodeType":"RevertStatement","src":"5313:49:25"}]}},{"expression":{"arguments":[{"id":6167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"5397:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":6165,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:25","typeDescriptions":{}}},"id":6168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":6150,"id":6169,"nodeType":"Return","src":"5382:21:25"}]},"documentation":{"id":6144,"nodeType":"StructuredDocumentation","src":"4907:280:25","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6171,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:25","nodeType":"FunctionDefinition","parameters":{"id":6147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6146,"mutability":"mutable","name":"value","nameLocation":"5219:5:25","nodeType":"VariableDeclaration","scope":6171,"src":"5211:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6145,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:25"},"returnParameters":{"id":6150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6171,"src":"5249:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":6148,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:25","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:25"},"scope":7685,"src":"5192:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6198,"nodeType":"Block","src":"5767:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"5781:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6181,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":6180,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":6184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:25","memberName":"max","nodeType":"MemberAccess","src":"5789:17:25","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6192,"nodeType":"IfStatement","src":"5777:105:25","trueBody":{"id":6191,"nodeType":"Block","src":"5808:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:25","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"5865:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6186,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"5829:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6190,"nodeType":"RevertStatement","src":"5822:49:25"}]}},{"expression":{"arguments":[{"id":6195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6174,"src":"5906:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":6193,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:25","typeDescriptions":{}}},"id":6196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":6178,"id":6197,"nodeType":"Return","src":"5891:21:25"}]},"documentation":{"id":6172,"nodeType":"StructuredDocumentation","src":"5416:280:25","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6199,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:25","nodeType":"FunctionDefinition","parameters":{"id":6175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6174,"mutability":"mutable","name":"value","nameLocation":"5728:5:25","nodeType":"VariableDeclaration","scope":6199,"src":"5720:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6173,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:25"},"returnParameters":{"id":6178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6199,"src":"5758:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":6176,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:25","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:25"},"scope":7685,"src":"5701:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6226,"nodeType":"Block","src":"6276:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"6290:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6209,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":6208,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":6212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:25","memberName":"max","nodeType":"MemberAccess","src":"6298:17:25","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6220,"nodeType":"IfStatement","src":"6286:105:25","trueBody":{"id":6219,"nodeType":"Block","src":"6317:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:25","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"6374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6214,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"6338:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6218,"nodeType":"RevertStatement","src":"6331:49:25"}]}},{"expression":{"arguments":[{"id":6223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6202,"src":"6415:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":6221,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:25","typeDescriptions":{}}},"id":6224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":6206,"id":6225,"nodeType":"Return","src":"6400:21:25"}]},"documentation":{"id":6200,"nodeType":"StructuredDocumentation","src":"5925:280:25","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6227,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:25","nodeType":"FunctionDefinition","parameters":{"id":6203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6202,"mutability":"mutable","name":"value","nameLocation":"6237:5:25","nodeType":"VariableDeclaration","scope":6227,"src":"6229:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6201,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:25"},"returnParameters":{"id":6206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6227,"src":"6267:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":6204,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:25","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:25"},"scope":7685,"src":"6210:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6254,"nodeType":"Block","src":"6785:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"6799:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6237,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":6236,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":6240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:25","memberName":"max","nodeType":"MemberAccess","src":"6807:17:25","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6248,"nodeType":"IfStatement","src":"6795:105:25","trueBody":{"id":6247,"nodeType":"Block","src":"6826:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:25","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"6883:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6242,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"6847:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6246,"nodeType":"RevertStatement","src":"6840:49:25"}]}},{"expression":{"arguments":[{"id":6251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6230,"src":"6924:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":6249,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:25","typeDescriptions":{}}},"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":6234,"id":6253,"nodeType":"Return","src":"6909:21:25"}]},"documentation":{"id":6228,"nodeType":"StructuredDocumentation","src":"6434:280:25","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6255,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:25","nodeType":"FunctionDefinition","parameters":{"id":6231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6230,"mutability":"mutable","name":"value","nameLocation":"6746:5:25","nodeType":"VariableDeclaration","scope":6255,"src":"6738:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6229,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:25"},"returnParameters":{"id":6234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6255,"src":"6776:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":6232,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:25","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:25"},"scope":7685,"src":"6719:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6282,"nodeType":"Block","src":"7294:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"7308:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6265,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":6264,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":6268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:25","memberName":"max","nodeType":"MemberAccess","src":"7316:17:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6276,"nodeType":"IfStatement","src":"7304:105:25","trueBody":{"id":6275,"nodeType":"Block","src":"7335:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:25","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"7392:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6270,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"7356:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6274,"nodeType":"RevertStatement","src":"7349:49:25"}]}},{"expression":{"arguments":[{"id":6279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"7433:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6277,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:25","typeDescriptions":{}}},"id":6280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":6262,"id":6281,"nodeType":"Return","src":"7418:21:25"}]},"documentation":{"id":6256,"nodeType":"StructuredDocumentation","src":"6943:280:25","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6283,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:25","nodeType":"FunctionDefinition","parameters":{"id":6259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6258,"mutability":"mutable","name":"value","nameLocation":"7255:5:25","nodeType":"VariableDeclaration","scope":6283,"src":"7247:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6257,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:25"},"returnParameters":{"id":6262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6283,"src":"7285:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":6260,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:25","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:25"},"scope":7685,"src":"7228:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6310,"nodeType":"Block","src":"7803:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"7817:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6293,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":6292,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":6296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:25","memberName":"max","nodeType":"MemberAccess","src":"7825:17:25","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6304,"nodeType":"IfStatement","src":"7813:105:25","trueBody":{"id":6303,"nodeType":"Block","src":"7844:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:25","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"7901:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6298,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"7865:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6302,"nodeType":"RevertStatement","src":"7858:49:25"}]}},{"expression":{"arguments":[{"id":6307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6286,"src":"7942:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":6305,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:25","typeDescriptions":{}}},"id":6308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":6290,"id":6309,"nodeType":"Return","src":"7927:21:25"}]},"documentation":{"id":6284,"nodeType":"StructuredDocumentation","src":"7452:280:25","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6311,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:25","nodeType":"FunctionDefinition","parameters":{"id":6287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6286,"mutability":"mutable","name":"value","nameLocation":"7764:5:25","nodeType":"VariableDeclaration","scope":6311,"src":"7756:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6285,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:25"},"returnParameters":{"id":6290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6311,"src":"7794:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":6288,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:25","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:25"},"scope":7685,"src":"7737:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6338,"nodeType":"Block","src":"8312:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"8326:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6321,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":6320,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":6324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:25","memberName":"max","nodeType":"MemberAccess","src":"8334:17:25","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6332,"nodeType":"IfStatement","src":"8322:105:25","trueBody":{"id":6331,"nodeType":"Block","src":"8353:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:25","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"8410:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6326,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"8374:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6330,"nodeType":"RevertStatement","src":"8367:49:25"}]}},{"expression":{"arguments":[{"id":6335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6314,"src":"8451:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6333,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:25","typeDescriptions":{}}},"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":6318,"id":6337,"nodeType":"Return","src":"8436:21:25"}]},"documentation":{"id":6312,"nodeType":"StructuredDocumentation","src":"7961:280:25","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6339,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:25","nodeType":"FunctionDefinition","parameters":{"id":6315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6314,"mutability":"mutable","name":"value","nameLocation":"8273:5:25","nodeType":"VariableDeclaration","scope":6339,"src":"8265:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6313,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:25"},"returnParameters":{"id":6318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6339,"src":"8303:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":6316,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:25","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:25"},"scope":7685,"src":"8246:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6366,"nodeType":"Block","src":"8821:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"8835:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6349,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6348,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:25","memberName":"max","nodeType":"MemberAccess","src":"8843:17:25","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6360,"nodeType":"IfStatement","src":"8831:105:25","trueBody":{"id":6359,"nodeType":"Block","src":"8862:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:25","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"8919:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6354,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"8883:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6358,"nodeType":"RevertStatement","src":"8876:49:25"}]}},{"expression":{"arguments":[{"id":6363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6342,"src":"8960:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6361,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:25","typeDescriptions":{}}},"id":6364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6346,"id":6365,"nodeType":"Return","src":"8945:21:25"}]},"documentation":{"id":6340,"nodeType":"StructuredDocumentation","src":"8470:280:25","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6367,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:25","nodeType":"FunctionDefinition","parameters":{"id":6343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6342,"mutability":"mutable","name":"value","nameLocation":"8782:5:25","nodeType":"VariableDeclaration","scope":6367,"src":"8774:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6341,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:25"},"returnParameters":{"id":6346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6367,"src":"8812:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6344,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:25","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:25"},"scope":7685,"src":"8755:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6394,"nodeType":"Block","src":"9330:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"9344:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6377,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6376,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:25","memberName":"max","nodeType":"MemberAccess","src":"9352:17:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6388,"nodeType":"IfStatement","src":"9340:105:25","trueBody":{"id":6387,"nodeType":"Block","src":"9371:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"9428:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6382,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"9392:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6386,"nodeType":"RevertStatement","src":"9385:49:25"}]}},{"expression":{"arguments":[{"id":6391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6370,"src":"9469:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6389,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:25","typeDescriptions":{}}},"id":6392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6374,"id":6393,"nodeType":"Return","src":"9454:21:25"}]},"documentation":{"id":6368,"nodeType":"StructuredDocumentation","src":"8979:280:25","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6395,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:25","nodeType":"FunctionDefinition","parameters":{"id":6371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6370,"mutability":"mutable","name":"value","nameLocation":"9291:5:25","nodeType":"VariableDeclaration","scope":6395,"src":"9283:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6369,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:25"},"returnParameters":{"id":6374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6395,"src":"9321:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6372,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:25","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:25"},"scope":7685,"src":"9264:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6422,"nodeType":"Block","src":"9839:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"9853:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6405,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6404,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:25","memberName":"max","nodeType":"MemberAccess","src":"9861:17:25","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6416,"nodeType":"IfStatement","src":"9849:105:25","trueBody":{"id":6415,"nodeType":"Block","src":"9880:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:25","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"9937:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6410,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"9901:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6414,"nodeType":"RevertStatement","src":"9894:49:25"}]}},{"expression":{"arguments":[{"id":6419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6398,"src":"9978:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6417,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:25","typeDescriptions":{}}},"id":6420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6402,"id":6421,"nodeType":"Return","src":"9963:21:25"}]},"documentation":{"id":6396,"nodeType":"StructuredDocumentation","src":"9488:280:25","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6423,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:25","nodeType":"FunctionDefinition","parameters":{"id":6399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6398,"mutability":"mutable","name":"value","nameLocation":"9800:5:25","nodeType":"VariableDeclaration","scope":6423,"src":"9792:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6397,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:25"},"returnParameters":{"id":6402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6423,"src":"9830:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6400,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:25","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:25"},"scope":7685,"src":"9773:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6450,"nodeType":"Block","src":"10348:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"10362:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6433,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6432,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:25","memberName":"max","nodeType":"MemberAccess","src":"10370:17:25","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6444,"nodeType":"IfStatement","src":"10358:105:25","trueBody":{"id":6443,"nodeType":"Block","src":"10389:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:25","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"10446:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6438,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"10410:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6442,"nodeType":"RevertStatement","src":"10403:49:25"}]}},{"expression":{"arguments":[{"id":6447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6426,"src":"10487:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6445,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:25","typeDescriptions":{}}},"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6430,"id":6449,"nodeType":"Return","src":"10472:21:25"}]},"documentation":{"id":6424,"nodeType":"StructuredDocumentation","src":"9997:280:25","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6451,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:25","nodeType":"FunctionDefinition","parameters":{"id":6427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6426,"mutability":"mutable","name":"value","nameLocation":"10309:5:25","nodeType":"VariableDeclaration","scope":6451,"src":"10301:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6425,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:25"},"returnParameters":{"id":6430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6451,"src":"10339:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6428,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:25","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:25"},"scope":7685,"src":"10282:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6478,"nodeType":"Block","src":"10857:152:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6454,"src":"10871:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6461,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6460,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:25","memberName":"max","nodeType":"MemberAccess","src":"10879:17:25","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6472,"nodeType":"IfStatement","src":"10867:105:25","trueBody":{"id":6471,"nodeType":"Block","src":"10898:74:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:25","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6454,"src":"10955:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6466,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"10919:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6470,"nodeType":"RevertStatement","src":"10912:49:25"}]}},{"expression":{"arguments":[{"id":6475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6454,"src":"10996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6473,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:25","typeDescriptions":{}}},"id":6476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6458,"id":6477,"nodeType":"Return","src":"10981:21:25"}]},"documentation":{"id":6452,"nodeType":"StructuredDocumentation","src":"10506:280:25","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6479,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:25","nodeType":"FunctionDefinition","parameters":{"id":6455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6454,"mutability":"mutable","name":"value","nameLocation":"10818:5:25","nodeType":"VariableDeclaration","scope":6479,"src":"10810:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6453,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:25"},"returnParameters":{"id":6458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6479,"src":"10848:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6456,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:25","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:25"},"scope":7685,"src":"10791:218:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6506,"nodeType":"Block","src":"11360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"11374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6489,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6488,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:25","memberName":"max","nodeType":"MemberAccess","src":"11382:16:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6500,"nodeType":"IfStatement","src":"11370:103:25","trueBody":{"id":6499,"nodeType":"Block","src":"11400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"11456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6494,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"11421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6498,"nodeType":"RevertStatement","src":"11414:48:25"}]}},{"expression":{"arguments":[{"id":6503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"11496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6501,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:25","typeDescriptions":{}}},"id":6504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6486,"id":6505,"nodeType":"Return","src":"11482:20:25"}]},"documentation":{"id":6480,"nodeType":"StructuredDocumentation","src":"11015:276:25","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6507,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:25","nodeType":"FunctionDefinition","parameters":{"id":6483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6482,"mutability":"mutable","name":"value","nameLocation":"11322:5:25","nodeType":"VariableDeclaration","scope":6507,"src":"11314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6481,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:25"},"returnParameters":{"id":6486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6507,"src":"11352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6484,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:25","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:25"},"scope":7685,"src":"11296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6534,"nodeType":"Block","src":"11860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6510,"src":"11874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6517,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6516,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:25","memberName":"max","nodeType":"MemberAccess","src":"11882:16:25","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6528,"nodeType":"IfStatement","src":"11870:103:25","trueBody":{"id":6527,"nodeType":"Block","src":"11900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6510,"src":"11956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6522,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"11921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6526,"nodeType":"RevertStatement","src":"11914:48:25"}]}},{"expression":{"arguments":[{"id":6531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6510,"src":"11996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6529,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:25","typeDescriptions":{}}},"id":6532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6514,"id":6533,"nodeType":"Return","src":"11982:20:25"}]},"documentation":{"id":6508,"nodeType":"StructuredDocumentation","src":"11515:276:25","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6535,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:25","nodeType":"FunctionDefinition","parameters":{"id":6511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6510,"mutability":"mutable","name":"value","nameLocation":"11822:5:25","nodeType":"VariableDeclaration","scope":6535,"src":"11814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6509,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:25"},"returnParameters":{"id":6514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6535,"src":"11852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6512,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:25","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:25"},"scope":7685,"src":"11796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6562,"nodeType":"Block","src":"12360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"12374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6545,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6544,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:25","memberName":"max","nodeType":"MemberAccess","src":"12382:16:25","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6556,"nodeType":"IfStatement","src":"12370:103:25","trueBody":{"id":6555,"nodeType":"Block","src":"12400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"12456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6550,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"12421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6554,"nodeType":"RevertStatement","src":"12414:48:25"}]}},{"expression":{"arguments":[{"id":6559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6538,"src":"12496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6557,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:25","typeDescriptions":{}}},"id":6560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6542,"id":6561,"nodeType":"Return","src":"12482:20:25"}]},"documentation":{"id":6536,"nodeType":"StructuredDocumentation","src":"12015:276:25","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6563,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:25","nodeType":"FunctionDefinition","parameters":{"id":6539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6538,"mutability":"mutable","name":"value","nameLocation":"12322:5:25","nodeType":"VariableDeclaration","scope":6563,"src":"12314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6537,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:25"},"returnParameters":{"id":6542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6563,"src":"12352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6540,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:25","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:25"},"scope":7685,"src":"12296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6590,"nodeType":"Block","src":"12860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"12874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6573,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6572,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:25","memberName":"max","nodeType":"MemberAccess","src":"12882:16:25","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6584,"nodeType":"IfStatement","src":"12870:103:25","trueBody":{"id":6583,"nodeType":"Block","src":"12900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"12956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6578,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"12921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6582,"nodeType":"RevertStatement","src":"12914:48:25"}]}},{"expression":{"arguments":[{"id":6587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6566,"src":"12996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6585,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:25","typeDescriptions":{}}},"id":6588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6570,"id":6589,"nodeType":"Return","src":"12982:20:25"}]},"documentation":{"id":6564,"nodeType":"StructuredDocumentation","src":"12515:276:25","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6591,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:25","nodeType":"FunctionDefinition","parameters":{"id":6567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6566,"mutability":"mutable","name":"value","nameLocation":"12822:5:25","nodeType":"VariableDeclaration","scope":6591,"src":"12814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6565,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:25"},"returnParameters":{"id":6570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6591,"src":"12852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6568,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:25","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:25"},"scope":7685,"src":"12796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6618,"nodeType":"Block","src":"13360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"13374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6601,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6600,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:25","memberName":"max","nodeType":"MemberAccess","src":"13382:16:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6612,"nodeType":"IfStatement","src":"13370:103:25","trueBody":{"id":6611,"nodeType":"Block","src":"13400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"13456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6606,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"13421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6610,"nodeType":"RevertStatement","src":"13414:48:25"}]}},{"expression":{"arguments":[{"id":6615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"13496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6613,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:25","typeDescriptions":{}}},"id":6616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6598,"id":6617,"nodeType":"Return","src":"13482:20:25"}]},"documentation":{"id":6592,"nodeType":"StructuredDocumentation","src":"13015:276:25","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6619,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:25","nodeType":"FunctionDefinition","parameters":{"id":6595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6594,"mutability":"mutable","name":"value","nameLocation":"13322:5:25","nodeType":"VariableDeclaration","scope":6619,"src":"13314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6593,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:25"},"returnParameters":{"id":6598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6619,"src":"13352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6596,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:25","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:25"},"scope":7685,"src":"13296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6646,"nodeType":"Block","src":"13860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"13874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6629,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6628,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:25","memberName":"max","nodeType":"MemberAccess","src":"13882:16:25","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6640,"nodeType":"IfStatement","src":"13870:103:25","trueBody":{"id":6639,"nodeType":"Block","src":"13900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"13956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6634,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"13921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6638,"nodeType":"RevertStatement","src":"13914:48:25"}]}},{"expression":{"arguments":[{"id":6643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"13996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6641,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:25","typeDescriptions":{}}},"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6626,"id":6645,"nodeType":"Return","src":"13982:20:25"}]},"documentation":{"id":6620,"nodeType":"StructuredDocumentation","src":"13515:276:25","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6647,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:25","nodeType":"FunctionDefinition","parameters":{"id":6623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6622,"mutability":"mutable","name":"value","nameLocation":"13822:5:25","nodeType":"VariableDeclaration","scope":6647,"src":"13814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6621,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:25"},"returnParameters":{"id":6626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6647,"src":"13852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6624,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:25","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:25"},"scope":7685,"src":"13796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6674,"nodeType":"Block","src":"14360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"14374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6657,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6656,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:25","memberName":"max","nodeType":"MemberAccess","src":"14382:16:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6668,"nodeType":"IfStatement","src":"14370:103:25","trueBody":{"id":6667,"nodeType":"Block","src":"14400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"14456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6662,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"14421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6666,"nodeType":"RevertStatement","src":"14414:48:25"}]}},{"expression":{"arguments":[{"id":6671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6650,"src":"14496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6669,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:25","typeDescriptions":{}}},"id":6672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6654,"id":6673,"nodeType":"Return","src":"14482:20:25"}]},"documentation":{"id":6648,"nodeType":"StructuredDocumentation","src":"14015:276:25","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6675,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:25","nodeType":"FunctionDefinition","parameters":{"id":6651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6650,"mutability":"mutable","name":"value","nameLocation":"14322:5:25","nodeType":"VariableDeclaration","scope":6675,"src":"14314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6649,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:25"},"returnParameters":{"id":6654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6675,"src":"14352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6652,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:25","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:25"},"scope":7685,"src":"14296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6702,"nodeType":"Block","src":"14860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"14874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6685,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6684,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:25","memberName":"max","nodeType":"MemberAccess","src":"14882:16:25","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6696,"nodeType":"IfStatement","src":"14870:103:25","trueBody":{"id":6695,"nodeType":"Block","src":"14900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"14956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6690,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"14921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6694,"nodeType":"RevertStatement","src":"14914:48:25"}]}},{"expression":{"arguments":[{"id":6699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"14996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6697,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:25","typeDescriptions":{}}},"id":6700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6682,"id":6701,"nodeType":"Return","src":"14982:20:25"}]},"documentation":{"id":6676,"nodeType":"StructuredDocumentation","src":"14515:276:25","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6703,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:25","nodeType":"FunctionDefinition","parameters":{"id":6679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6678,"mutability":"mutable","name":"value","nameLocation":"14822:5:25","nodeType":"VariableDeclaration","scope":6703,"src":"14814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6677,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:25"},"returnParameters":{"id":6682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6703,"src":"14852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6680,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:25","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:25"},"scope":7685,"src":"14796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6730,"nodeType":"Block","src":"15360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"15374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6713,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6712,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:25","memberName":"max","nodeType":"MemberAccess","src":"15382:16:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6724,"nodeType":"IfStatement","src":"15370:103:25","trueBody":{"id":6723,"nodeType":"Block","src":"15400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"15456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6718,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"15421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6722,"nodeType":"RevertStatement","src":"15414:48:25"}]}},{"expression":{"arguments":[{"id":6727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6706,"src":"15496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6725,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:25","typeDescriptions":{}}},"id":6728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6710,"id":6729,"nodeType":"Return","src":"15482:20:25"}]},"documentation":{"id":6704,"nodeType":"StructuredDocumentation","src":"15015:276:25","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6731,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:25","nodeType":"FunctionDefinition","parameters":{"id":6707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6706,"mutability":"mutable","name":"value","nameLocation":"15322:5:25","nodeType":"VariableDeclaration","scope":6731,"src":"15314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6705,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:25"},"returnParameters":{"id":6710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6731,"src":"15352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6708,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:25","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:25"},"scope":7685,"src":"15296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6758,"nodeType":"Block","src":"15860:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6734,"src":"15874:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6741,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6740,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:25","memberName":"max","nodeType":"MemberAccess","src":"15882:16:25","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6752,"nodeType":"IfStatement","src":"15870:103:25","trueBody":{"id":6751,"nodeType":"Block","src":"15900:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:25","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6734,"src":"15956:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6746,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"15921:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6750,"nodeType":"RevertStatement","src":"15914:48:25"}]}},{"expression":{"arguments":[{"id":6755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6734,"src":"15996:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6753,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:25","typeDescriptions":{}}},"id":6756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6738,"id":6757,"nodeType":"Return","src":"15982:20:25"}]},"documentation":{"id":6732,"nodeType":"StructuredDocumentation","src":"15515:276:25","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6759,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:25","nodeType":"FunctionDefinition","parameters":{"id":6735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6734,"mutability":"mutable","name":"value","nameLocation":"15822:5:25","nodeType":"VariableDeclaration","scope":6759,"src":"15814:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6733,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:25"},"returnParameters":{"id":6738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6759,"src":"15852:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6736,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:25","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:25"},"scope":7685,"src":"15796:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6786,"nodeType":"Block","src":"16360:149:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6762,"src":"16374:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6769,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6768,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:25","memberName":"max","nodeType":"MemberAccess","src":"16382:16:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6780,"nodeType":"IfStatement","src":"16370:103:25","trueBody":{"id":6779,"nodeType":"Block","src":"16400:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6762,"src":"16456:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6774,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"16421:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6778,"nodeType":"RevertStatement","src":"16414:48:25"}]}},{"expression":{"arguments":[{"id":6783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6762,"src":"16496:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6781,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:25","typeDescriptions":{}}},"id":6784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6766,"id":6785,"nodeType":"Return","src":"16482:20:25"}]},"documentation":{"id":6760,"nodeType":"StructuredDocumentation","src":"16015:276:25","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6787,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:25","nodeType":"FunctionDefinition","parameters":{"id":6763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6762,"mutability":"mutable","name":"value","nameLocation":"16322:5:25","nodeType":"VariableDeclaration","scope":6787,"src":"16314:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6761,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:25"},"returnParameters":{"id":6766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6787,"src":"16352:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6764,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:25","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:25"},"scope":7685,"src":"16296:213:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6814,"nodeType":"Block","src":"16854:146:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"16868:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6797,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6796,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:25","memberName":"max","nodeType":"MemberAccess","src":"16876:15:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6808,"nodeType":"IfStatement","src":"16864:101:25","trueBody":{"id":6807,"nodeType":"Block","src":"16893:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"16948:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6802,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"16914:30:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6806,"nodeType":"RevertStatement","src":"16907:47:25"}]}},{"expression":{"arguments":[{"id":6811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"16987:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6809,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:25","typeDescriptions":{}}},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6794,"id":6813,"nodeType":"Return","src":"16974:19:25"}]},"documentation":{"id":6788,"nodeType":"StructuredDocumentation","src":"16515:272:25","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6815,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:25","nodeType":"FunctionDefinition","parameters":{"id":6791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6790,"mutability":"mutable","name":"value","nameLocation":"16817:5:25","nodeType":"VariableDeclaration","scope":6815,"src":"16809:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6789,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:25"},"returnParameters":{"id":6794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6815,"src":"16847:5:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6792,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:25","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:25"},"scope":7685,"src":"16792:208:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6837,"nodeType":"Block","src":"17236:128:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6818,"src":"17250:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6831,"nodeType":"IfStatement","src":"17246:81:25","trueBody":{"id":6830,"nodeType":"Block","src":"17261:66:25","statements":[{"errorCall":{"arguments":[{"id":6827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6818,"src":"17310:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6826,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5935,"src":"17282:27:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6829,"nodeType":"RevertStatement","src":"17275:41:25"}]}},{"expression":{"arguments":[{"id":6834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6818,"src":"17351:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6832,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:25","typeDescriptions":{}}},"id":6835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6822,"id":6836,"nodeType":"Return","src":"17336:21:25"}]},"documentation":{"id":6816,"nodeType":"StructuredDocumentation","src":"17006:160:25","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6838,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:25","nodeType":"FunctionDefinition","parameters":{"id":6819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6818,"mutability":"mutable","name":"value","nameLocation":"17197:5:25","nodeType":"VariableDeclaration","scope":6838,"src":"17190:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6817,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:25"},"returnParameters":{"id":6822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6838,"src":"17227:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6820,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:25"},"scope":7685,"src":"17171:193:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6863,"nodeType":"Block","src":"17761:150:25","statements":[{"expression":{"id":6851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6846,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6844,"src":"17771:10:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6849,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6841,"src":"17791:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6848,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6847,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:25","typeDescriptions":{}}},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6852,"nodeType":"ExpressionStatement","src":"17771:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6853,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6844,"src":"17811:10:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6841,"src":"17825:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6862,"nodeType":"IfStatement","src":"17807:98:25","trueBody":{"id":6861,"nodeType":"Block","src":"17832:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:25","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6841,"src":"17888:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6856,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"17853:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6860,"nodeType":"RevertStatement","src":"17846:48:25"}]}}]},"documentation":{"id":6839,"nodeType":"StructuredDocumentation","src":"17370:312:25","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6864,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:25","nodeType":"FunctionDefinition","parameters":{"id":6842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6841,"mutability":"mutable","name":"value","nameLocation":"17712:5:25","nodeType":"VariableDeclaration","scope":6864,"src":"17705:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6840,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:25"},"returnParameters":{"id":6845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6844,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:25","nodeType":"VariableDeclaration","scope":6864,"src":"17742:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6843,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:25","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:25"},"scope":7685,"src":"17687:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6889,"nodeType":"Block","src":"18308:150:25","statements":[{"expression":{"id":6877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6872,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6870,"src":"18318:10:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6867,"src":"18338:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6873,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:25","typeDescriptions":{}}},"id":6876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6878,"nodeType":"ExpressionStatement","src":"18318:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6879,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6870,"src":"18358:10:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6867,"src":"18372:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6888,"nodeType":"IfStatement","src":"18354:98:25","trueBody":{"id":6887,"nodeType":"Block","src":"18379:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:25","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6867,"src":"18435:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6882,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"18400:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6886,"nodeType":"RevertStatement","src":"18393:48:25"}]}}]},"documentation":{"id":6865,"nodeType":"StructuredDocumentation","src":"17917:312:25","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6890,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:25","nodeType":"FunctionDefinition","parameters":{"id":6868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6867,"mutability":"mutable","name":"value","nameLocation":"18259:5:25","nodeType":"VariableDeclaration","scope":6890,"src":"18252:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6866,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:25"},"returnParameters":{"id":6871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6870,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:25","nodeType":"VariableDeclaration","scope":6890,"src":"18289:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6869,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:25","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:25"},"scope":7685,"src":"18234:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6915,"nodeType":"Block","src":"18855:150:25","statements":[{"expression":{"id":6903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6898,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6896,"src":"18865:10:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6893,"src":"18885:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6899,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:25","typeDescriptions":{}}},"id":6902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6904,"nodeType":"ExpressionStatement","src":"18865:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6905,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6896,"src":"18905:10:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6893,"src":"18919:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6914,"nodeType":"IfStatement","src":"18901:98:25","trueBody":{"id":6913,"nodeType":"Block","src":"18926:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:25","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6893,"src":"18982:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6908,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"18947:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6912,"nodeType":"RevertStatement","src":"18940:48:25"}]}}]},"documentation":{"id":6891,"nodeType":"StructuredDocumentation","src":"18464:312:25","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6916,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:25","nodeType":"FunctionDefinition","parameters":{"id":6894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6893,"mutability":"mutable","name":"value","nameLocation":"18806:5:25","nodeType":"VariableDeclaration","scope":6916,"src":"18799:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6892,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:25"},"returnParameters":{"id":6897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6896,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:25","nodeType":"VariableDeclaration","scope":6916,"src":"18836:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6895,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:25","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:25"},"scope":7685,"src":"18781:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6941,"nodeType":"Block","src":"19402:150:25","statements":[{"expression":{"id":6929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6924,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6922,"src":"19412:10:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6919,"src":"19432:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6925,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:25","typeDescriptions":{}}},"id":6928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6930,"nodeType":"ExpressionStatement","src":"19412:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6931,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6922,"src":"19452:10:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6919,"src":"19466:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6940,"nodeType":"IfStatement","src":"19448:98:25","trueBody":{"id":6939,"nodeType":"Block","src":"19473:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:25","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6919,"src":"19529:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6934,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"19494:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6938,"nodeType":"RevertStatement","src":"19487:48:25"}]}}]},"documentation":{"id":6917,"nodeType":"StructuredDocumentation","src":"19011:312:25","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6942,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:25","nodeType":"FunctionDefinition","parameters":{"id":6920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6919,"mutability":"mutable","name":"value","nameLocation":"19353:5:25","nodeType":"VariableDeclaration","scope":6942,"src":"19346:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6918,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:25"},"returnParameters":{"id":6923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6922,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:25","nodeType":"VariableDeclaration","scope":6942,"src":"19383:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6921,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:25","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:25"},"scope":7685,"src":"19328:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6967,"nodeType":"Block","src":"19949:150:25","statements":[{"expression":{"id":6955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6950,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6948,"src":"19959:10:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6953,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"19979:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6951,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:25","typeDescriptions":{}}},"id":6954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6956,"nodeType":"ExpressionStatement","src":"19959:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6957,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6948,"src":"19999:10:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"20013:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6966,"nodeType":"IfStatement","src":"19995:98:25","trueBody":{"id":6965,"nodeType":"Block","src":"20020:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:25","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6945,"src":"20076:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6960,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"20041:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6964,"nodeType":"RevertStatement","src":"20034:48:25"}]}}]},"documentation":{"id":6943,"nodeType":"StructuredDocumentation","src":"19558:312:25","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6968,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:25","nodeType":"FunctionDefinition","parameters":{"id":6946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6945,"mutability":"mutable","name":"value","nameLocation":"19900:5:25","nodeType":"VariableDeclaration","scope":6968,"src":"19893:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6944,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:25"},"returnParameters":{"id":6949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6948,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:25","nodeType":"VariableDeclaration","scope":6968,"src":"19930:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6947,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:25","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:25"},"scope":7685,"src":"19875:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6993,"nodeType":"Block","src":"20496:150:25","statements":[{"expression":{"id":6981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6976,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"20506:10:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6971,"src":"20526:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6977,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:25","typeDescriptions":{}}},"id":6980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6982,"nodeType":"ExpressionStatement","src":"20506:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6983,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6974,"src":"20546:10:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6971,"src":"20560:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6992,"nodeType":"IfStatement","src":"20542:98:25","trueBody":{"id":6991,"nodeType":"Block","src":"20567:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:25","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6971,"src":"20623:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6986,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"20588:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6990,"nodeType":"RevertStatement","src":"20581:48:25"}]}}]},"documentation":{"id":6969,"nodeType":"StructuredDocumentation","src":"20105:312:25","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6994,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:25","nodeType":"FunctionDefinition","parameters":{"id":6972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6971,"mutability":"mutable","name":"value","nameLocation":"20447:5:25","nodeType":"VariableDeclaration","scope":6994,"src":"20440:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6970,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:25"},"returnParameters":{"id":6975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6974,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:25","nodeType":"VariableDeclaration","scope":6994,"src":"20477:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6973,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:25","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:25"},"scope":7685,"src":"20422:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7019,"nodeType":"Block","src":"21043:150:25","statements":[{"expression":{"id":7007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7002,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"21053:10:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7005,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6997,"src":"21073:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":7003,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:25","typeDescriptions":{}}},"id":7006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":7008,"nodeType":"ExpressionStatement","src":"21053:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7009,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"21093:10:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6997,"src":"21107:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7018,"nodeType":"IfStatement","src":"21089:98:25","trueBody":{"id":7017,"nodeType":"Block","src":"21114:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:25","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6997,"src":"21170:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7012,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"21135:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7016,"nodeType":"RevertStatement","src":"21128:48:25"}]}}]},"documentation":{"id":6995,"nodeType":"StructuredDocumentation","src":"20652:312:25","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7020,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:25","nodeType":"FunctionDefinition","parameters":{"id":6998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6997,"mutability":"mutable","name":"value","nameLocation":"20994:5:25","nodeType":"VariableDeclaration","scope":7020,"src":"20987:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6996,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:25"},"returnParameters":{"id":7001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7000,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:25","nodeType":"VariableDeclaration","scope":7020,"src":"21024:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6999,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:25","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:25"},"scope":7685,"src":"20969:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7045,"nodeType":"Block","src":"21590:150:25","statements":[{"expression":{"id":7033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7028,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"21600:10:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"21620:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":7029,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:25","typeDescriptions":{}}},"id":7032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":7034,"nodeType":"ExpressionStatement","src":"21600:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7035,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"21640:10:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7036,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"21654:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7044,"nodeType":"IfStatement","src":"21636:98:25","trueBody":{"id":7043,"nodeType":"Block","src":"21661:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:25","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"21717:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7038,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"21682:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7042,"nodeType":"RevertStatement","src":"21675:48:25"}]}}]},"documentation":{"id":7021,"nodeType":"StructuredDocumentation","src":"21199:312:25","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7046,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:25","nodeType":"FunctionDefinition","parameters":{"id":7024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7023,"mutability":"mutable","name":"value","nameLocation":"21541:5:25","nodeType":"VariableDeclaration","scope":7046,"src":"21534:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7022,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:25"},"returnParameters":{"id":7027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7026,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:25","nodeType":"VariableDeclaration","scope":7046,"src":"21571:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":7025,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:25","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:25"},"scope":7685,"src":"21516:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7071,"nodeType":"Block","src":"22137:150:25","statements":[{"expression":{"id":7059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7054,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"22147:10:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"22167:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":7055,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:25","typeDescriptions":{}}},"id":7058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":7060,"nodeType":"ExpressionStatement","src":"22147:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7061,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7052,"src":"22187:10:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"22201:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7070,"nodeType":"IfStatement","src":"22183:98:25","trueBody":{"id":7069,"nodeType":"Block","src":"22208:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:25","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"22264:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7064,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"22229:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7068,"nodeType":"RevertStatement","src":"22222:48:25"}]}}]},"documentation":{"id":7047,"nodeType":"StructuredDocumentation","src":"21746:312:25","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7072,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:25","nodeType":"FunctionDefinition","parameters":{"id":7050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7049,"mutability":"mutable","name":"value","nameLocation":"22088:5:25","nodeType":"VariableDeclaration","scope":7072,"src":"22081:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7048,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:25"},"returnParameters":{"id":7053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7052,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:25","nodeType":"VariableDeclaration","scope":7072,"src":"22118:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":7051,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:25","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:25"},"scope":7685,"src":"22063:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7097,"nodeType":"Block","src":"22684:150:25","statements":[{"expression":{"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7080,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"22694:10:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"22714:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7082,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":7081,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:25","typeDescriptions":{}}},"id":7084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":7086,"nodeType":"ExpressionStatement","src":"22694:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7087,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7078,"src":"22734:10:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7088,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"22748:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7096,"nodeType":"IfStatement","src":"22730:98:25","trueBody":{"id":7095,"nodeType":"Block","src":"22755:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:25","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7075,"src":"22811:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7090,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"22776:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7094,"nodeType":"RevertStatement","src":"22769:48:25"}]}}]},"documentation":{"id":7073,"nodeType":"StructuredDocumentation","src":"22293:312:25","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7098,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:25","nodeType":"FunctionDefinition","parameters":{"id":7076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7075,"mutability":"mutable","name":"value","nameLocation":"22635:5:25","nodeType":"VariableDeclaration","scope":7098,"src":"22628:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7074,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:25"},"returnParameters":{"id":7079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7078,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:25","nodeType":"VariableDeclaration","scope":7098,"src":"22665:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":7077,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:25","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:25"},"scope":7685,"src":"22610:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7123,"nodeType":"Block","src":"23231:150:25","statements":[{"expression":{"id":7111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7106,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"23241:10:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7109,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7101,"src":"23261:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":7107,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:25","typeDescriptions":{}}},"id":7110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":7112,"nodeType":"ExpressionStatement","src":"23241:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7113,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"23281:10:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7101,"src":"23295:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7122,"nodeType":"IfStatement","src":"23277:98:25","trueBody":{"id":7121,"nodeType":"Block","src":"23302:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:25","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7101,"src":"23358:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7116,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"23323:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7120,"nodeType":"RevertStatement","src":"23316:48:25"}]}}]},"documentation":{"id":7099,"nodeType":"StructuredDocumentation","src":"22840:312:25","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7124,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:25","nodeType":"FunctionDefinition","parameters":{"id":7102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7101,"mutability":"mutable","name":"value","nameLocation":"23182:5:25","nodeType":"VariableDeclaration","scope":7124,"src":"23175:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7100,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:25"},"returnParameters":{"id":7105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7104,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:25","nodeType":"VariableDeclaration","scope":7124,"src":"23212:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":7103,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:25","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:25"},"scope":7685,"src":"23157:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7149,"nodeType":"Block","src":"23778:150:25","statements":[{"expression":{"id":7137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7132,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7130,"src":"23788:10:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"23808:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":7133,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:25","typeDescriptions":{}}},"id":7136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":7138,"nodeType":"ExpressionStatement","src":"23788:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7139,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7130,"src":"23828:10:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"23842:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7148,"nodeType":"IfStatement","src":"23824:98:25","trueBody":{"id":7147,"nodeType":"Block","src":"23849:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:25","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"23905:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7142,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"23870:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7146,"nodeType":"RevertStatement","src":"23863:48:25"}]}}]},"documentation":{"id":7125,"nodeType":"StructuredDocumentation","src":"23387:312:25","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7150,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:25","nodeType":"FunctionDefinition","parameters":{"id":7128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7127,"mutability":"mutable","name":"value","nameLocation":"23729:5:25","nodeType":"VariableDeclaration","scope":7150,"src":"23722:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7126,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:25"},"returnParameters":{"id":7131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7130,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:25","nodeType":"VariableDeclaration","scope":7150,"src":"23759:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":7129,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:25","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:25"},"scope":7685,"src":"23704:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7175,"nodeType":"Block","src":"24325:150:25","statements":[{"expression":{"id":7163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7158,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7156,"src":"24335:10:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7153,"src":"24355:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":7159,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:25","typeDescriptions":{}}},"id":7162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":7164,"nodeType":"ExpressionStatement","src":"24335:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7165,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7156,"src":"24375:10:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7153,"src":"24389:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7174,"nodeType":"IfStatement","src":"24371:98:25","trueBody":{"id":7173,"nodeType":"Block","src":"24396:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:25","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7153,"src":"24452:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7168,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24417:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7172,"nodeType":"RevertStatement","src":"24410:48:25"}]}}]},"documentation":{"id":7151,"nodeType":"StructuredDocumentation","src":"23934:312:25","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7176,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:25","nodeType":"FunctionDefinition","parameters":{"id":7154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7153,"mutability":"mutable","name":"value","nameLocation":"24276:5:25","nodeType":"VariableDeclaration","scope":7176,"src":"24269:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7152,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:25"},"returnParameters":{"id":7157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7156,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:25","nodeType":"VariableDeclaration","scope":7176,"src":"24306:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":7155,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:25","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:25"},"scope":7685,"src":"24251:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7201,"nodeType":"Block","src":"24872:150:25","statements":[{"expression":{"id":7189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7184,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7182,"src":"24882:10:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"24902:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":7185,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:25","typeDescriptions":{}}},"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":7190,"nodeType":"ExpressionStatement","src":"24882:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7191,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7182,"src":"24922:10:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"24936:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7200,"nodeType":"IfStatement","src":"24918:98:25","trueBody":{"id":7199,"nodeType":"Block","src":"24943:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:25","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"24999:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7194,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"24964:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7198,"nodeType":"RevertStatement","src":"24957:48:25"}]}}]},"documentation":{"id":7177,"nodeType":"StructuredDocumentation","src":"24481:312:25","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7202,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:25","nodeType":"FunctionDefinition","parameters":{"id":7180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7179,"mutability":"mutable","name":"value","nameLocation":"24823:5:25","nodeType":"VariableDeclaration","scope":7202,"src":"24816:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7178,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:25"},"returnParameters":{"id":7183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7182,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:25","nodeType":"VariableDeclaration","scope":7202,"src":"24853:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":7181,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:25","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:25"},"scope":7685,"src":"24798:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7227,"nodeType":"Block","src":"25419:150:25","statements":[{"expression":{"id":7215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7210,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7208,"src":"25429:10:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7205,"src":"25449:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":7211,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:25","typeDescriptions":{}}},"id":7214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":7216,"nodeType":"ExpressionStatement","src":"25429:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7217,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7208,"src":"25469:10:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7218,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7205,"src":"25483:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7226,"nodeType":"IfStatement","src":"25465:98:25","trueBody":{"id":7225,"nodeType":"Block","src":"25490:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:25","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7205,"src":"25546:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7220,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"25511:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7224,"nodeType":"RevertStatement","src":"25504:48:25"}]}}]},"documentation":{"id":7203,"nodeType":"StructuredDocumentation","src":"25028:312:25","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7228,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:25","nodeType":"FunctionDefinition","parameters":{"id":7206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7205,"mutability":"mutable","name":"value","nameLocation":"25370:5:25","nodeType":"VariableDeclaration","scope":7228,"src":"25363:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7204,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:25"},"returnParameters":{"id":7209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7208,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:25","nodeType":"VariableDeclaration","scope":7228,"src":"25400:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":7207,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:25","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:25"},"scope":7685,"src":"25345:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7253,"nodeType":"Block","src":"25966:150:25","statements":[{"expression":{"id":7241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7236,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"25976:10:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"25996:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":7237,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:25","typeDescriptions":{}}},"id":7240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":7242,"nodeType":"ExpressionStatement","src":"25976:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7243,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7234,"src":"26016:10:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"26030:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7252,"nodeType":"IfStatement","src":"26012:98:25","trueBody":{"id":7251,"nodeType":"Block","src":"26037:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:25","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"26093:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7246,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"26058:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7250,"nodeType":"RevertStatement","src":"26051:48:25"}]}}]},"documentation":{"id":7229,"nodeType":"StructuredDocumentation","src":"25575:312:25","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7254,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:25","nodeType":"FunctionDefinition","parameters":{"id":7232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7231,"mutability":"mutable","name":"value","nameLocation":"25917:5:25","nodeType":"VariableDeclaration","scope":7254,"src":"25910:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7230,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:25"},"returnParameters":{"id":7235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7234,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:25","nodeType":"VariableDeclaration","scope":7254,"src":"25947:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":7233,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:25","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:25"},"scope":7685,"src":"25892:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7279,"nodeType":"Block","src":"26513:150:25","statements":[{"expression":{"id":7267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7262,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"26523:10:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7257,"src":"26543:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":7263,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:25","typeDescriptions":{}}},"id":7266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":7268,"nodeType":"ExpressionStatement","src":"26523:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7269,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7260,"src":"26563:10:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7257,"src":"26577:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7278,"nodeType":"IfStatement","src":"26559:98:25","trueBody":{"id":7277,"nodeType":"Block","src":"26584:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:25","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7257,"src":"26640:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7272,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"26605:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7276,"nodeType":"RevertStatement","src":"26598:48:25"}]}}]},"documentation":{"id":7255,"nodeType":"StructuredDocumentation","src":"26122:312:25","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7280,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:25","nodeType":"FunctionDefinition","parameters":{"id":7258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7257,"mutability":"mutable","name":"value","nameLocation":"26464:5:25","nodeType":"VariableDeclaration","scope":7280,"src":"26457:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7256,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:25"},"returnParameters":{"id":7261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7260,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:25","nodeType":"VariableDeclaration","scope":7280,"src":"26494:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":7259,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:25","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:25"},"scope":7685,"src":"26439:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7305,"nodeType":"Block","src":"27060:150:25","statements":[{"expression":{"id":7293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7288,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7286,"src":"27070:10:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7283,"src":"27090:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":7289,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:25","typeDescriptions":{}}},"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":7294,"nodeType":"ExpressionStatement","src":"27070:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7295,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7286,"src":"27110:10:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7283,"src":"27124:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7304,"nodeType":"IfStatement","src":"27106:98:25","trueBody":{"id":7303,"nodeType":"Block","src":"27131:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:25","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7283,"src":"27187:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7298,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"27152:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7302,"nodeType":"RevertStatement","src":"27145:48:25"}]}}]},"documentation":{"id":7281,"nodeType":"StructuredDocumentation","src":"26669:312:25","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7306,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:25","nodeType":"FunctionDefinition","parameters":{"id":7284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7283,"mutability":"mutable","name":"value","nameLocation":"27011:5:25","nodeType":"VariableDeclaration","scope":7306,"src":"27004:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7282,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:25"},"returnParameters":{"id":7287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7286,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:25","nodeType":"VariableDeclaration","scope":7306,"src":"27041:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":7285,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:25","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:25"},"scope":7685,"src":"26986:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7331,"nodeType":"Block","src":"27607:150:25","statements":[{"expression":{"id":7319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7314,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7312,"src":"27617:10:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7309,"src":"27637:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":7315,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:25","typeDescriptions":{}}},"id":7318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":7320,"nodeType":"ExpressionStatement","src":"27617:26:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7321,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7312,"src":"27657:10:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7309,"src":"27671:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7330,"nodeType":"IfStatement","src":"27653:98:25","trueBody":{"id":7329,"nodeType":"Block","src":"27678:73:25","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:25","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7309,"src":"27734:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7324,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"27699:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7328,"nodeType":"RevertStatement","src":"27692:48:25"}]}}]},"documentation":{"id":7307,"nodeType":"StructuredDocumentation","src":"27216:312:25","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7332,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:25","nodeType":"FunctionDefinition","parameters":{"id":7310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7309,"mutability":"mutable","name":"value","nameLocation":"27558:5:25","nodeType":"VariableDeclaration","scope":7332,"src":"27551:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7308,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:25"},"returnParameters":{"id":7313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7312,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:25","nodeType":"VariableDeclaration","scope":7332,"src":"27588:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":7311,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:25","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:25"},"scope":7685,"src":"27533:224:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7357,"nodeType":"Block","src":"28147:148:25","statements":[{"expression":{"id":7345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7340,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"28157:10:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7335,"src":"28176:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7341,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:25","typeDescriptions":{}}},"id":7344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7346,"nodeType":"ExpressionStatement","src":"28157:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7347,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"28196:10:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7335,"src":"28210:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7356,"nodeType":"IfStatement","src":"28192:97:25","trueBody":{"id":7355,"nodeType":"Block","src":"28217:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:25","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7335,"src":"28272:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7350,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"28238:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7354,"nodeType":"RevertStatement","src":"28231:47:25"}]}}]},"documentation":{"id":7333,"nodeType":"StructuredDocumentation","src":"27763:307:25","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7358,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:25","nodeType":"FunctionDefinition","parameters":{"id":7336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7335,"mutability":"mutable","name":"value","nameLocation":"28099:5:25","nodeType":"VariableDeclaration","scope":7358,"src":"28092:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7334,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:25"},"returnParameters":{"id":7339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7338,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:25","nodeType":"VariableDeclaration","scope":7358,"src":"28129:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7337,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:25","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:25"},"scope":7685,"src":"28075:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7383,"nodeType":"Block","src":"28685:148:25","statements":[{"expression":{"id":7371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7366,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7364,"src":"28695:10:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7361,"src":"28714:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7367,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:25","typeDescriptions":{}}},"id":7370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7372,"nodeType":"ExpressionStatement","src":"28695:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7373,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7364,"src":"28734:10:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7361,"src":"28748:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7382,"nodeType":"IfStatement","src":"28730:97:25","trueBody":{"id":7381,"nodeType":"Block","src":"28755:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:25","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7361,"src":"28810:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7376,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"28776:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7380,"nodeType":"RevertStatement","src":"28769:47:25"}]}}]},"documentation":{"id":7359,"nodeType":"StructuredDocumentation","src":"28301:307:25","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7384,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:25","nodeType":"FunctionDefinition","parameters":{"id":7362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7361,"mutability":"mutable","name":"value","nameLocation":"28637:5:25","nodeType":"VariableDeclaration","scope":7384,"src":"28630:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7360,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:25"},"returnParameters":{"id":7365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7364,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:25","nodeType":"VariableDeclaration","scope":7384,"src":"28667:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7363,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:25","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:25"},"scope":7685,"src":"28613:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7409,"nodeType":"Block","src":"29223:148:25","statements":[{"expression":{"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7392,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7390,"src":"29233:10:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7387,"src":"29252:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7393,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:25","typeDescriptions":{}}},"id":7396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7398,"nodeType":"ExpressionStatement","src":"29233:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7399,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7390,"src":"29272:10:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7400,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7387,"src":"29286:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7408,"nodeType":"IfStatement","src":"29268:97:25","trueBody":{"id":7407,"nodeType":"Block","src":"29293:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:25","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7387,"src":"29348:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7402,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"29314:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7406,"nodeType":"RevertStatement","src":"29307:47:25"}]}}]},"documentation":{"id":7385,"nodeType":"StructuredDocumentation","src":"28839:307:25","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7410,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:25","nodeType":"FunctionDefinition","parameters":{"id":7388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7387,"mutability":"mutable","name":"value","nameLocation":"29175:5:25","nodeType":"VariableDeclaration","scope":7410,"src":"29168:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7386,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:25"},"returnParameters":{"id":7391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7390,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:25","nodeType":"VariableDeclaration","scope":7410,"src":"29205:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7389,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:25","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:25"},"scope":7685,"src":"29151:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7435,"nodeType":"Block","src":"29761:148:25","statements":[{"expression":{"id":7423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7418,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7416,"src":"29771:10:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7413,"src":"29790:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7419,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:25","typeDescriptions":{}}},"id":7422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7424,"nodeType":"ExpressionStatement","src":"29771:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7425,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7416,"src":"29810:10:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7413,"src":"29824:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7434,"nodeType":"IfStatement","src":"29806:97:25","trueBody":{"id":7433,"nodeType":"Block","src":"29831:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:25","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7413,"src":"29886:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7428,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"29852:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7432,"nodeType":"RevertStatement","src":"29845:47:25"}]}}]},"documentation":{"id":7411,"nodeType":"StructuredDocumentation","src":"29377:307:25","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7436,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:25","nodeType":"FunctionDefinition","parameters":{"id":7414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7413,"mutability":"mutable","name":"value","nameLocation":"29713:5:25","nodeType":"VariableDeclaration","scope":7436,"src":"29706:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7412,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:25"},"returnParameters":{"id":7417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7416,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:25","nodeType":"VariableDeclaration","scope":7436,"src":"29743:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7415,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:25","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:25"},"scope":7685,"src":"29689:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7461,"nodeType":"Block","src":"30299:148:25","statements":[{"expression":{"id":7449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7444,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7442,"src":"30309:10:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7439,"src":"30328:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7445,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:25","typeDescriptions":{}}},"id":7448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7450,"nodeType":"ExpressionStatement","src":"30309:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7451,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7442,"src":"30348:10:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7439,"src":"30362:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7460,"nodeType":"IfStatement","src":"30344:97:25","trueBody":{"id":7459,"nodeType":"Block","src":"30369:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:25","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7456,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7439,"src":"30424:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7454,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"30390:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7458,"nodeType":"RevertStatement","src":"30383:47:25"}]}}]},"documentation":{"id":7437,"nodeType":"StructuredDocumentation","src":"29915:307:25","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7462,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:25","nodeType":"FunctionDefinition","parameters":{"id":7440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7439,"mutability":"mutable","name":"value","nameLocation":"30251:5:25","nodeType":"VariableDeclaration","scope":7462,"src":"30244:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7438,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:25"},"returnParameters":{"id":7443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7442,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:25","nodeType":"VariableDeclaration","scope":7462,"src":"30281:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7441,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:25","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:25"},"scope":7685,"src":"30227:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7487,"nodeType":"Block","src":"30837:148:25","statements":[{"expression":{"id":7475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7470,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"30847:10:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7465,"src":"30866:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7471,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:25","typeDescriptions":{}}},"id":7474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7476,"nodeType":"ExpressionStatement","src":"30847:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7477,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7468,"src":"30886:10:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7465,"src":"30900:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7486,"nodeType":"IfStatement","src":"30882:97:25","trueBody":{"id":7485,"nodeType":"Block","src":"30907:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:25","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7465,"src":"30962:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7480,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"30928:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7484,"nodeType":"RevertStatement","src":"30921:47:25"}]}}]},"documentation":{"id":7463,"nodeType":"StructuredDocumentation","src":"30453:307:25","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7488,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:25","nodeType":"FunctionDefinition","parameters":{"id":7466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7465,"mutability":"mutable","name":"value","nameLocation":"30789:5:25","nodeType":"VariableDeclaration","scope":7488,"src":"30782:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7464,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:25"},"returnParameters":{"id":7469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7468,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:25","nodeType":"VariableDeclaration","scope":7488,"src":"30819:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7467,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:25","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:25"},"scope":7685,"src":"30765:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7513,"nodeType":"Block","src":"31375:148:25","statements":[{"expression":{"id":7501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7496,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7494,"src":"31385:10:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7491,"src":"31404:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7497,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:25","typeDescriptions":{}}},"id":7500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7502,"nodeType":"ExpressionStatement","src":"31385:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7503,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7494,"src":"31424:10:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7491,"src":"31438:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7512,"nodeType":"IfStatement","src":"31420:97:25","trueBody":{"id":7511,"nodeType":"Block","src":"31445:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:25","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7491,"src":"31500:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7506,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"31466:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7510,"nodeType":"RevertStatement","src":"31459:47:25"}]}}]},"documentation":{"id":7489,"nodeType":"StructuredDocumentation","src":"30991:307:25","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7514,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:25","nodeType":"FunctionDefinition","parameters":{"id":7492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7491,"mutability":"mutable","name":"value","nameLocation":"31327:5:25","nodeType":"VariableDeclaration","scope":7514,"src":"31320:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7490,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:25"},"returnParameters":{"id":7495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7494,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:25","nodeType":"VariableDeclaration","scope":7514,"src":"31357:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7493,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:25","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:25"},"scope":7685,"src":"31303:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7539,"nodeType":"Block","src":"31913:148:25","statements":[{"expression":{"id":7527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7522,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7520,"src":"31923:10:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7517,"src":"31942:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7523,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:25","typeDescriptions":{}}},"id":7526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7528,"nodeType":"ExpressionStatement","src":"31923:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7529,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7520,"src":"31962:10:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7517,"src":"31976:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7538,"nodeType":"IfStatement","src":"31958:97:25","trueBody":{"id":7537,"nodeType":"Block","src":"31983:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:25","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7517,"src":"32038:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7532,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"32004:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7536,"nodeType":"RevertStatement","src":"31997:47:25"}]}}]},"documentation":{"id":7515,"nodeType":"StructuredDocumentation","src":"31529:307:25","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7540,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:25","nodeType":"FunctionDefinition","parameters":{"id":7518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7517,"mutability":"mutable","name":"value","nameLocation":"31865:5:25","nodeType":"VariableDeclaration","scope":7540,"src":"31858:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7516,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:25"},"returnParameters":{"id":7521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7520,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:25","nodeType":"VariableDeclaration","scope":7540,"src":"31895:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7519,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:25","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:25"},"scope":7685,"src":"31841:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7565,"nodeType":"Block","src":"32451:148:25","statements":[{"expression":{"id":7553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7548,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7546,"src":"32461:10:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"32480:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7549,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:25","typeDescriptions":{}}},"id":7552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7554,"nodeType":"ExpressionStatement","src":"32461:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7555,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7546,"src":"32500:10:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"32514:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7564,"nodeType":"IfStatement","src":"32496:97:25","trueBody":{"id":7563,"nodeType":"Block","src":"32521:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:25","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7543,"src":"32576:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7558,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"32542:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7562,"nodeType":"RevertStatement","src":"32535:47:25"}]}}]},"documentation":{"id":7541,"nodeType":"StructuredDocumentation","src":"32067:307:25","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7566,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:25","nodeType":"FunctionDefinition","parameters":{"id":7544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7543,"mutability":"mutable","name":"value","nameLocation":"32403:5:25","nodeType":"VariableDeclaration","scope":7566,"src":"32396:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7542,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:25"},"returnParameters":{"id":7547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7546,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:25","nodeType":"VariableDeclaration","scope":7566,"src":"32433:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7545,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:25","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:25"},"scope":7685,"src":"32379:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7591,"nodeType":"Block","src":"32989:148:25","statements":[{"expression":{"id":7579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7574,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7572,"src":"32999:10:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"33018:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7575,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:25","typeDescriptions":{}}},"id":7578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7580,"nodeType":"ExpressionStatement","src":"32999:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7581,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7572,"src":"33038:10:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"33052:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7590,"nodeType":"IfStatement","src":"33034:97:25","trueBody":{"id":7589,"nodeType":"Block","src":"33059:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:25","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7569,"src":"33114:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7584,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"33080:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7588,"nodeType":"RevertStatement","src":"33073:47:25"}]}}]},"documentation":{"id":7567,"nodeType":"StructuredDocumentation","src":"32605:307:25","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7592,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:25","nodeType":"FunctionDefinition","parameters":{"id":7570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7569,"mutability":"mutable","name":"value","nameLocation":"32941:5:25","nodeType":"VariableDeclaration","scope":7592,"src":"32934:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7568,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:25"},"returnParameters":{"id":7573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7572,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:25","nodeType":"VariableDeclaration","scope":7592,"src":"32971:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7571,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:25","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:25"},"scope":7685,"src":"32917:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7617,"nodeType":"Block","src":"33527:148:25","statements":[{"expression":{"id":7605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7600,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"33537:10:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"33556:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7601,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:25","typeDescriptions":{}}},"id":7604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7606,"nodeType":"ExpressionStatement","src":"33537:25:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7607,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7598,"src":"33576:10:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"33590:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7616,"nodeType":"IfStatement","src":"33572:97:25","trueBody":{"id":7615,"nodeType":"Block","src":"33597:72:25","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:25","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"33652:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7610,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"33618:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7614,"nodeType":"RevertStatement","src":"33611:47:25"}]}}]},"documentation":{"id":7593,"nodeType":"StructuredDocumentation","src":"33143:307:25","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7618,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:25","nodeType":"FunctionDefinition","parameters":{"id":7596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7595,"mutability":"mutable","name":"value","nameLocation":"33479:5:25","nodeType":"VariableDeclaration","scope":7618,"src":"33472:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7594,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:25"},"returnParameters":{"id":7599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7598,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:25","nodeType":"VariableDeclaration","scope":7618,"src":"33509:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7597,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:25","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:25"},"scope":7685,"src":"33455:220:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7643,"nodeType":"Block","src":"34058:146:25","statements":[{"expression":{"id":7631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7626,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7624,"src":"34068:10:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7621,"src":"34086:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7627,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:25","typeDescriptions":{}}},"id":7630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7632,"nodeType":"ExpressionStatement","src":"34068:24:25"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7633,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7624,"src":"34106:10:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7621,"src":"34120:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7642,"nodeType":"IfStatement","src":"34102:96:25","trueBody":{"id":7641,"nodeType":"Block","src":"34127:71:25","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:25","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7621,"src":"34181:5:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7636,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5942,"src":"34148:29:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7640,"nodeType":"RevertStatement","src":"34141:46:25"}]}}]},"documentation":{"id":7619,"nodeType":"StructuredDocumentation","src":"33681:302:25","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7644,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:25","nodeType":"FunctionDefinition","parameters":{"id":7622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7621,"mutability":"mutable","name":"value","nameLocation":"34011:5:25","nodeType":"VariableDeclaration","scope":7644,"src":"34004:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7620,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:25"},"returnParameters":{"id":7625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7624,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:25","nodeType":"VariableDeclaration","scope":7644,"src":"34041:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7623,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:25","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:25"},"scope":7685,"src":"33988:216:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7673,"nodeType":"Block","src":"34444:250:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7647,"src":"34557:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7656,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:25","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7655,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:25","memberName":"max","nodeType":"MemberAccess","src":"34573:16:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7653,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:25","typeDescriptions":{}}},"id":7660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7667,"nodeType":"IfStatement","src":"34553:105:25","trueBody":{"id":7666,"nodeType":"Block","src":"34592:66:25","statements":[{"errorCall":{"arguments":[{"id":7663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7647,"src":"34641:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7662,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"34613:27:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7665,"nodeType":"RevertStatement","src":"34606:41:25"}]}},{"expression":{"arguments":[{"id":7670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7647,"src":"34681:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:25","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7668,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:25","typeDescriptions":{}}},"id":7671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7651,"id":7672,"nodeType":"Return","src":"34667:20:25"}]},"documentation":{"id":7645,"nodeType":"StructuredDocumentation","src":"34210:165:25","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7674,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:25","nodeType":"FunctionDefinition","parameters":{"id":7648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7647,"mutability":"mutable","name":"value","nameLocation":"34406:5:25","nodeType":"VariableDeclaration","scope":7674,"src":"34398:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7646,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:25"},"returnParameters":{"id":7651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7674,"src":"34436:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7649,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:25"},"scope":7685,"src":"34380:314:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7683,"nodeType":"Block","src":"34853:87:25","statements":[{"AST":{"nativeSrc":"34888:46:25","nodeType":"YulBlock","src":"34888:46:25","statements":[{"nativeSrc":"34902:22:25","nodeType":"YulAssignment","src":"34902:22:25","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:25","nodeType":"YulIdentifier","src":"34921:1:25"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:25","nodeType":"YulIdentifier","src":"34914:6:25"},"nativeSrc":"34914:9:25","nodeType":"YulFunctionCall","src":"34914:9:25"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:25","nodeType":"YulIdentifier","src":"34907:6:25"},"nativeSrc":"34907:17:25","nodeType":"YulFunctionCall","src":"34907:17:25"},"variableNames":[{"name":"u","nativeSrc":"34902:1:25","nodeType":"YulIdentifier","src":"34902:1:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7677,"isOffset":false,"isSlot":false,"src":"34921:1:25","valueSize":1},{"declaration":7680,"isOffset":false,"isSlot":false,"src":"34902:1:25","valueSize":1}],"flags":["memory-safe"],"id":7682,"nodeType":"InlineAssembly","src":"34863:71:25"}]},"documentation":{"id":7675,"nodeType":"StructuredDocumentation","src":"34700:90:25","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7684,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:25","nodeType":"FunctionDefinition","parameters":{"id":7678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7677,"mutability":"mutable","name":"b","nameLocation":"34816:1:25","nodeType":"VariableDeclaration","scope":7684,"src":"34811:6:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7676,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:25"},"returnParameters":{"id":7681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7680,"mutability":"mutable","name":"u","nameLocation":"34850:1:25","nodeType":"VariableDeclaration","scope":7684,"src":"34842:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7679,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:25"},"scope":7685,"src":"34795:145:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7686,"src":"769:34173:25","usedErrors":[5930,5935,5942,5947],"usedEvents":[]}],"src":"192:34751:25"},"id":25},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7685],"SignedMath":[7829]},"id":7830,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7687,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7689,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7830,"sourceUnit":7686,"src":"135:40:26","symbolAliases":[{"foreign":{"id":7688,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"143:8:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7690,"nodeType":"StructuredDocumentation","src":"177:80:26","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7829,"linearizedBaseContracts":[7829],"name":"SignedMath","nameLocation":"266:10:26","nodeType":"ContractDefinition","nodes":[{"body":{"id":7719,"nodeType":"Block","src":"746:215:26","statements":[{"id":7718,"nodeType":"UncheckedBlock","src":"756:199:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7702,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"894:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7703,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7695,"src":"900:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7704,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"904:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7706,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7711,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7693,"src":"932:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7709,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7685,"src":"916:8:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7685_$","typeString":"type(library SafeCast)"}},"id":7710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7684,"src":"916:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7707,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:26","typeDescriptions":{}}},"id":7713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7715,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7701,"id":7717,"nodeType":"Return","src":"887:57:26"}]}]},"documentation":{"id":7691,"nodeType":"StructuredDocumentation","src":"283:374:26","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7720,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:26","nodeType":"FunctionDefinition","parameters":{"id":7698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7693,"mutability":"mutable","name":"condition","nameLocation":"684:9:26","nodeType":"VariableDeclaration","scope":7720,"src":"679:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7692,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7695,"mutability":"mutable","name":"a","nameLocation":"702:1:26","nodeType":"VariableDeclaration","scope":7720,"src":"695:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7694,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7697,"mutability":"mutable","name":"b","nameLocation":"712:1:26","nodeType":"VariableDeclaration","scope":7720,"src":"705:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7696,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:26"},"returnParameters":{"id":7701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7720,"src":"738:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7699,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:26"},"scope":7829,"src":"662:299:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7738,"nodeType":"Block","src":"1102:44:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7731,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7723,"src":"1127:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7732,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7725,"src":"1131:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7734,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7723,"src":"1134:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7735,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7725,"src":"1137:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7730,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7720,"src":"1119:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7729,"id":7737,"nodeType":"Return","src":"1112:27:26"}]},"documentation":{"id":7721,"nodeType":"StructuredDocumentation","src":"967:66:26","text":" @dev Returns the largest of two signed numbers."},"id":7739,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:26","nodeType":"FunctionDefinition","parameters":{"id":7726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7723,"mutability":"mutable","name":"a","nameLocation":"1058:1:26","nodeType":"VariableDeclaration","scope":7739,"src":"1051:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7722,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7725,"mutability":"mutable","name":"b","nameLocation":"1068:1:26","nodeType":"VariableDeclaration","scope":7739,"src":"1061:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7724,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:26"},"returnParameters":{"id":7729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7739,"src":"1094:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7727,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:26"},"scope":7829,"src":"1038:108:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7757,"nodeType":"Block","src":"1288:44:26","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7750,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7742,"src":"1313:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7751,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7744,"src":"1317:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7753,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7742,"src":"1320:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7754,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7744,"src":"1323:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7749,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7720,"src":"1305:7:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7748,"id":7756,"nodeType":"Return","src":"1298:27:26"}]},"documentation":{"id":7740,"nodeType":"StructuredDocumentation","src":"1152:67:26","text":" @dev Returns the smallest of two signed numbers."},"id":7758,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:26","nodeType":"FunctionDefinition","parameters":{"id":7745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7742,"mutability":"mutable","name":"a","nameLocation":"1244:1:26","nodeType":"VariableDeclaration","scope":7758,"src":"1237:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7741,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7744,"mutability":"mutable","name":"b","nameLocation":"1254:1:26","nodeType":"VariableDeclaration","scope":7758,"src":"1247:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7743,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:26"},"returnParameters":{"id":7748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7758,"src":"1280:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7746,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:26"},"scope":7829,"src":"1224:108:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7801,"nodeType":"Block","src":"1537:162:26","statements":[{"assignments":[7769],"declarations":[{"constant":false,"id":7769,"mutability":"mutable","name":"x","nameLocation":"1606:1:26","nodeType":"VariableDeclaration","scope":7801,"src":"1599:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7768,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7782,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7770,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7761,"src":"1611:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7771,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7763,"src":"1615:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7773,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7774,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7761,"src":"1622:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7775,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7763,"src":"1626:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7777,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7780,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:26"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7783,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"1651:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7788,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"1671:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7786,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:26","typeDescriptions":{}}},"id":7789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7784,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:26","typeDescriptions":{}}},"id":7792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7793,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7761,"src":"1685:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7794,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7763,"src":"1689:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7796,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7798,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7767,"id":7800,"nodeType":"Return","src":"1644:48:26"}]},"documentation":{"id":7759,"nodeType":"StructuredDocumentation","src":"1338:126:26","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7802,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:26","nodeType":"FunctionDefinition","parameters":{"id":7764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7761,"mutability":"mutable","name":"a","nameLocation":"1493:1:26","nodeType":"VariableDeclaration","scope":7802,"src":"1486:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7760,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7763,"mutability":"mutable","name":"b","nameLocation":"1503:1:26","nodeType":"VariableDeclaration","scope":7802,"src":"1496:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7762,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:26"},"returnParameters":{"id":7767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7802,"src":"1529:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7765,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:26"},"scope":7829,"src":"1469:230:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7827,"nodeType":"Block","src":"1843:767:26","statements":[{"id":7826,"nodeType":"UncheckedBlock","src":"1853:751:26","statements":[{"assignments":[7811],"declarations":[{"constant":false,"id":7811,"mutability":"mutable","name":"mask","nameLocation":"2424:4:26","nodeType":"VariableDeclaration","scope":7826,"src":"2417:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7810,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7815,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7812,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"2431:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:26"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7818,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7805,"src":"2576:1:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7819,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7811,"src":"2580:4:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7821,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7822,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7811,"src":"2588:4:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7816,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:26","typeDescriptions":{}}},"id":7824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7809,"id":7825,"nodeType":"Return","src":"2560:33:26"}]}]},"documentation":{"id":7803,"nodeType":"StructuredDocumentation","src":"1705:78:26","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7828,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:26","nodeType":"FunctionDefinition","parameters":{"id":7806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7805,"mutability":"mutable","name":"n","nameLocation":"1808:1:26","nodeType":"VariableDeclaration","scope":7828,"src":"1801:8:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7804,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:26"},"returnParameters":{"id":7809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7828,"src":"1834:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7807,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:26"},"scope":7829,"src":"1788:822:26","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7830,"src":"258:2354:26","usedErrors":[],"usedEvents":[]}],"src":"109:2504:26"},"id":26},"contracts/NigerianStockFactory.sol":{"ast":{"absolutePath":"contracts/NigerianStockFactory.sol","exportedSymbols":{"AccessControl":[296],"Context":[1562],"ECDSA":[3950],"EIP712":[4177],"ERC165":[4287],"ERC20":[1204],"ERC20Pausable":[1316],"ERC20Permit":[1470],"IAccessControl":[379],"IERC165":[4299],"IERC20":[1282],"IERC20Errors":[594],"IERC20Metadata":[1496],"IERC20Permit":[1532],"NigerianStockFactory":[8347],"NigerianStockToken":[8894],"Nonces":[1630],"Ownable":[527],"Pausable":[1790],"ReentrancyGuard":[1859]},"id":8348,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7831,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:27"},{"absolutePath":"contracts/NigerianStockToken.sol","file":"./NigerianStockToken.sol","id":7832,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8348,"sourceUnit":8895,"src":"58:34:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7833,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8348,"sourceUnit":528,"src":"93:52:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":7834,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8348,"sourceUnit":1860,"src":"146:59:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7836,"name":"Ownable","nameLocations":["366:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"366:7:27"},"id":7837,"nodeType":"InheritanceSpecifier","src":"366:7:27"},{"baseName":{"id":7838,"name":"ReentrancyGuard","nameLocations":["375:15:27"],"nodeType":"IdentifierPath","referencedDeclaration":1859,"src":"375:15:27"},"id":7839,"nodeType":"InheritanceSpecifier","src":"375:15:27"}],"canonicalName":"NigerianStockFactory","contractDependencies":[8894],"contractKind":"contract","documentation":{"id":7835,"nodeType":"StructuredDocumentation","src":"207:125:27","text":" @title NigerianStockFactory\n @dev Factory contract for deploying Nigerian Stock Exchange tokens on Bitfinity EVM"},"fullyImplemented":true,"id":8347,"linearizedBaseContracts":[8347,1859,527,1562],"name":"NigerianStockFactory","nameLocation":"342:20:27","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"8e445e75","id":7843,"mutability":"mutable","name":"stockTokens","nameLocation":"462:11:27","nodeType":"VariableDeclaration","scope":8347,"src":"428:45:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string => address)"},"typeName":{"id":7842,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7840,"name":"string","nodeType":"ElementaryTypeName","src":"436:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"428:26:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7841,"name":"address","nodeType":"ElementaryTypeName","src":"446:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"f1dc8c8b","id":7847,"mutability":"mutable","name":"isStockToken","nameLocation":"511:12:27","nodeType":"VariableDeclaration","scope":8347,"src":"479:44:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":7846,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7844,"name":"address","nodeType":"ElementaryTypeName","src":"487:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"479:24:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7845,"name":"bool","nodeType":"ElementaryTypeName","src":"498:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"634282af","id":7850,"mutability":"mutable","name":"allTokens","nameLocation":"546:9:27","nodeType":"VariableDeclaration","scope":8347,"src":"529:26:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":7848,"name":"address","nodeType":"ElementaryTypeName","src":"529:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7849,"nodeType":"ArrayTypeName","src":"529:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"anonymous":false,"eventSelector":"94388f0c0d4b29e278b2169cc87c7693bdfab9afa4434111c9f0952076b83c3e","id":7862,"name":"StockTokenDeployed","nameLocation":"586:18:27","nodeType":"EventDefinition","parameters":{"id":7861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7852,"indexed":true,"mutability":"mutable","name":"stockSymbol","nameLocation":"629:11:27","nodeType":"VariableDeclaration","scope":7862,"src":"614:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7851,"name":"string","nodeType":"ElementaryTypeName","src":"614:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7854,"indexed":true,"mutability":"mutable","name":"tokenAddress","nameLocation":"666:12:27","nodeType":"VariableDeclaration","scope":7862,"src":"650:28:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7853,"name":"address","nodeType":"ElementaryTypeName","src":"650:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7856,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"695:4:27","nodeType":"VariableDeclaration","scope":7862,"src":"688:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7855,"name":"string","nodeType":"ElementaryTypeName","src":"688:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7858,"indexed":false,"mutability":"mutable","name":"companyName","nameLocation":"716:11:27","nodeType":"VariableDeclaration","scope":7862,"src":"709:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7857,"name":"string","nodeType":"ElementaryTypeName","src":"709:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7860,"indexed":false,"mutability":"mutable","name":"maxSupply","nameLocation":"745:9:27","nodeType":"VariableDeclaration","scope":7862,"src":"737:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7859,"name":"uint256","nodeType":"ElementaryTypeName","src":"737:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"604:156:27"},"src":"580:181:27"},{"anonymous":false,"eventSelector":"e1dfa83513a4b65c296bc64d8a68945cb723d798739225012d7167dbb2d6e3fc","id":7870,"name":"TokenUpdated","nameLocation":"777:12:27","nodeType":"EventDefinition","parameters":{"id":7869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7864,"indexed":true,"mutability":"mutable","name":"stockSymbol","nameLocation":"805:11:27","nodeType":"VariableDeclaration","scope":7870,"src":"790:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7863,"name":"string","nodeType":"ElementaryTypeName","src":"790:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7866,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"834:10:27","nodeType":"VariableDeclaration","scope":7870,"src":"818:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7865,"name":"address","nodeType":"ElementaryTypeName","src":"818:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7868,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"862:10:27","nodeType":"VariableDeclaration","scope":7870,"src":"846:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7867,"name":"address","nodeType":"ElementaryTypeName","src":"846:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"789:84:27"},"src":"771:103:27"},{"body":{"id":7877,"nodeType":"Block","src":"914:2:27","statements":[]},"id":7878,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":7873,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"902:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"906:6:27","memberName":"sender","nodeType":"MemberAccess","src":"902:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7875,"kind":"baseConstructorSpecifier","modifierName":{"id":7872,"name":"Ownable","nameLocations":["894:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":527,"src":"894:7:27"},"nodeType":"ModifierInvocation","src":"894:19:27"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7871,"nodeType":"ParameterList","parameters":[],"src":"891:2:27"},"returnParameters":{"id":7876,"nodeType":"ParameterList","parameters":[],"src":"914:0:27"},"scope":8347,"src":"880:36:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7985,"nodeType":"Block","src":"1565:862:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7905,"name":"_stockSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"1589:12:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1583:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7903,"name":"bytes","nodeType":"ElementaryTypeName","src":"1583:5:27","typeDescriptions":{}}},"id":7906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1583:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1603:6:27","memberName":"length","nodeType":"MemberAccess","src":"1583:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1612:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1583:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53746f636b2073796d626f6c2063616e6e6f7420626520656d707479","id":7910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1615:30:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_25738101cc12252055b183d28efe8e24d4cbb6e99569f3cf453f32945ed83746","typeString":"literal_string \"Stock symbol cannot be empty\""},"value":"Stock symbol cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25738101cc12252055b183d28efe8e24d4cbb6e99569f3cf453f32945ed83746","typeString":"literal_string \"Stock symbol cannot be empty\""}],"id":7902,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1575:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1575:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7912,"nodeType":"ExpressionStatement","src":"1575:71:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7914,"name":"stockTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7843,"src":"1664:11:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":7916,"indexExpression":{"id":7915,"name":"_stockSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"1676:12:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1664:25:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":7919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1701:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1693:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7917,"name":"address","nodeType":"ElementaryTypeName","src":"1693:7:27","typeDescriptions":{}}},"id":7920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1693:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1664:39:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53746f636b20746f6b656e20616c726561647920657869737473","id":7922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1705:28:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_2379fd97128171c529528a32c8946e7ef3f80d9231b442f98924a78411a3fb7c","typeString":"literal_string \"Stock token already exists\""},"value":"Stock token already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2379fd97128171c529528a32c8946e7ef3f80d9231b442f98924a78411a3fb7c","typeString":"literal_string \"Stock token already exists\""}],"id":7913,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1656:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:78:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7924,"nodeType":"ExpressionStatement","src":"1656:78:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7926,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7893,"src":"1752:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1770:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1762:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7927,"name":"address","nodeType":"ElementaryTypeName","src":"1762:7:27","typeDescriptions":{}}},"id":7930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1762:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1752:20:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41646d696e2063616e6e6f74206265207a65726f2061646472657373","id":7932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1774:30:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24","typeString":"literal_string \"Admin cannot be zero address\""},"value":"Admin cannot be zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24","typeString":"literal_string \"Admin cannot be zero address\""}],"id":7925,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1744:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1744:61:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7934,"nodeType":"ExpressionStatement","src":"1744:61:27"},{"assignments":[7937],"declarations":[{"constant":false,"id":7937,"mutability":"mutable","name":"newToken","nameLocation":"1863:8:27","nodeType":"VariableDeclaration","scope":7985,"src":"1844:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_NigerianStockToken_$8894","typeString":"contract NigerianStockToken"},"typeName":{"id":7936,"nodeType":"UserDefinedTypeName","pathNode":{"id":7935,"name":"NigerianStockToken","nameLocations":["1844:18:27"],"nodeType":"IdentifierPath","referencedDeclaration":8894,"src":"1844:18:27"},"referencedDeclaration":8894,"src":"1844:18:27","typeDescriptions":{"typeIdentifier":"t_contract$_NigerianStockToken_$8894","typeString":"contract NigerianStockToken"}},"visibility":"internal"}],"id":7949,"initialValue":{"arguments":[{"id":7941,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7881,"src":"1910:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7942,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7883,"src":"1929:7:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7943,"name":"_stockSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"1950:12:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7944,"name":"_companyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7887,"src":"1976:12:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7945,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7889,"src":"2002:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7946,"name":"_initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7891,"src":"2026:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7947,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7893,"src":"2054:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"1874:22:27","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_contract$_NigerianStockToken_$8894_$","typeString":"function (string memory,string memory,string memory,string memory,uint256,uint256,address) returns (contract NigerianStockToken)"},"typeName":{"id":7939,"nodeType":"UserDefinedTypeName","pathNode":{"id":7938,"name":"NigerianStockToken","nameLocations":["1878:18:27"],"nodeType":"IdentifierPath","referencedDeclaration":8894,"src":"1878:18:27"},"referencedDeclaration":8894,"src":"1878:18:27","typeDescriptions":{"typeIdentifier":"t_contract$_NigerianStockToken_$8894","typeString":"contract NigerianStockToken"}}},"id":7948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1874:196:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_NigerianStockToken_$8894","typeString":"contract NigerianStockToken"}},"nodeType":"VariableDeclarationStatement","src":"1844:226:27"},{"assignments":[7951],"declarations":[{"constant":false,"id":7951,"mutability":"mutable","name":"tokenAddress","nameLocation":"2089:12:27","nodeType":"VariableDeclaration","scope":7985,"src":"2081:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7950,"name":"address","nodeType":"ElementaryTypeName","src":"2081:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7956,"initialValue":{"arguments":[{"id":7954,"name":"newToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7937,"src":"2112:8:27","typeDescriptions":{"typeIdentifier":"t_contract$_NigerianStockToken_$8894","typeString":"contract NigerianStockToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NigerianStockToken_$8894","typeString":"contract NigerianStockToken"}],"id":7953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2104:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7952,"name":"address","nodeType":"ElementaryTypeName","src":"2104:7:27","typeDescriptions":{}}},"id":7955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2104:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2081:40:27"},{"expression":{"id":7961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7957,"name":"stockTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7843,"src":"2166:11:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":7959,"indexExpression":{"id":7958,"name":"_stockSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"2178:12:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2166:25:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7960,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7951,"src":"2194:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2166:40:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7962,"nodeType":"ExpressionStatement","src":"2166:40:27"},{"expression":{"id":7967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7963,"name":"isStockToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7847,"src":"2216:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7965,"indexExpression":{"id":7964,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7951,"src":"2229:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2216:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2245:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2216:33:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7968,"nodeType":"ExpressionStatement","src":"2216:33:27"},{"expression":{"arguments":[{"id":7972,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7951,"src":"2274:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7969,"name":"allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7850,"src":"2259:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2269:4:27","memberName":"push","nodeType":"MemberAccess","src":"2259:14:27","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":7973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2259:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7974,"nodeType":"ExpressionStatement","src":"2259:28:27"},{"eventCall":{"arguments":[{"id":7976,"name":"_stockSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7885,"src":"2322:12:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7977,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7951,"src":"2336:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7978,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7881,"src":"2350:5:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7979,"name":"_companyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7887,"src":"2357:12:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7980,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7889,"src":"2371:10:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7975,"name":"StockTokenDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7862,"src":"2303:18:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (string memory,address,string memory,string memory,uint256)"}},"id":7981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:79:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7982,"nodeType":"EmitStatement","src":"2298:84:27"},{"expression":{"id":7983,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7951,"src":"2408:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7901,"id":7984,"nodeType":"Return","src":"2401:19:27"}]},"documentation":{"id":7879,"nodeType":"StructuredDocumentation","src":"922:340:27","text":" @dev Deploy a new Nigerian stock token\n @param _name Token name\n @param _symbol Token symbol\n @param _stockSymbol NGX stock symbol\n @param _companyName Company name\n @param _maxSupply Maximum supply\n @param _initialSupply Initial supply\n @param _admin Admin address for the token"},"functionSelector":"7b71586b","id":7986,"implemented":true,"kind":"function","modifiers":[{"id":7896,"kind":"modifierInvocation","modifierName":{"id":7895,"name":"onlyOwner","nameLocations":["1524:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"1524:9:27"},"nodeType":"ModifierInvocation","src":"1524:9:27"},{"id":7898,"kind":"modifierInvocation","modifierName":{"id":7897,"name":"nonReentrant","nameLocations":["1534:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":1823,"src":"1534:12:27"},"nodeType":"ModifierInvocation","src":"1534:12:27"}],"name":"deployStockToken","nameLocation":"1276:16:27","nodeType":"FunctionDefinition","parameters":{"id":7894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7881,"mutability":"mutable","name":"_name","nameLocation":"1316:5:27","nodeType":"VariableDeclaration","scope":7986,"src":"1302:19:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7880,"name":"string","nodeType":"ElementaryTypeName","src":"1302:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7883,"mutability":"mutable","name":"_symbol","nameLocation":"1345:7:27","nodeType":"VariableDeclaration","scope":7986,"src":"1331:21:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7882,"name":"string","nodeType":"ElementaryTypeName","src":"1331:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7885,"mutability":"mutable","name":"_stockSymbol","nameLocation":"1376:12:27","nodeType":"VariableDeclaration","scope":7986,"src":"1362:26:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7884,"name":"string","nodeType":"ElementaryTypeName","src":"1362:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7887,"mutability":"mutable","name":"_companyName","nameLocation":"1412:12:27","nodeType":"VariableDeclaration","scope":7986,"src":"1398:26:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7886,"name":"string","nodeType":"ElementaryTypeName","src":"1398:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7889,"mutability":"mutable","name":"_maxSupply","nameLocation":"1442:10:27","nodeType":"VariableDeclaration","scope":7986,"src":"1434:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7888,"name":"uint256","nodeType":"ElementaryTypeName","src":"1434:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7891,"mutability":"mutable","name":"_initialSupply","nameLocation":"1470:14:27","nodeType":"VariableDeclaration","scope":7986,"src":"1462:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7890,"name":"uint256","nodeType":"ElementaryTypeName","src":"1462:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7893,"mutability":"mutable","name":"_admin","nameLocation":"1502:6:27","nodeType":"VariableDeclaration","scope":7986,"src":"1494:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7892,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1292:222:27"},"returnParameters":{"id":7901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7986,"src":"1556:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7899,"name":"address","nodeType":"ElementaryTypeName","src":"1556:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1555:9:27"},"scope":8347,"src":"1267:1160:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8061,"nodeType":"Block","src":"2715:567:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7999,"name":"_stockSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"2739:12:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2733:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7997,"name":"bytes","nodeType":"ElementaryTypeName","src":"2733:5:27","typeDescriptions":{}}},"id":8000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2733:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2753:6:27","memberName":"length","nodeType":"MemberAccess","src":"2733:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2762:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2733:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53746f636b2073796d626f6c2063616e6e6f7420626520656d707479","id":8004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2765:30:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_25738101cc12252055b183d28efe8e24d4cbb6e99569f3cf453f32945ed83746","typeString":"literal_string \"Stock symbol cannot be empty\""},"value":"Stock symbol cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25738101cc12252055b183d28efe8e24d4cbb6e99569f3cf453f32945ed83746","typeString":"literal_string \"Stock symbol cannot be empty\""}],"id":7996,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2725:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:71:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8006,"nodeType":"ExpressionStatement","src":"2725:71:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8008,"name":"_newTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7991,"src":"2814:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2842:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2834:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8009,"name":"address","nodeType":"ElementaryTypeName","src":"2834:7:27","typeDescriptions":{}}},"id":8012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2834:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2814:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e657720746f6b656e20616464726573732063616e6e6f74206265207a65726f","id":8014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2846:34:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610f1d16b44f46e6825c331590b0ec612ef31c965c34c24da5ad7ed75177afc","typeString":"literal_string \"New token address cannot be zero\""},"value":"New token address cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610f1d16b44f46e6825c331590b0ec612ef31c965c34c24da5ad7ed75177afc","typeString":"literal_string \"New token address cannot be zero\""}],"id":8007,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2806:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2806:75:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8016,"nodeType":"ExpressionStatement","src":"2806:75:27"},{"assignments":[8018],"declarations":[{"constant":false,"id":8018,"mutability":"mutable","name":"oldAddress","nameLocation":"2908:10:27","nodeType":"VariableDeclaration","scope":8061,"src":"2900:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8017,"name":"address","nodeType":"ElementaryTypeName","src":"2900:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8022,"initialValue":{"baseExpression":{"id":8019,"name":"stockTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7843,"src":"2921:11:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":8021,"indexExpression":{"id":8020,"name":"_stockSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"2933:12:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2921:25:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2900:46:27"},{"expression":{"id":8027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8023,"name":"stockTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7843,"src":"2956:11:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":8025,"indexExpression":{"id":8024,"name":"_stockSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"2968:12:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2956:25:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8026,"name":"_newTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7991,"src":"2984:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2956:44:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8028,"nodeType":"ExpressionStatement","src":"2956:44:27"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8029,"name":"oldAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8018,"src":"3023:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3045:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3037:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8030,"name":"address","nodeType":"ElementaryTypeName","src":"3037:7:27","typeDescriptions":{}}},"id":8033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3037:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3023:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8042,"nodeType":"IfStatement","src":"3019:87:27","trueBody":{"id":8041,"nodeType":"Block","src":"3049:57:27","statements":[{"expression":{"id":8039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8035,"name":"isStockToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7847,"src":"3063:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8037,"indexExpression":{"id":8036,"name":"oldAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8018,"src":"3076:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3063:24:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":8038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3090:5:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3063:32:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8040,"nodeType":"ExpressionStatement","src":"3063:32:27"}]}},{"expression":{"id":8047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8043,"name":"isStockToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7847,"src":"3124:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8045,"indexExpression":{"id":8044,"name":"_newTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7991,"src":"3137:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3124:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3157:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3124:37:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8048,"nodeType":"ExpressionStatement","src":"3124:37:27"},{"expression":{"arguments":[{"id":8052,"name":"_newTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7991,"src":"3186:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8049,"name":"allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7850,"src":"3171:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3181:4:27","memberName":"push","nodeType":"MemberAccess","src":"3171:14:27","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":8053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3171:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8054,"nodeType":"ExpressionStatement","src":"3171:32:27"},{"eventCall":{"arguments":[{"id":8056,"name":"_stockSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"3232:12:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8057,"name":"oldAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8018,"src":"3246:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8058,"name":"_newTokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7991,"src":"3258:16:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8055,"name":"TokenUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7870,"src":"3219:12:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$","typeString":"function (string memory,address,address)"}},"id":8059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:56:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8060,"nodeType":"EmitStatement","src":"3214:61:27"}]},"documentation":{"id":7987,"nodeType":"StructuredDocumentation","src":"2433:178:27","text":" @dev Update token address for a stock symbol (in case of redeployment)\n @param _stockSymbol Stock symbol\n @param _newTokenAddress New token address"},"functionSelector":"704f703a","id":8062,"implemented":true,"kind":"function","modifiers":[{"id":7994,"kind":"modifierInvocation","modifierName":{"id":7993,"name":"onlyOwner","nameLocations":["2705:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"2705:9:27"},"nodeType":"ModifierInvocation","src":"2705:9:27"}],"name":"updateStockToken","nameLocation":"2625:16:27","nodeType":"FunctionDefinition","parameters":{"id":7992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7989,"mutability":"mutable","name":"_stockSymbol","nameLocation":"2656:12:27","nodeType":"VariableDeclaration","scope":8062,"src":"2642:26:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7988,"name":"string","nodeType":"ElementaryTypeName","src":"2642:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7991,"mutability":"mutable","name":"_newTokenAddress","nameLocation":"2678:16:27","nodeType":"VariableDeclaration","scope":8062,"src":"2670:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7990,"name":"address","nodeType":"ElementaryTypeName","src":"2670:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2641:54:27"},"returnParameters":{"id":7995,"nodeType":"ParameterList","parameters":[],"src":"2715:0:27"},"scope":8347,"src":"2616:666:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8074,"nodeType":"Block","src":"3504:49:27","statements":[{"expression":{"baseExpression":{"id":8070,"name":"stockTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7843,"src":"3521:11:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":8072,"indexExpression":{"id":8071,"name":"_stockSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8065,"src":"3533:12:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3521:25:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":8069,"id":8073,"nodeType":"Return","src":"3514:32:27"}]},"documentation":{"id":8063,"nodeType":"StructuredDocumentation","src":"3288:126:27","text":" @dev Get token address by stock symbol\n @param _stockSymbol Stock symbol\n @return Token address"},"functionSelector":"c4091236","id":8075,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenAddress","nameLocation":"3428:15:27","nodeType":"FunctionDefinition","parameters":{"id":8066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8065,"mutability":"mutable","name":"_stockSymbol","nameLocation":"3458:12:27","nodeType":"VariableDeclaration","scope":8075,"src":"3444:26:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8064,"name":"string","nodeType":"ElementaryTypeName","src":"3444:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3443:28:27"},"returnParameters":{"id":8069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8075,"src":"3495:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8067,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3494:9:27"},"scope":8347,"src":"3419:134:27","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8087,"nodeType":"Block","src":"3813:51:27","statements":[{"expression":{"baseExpression":{"id":8083,"name":"isStockToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7847,"src":"3830:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8085,"indexExpression":{"id":8084,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8078,"src":"3843:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3830:27:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8082,"id":8086,"nodeType":"Return","src":"3823:34:27"}]},"documentation":{"id":8076,"nodeType":"StructuredDocumentation","src":"3559:165:27","text":" @dev Check if address is a registered stock token\n @param _tokenAddress Token address to check\n @return True if registered stock token"},"functionSelector":"e5b2e3a6","id":8088,"implemented":true,"kind":"function","modifiers":[],"name":"isRegisteredStockToken","nameLocation":"3738:22:27","nodeType":"FunctionDefinition","parameters":{"id":8079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8078,"mutability":"mutable","name":"_tokenAddress","nameLocation":"3769:13:27","nodeType":"VariableDeclaration","scope":8088,"src":"3761:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8077,"name":"address","nodeType":"ElementaryTypeName","src":"3761:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3760:23:27"},"returnParameters":{"id":8082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8088,"src":"3807:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8080,"name":"bool","nodeType":"ElementaryTypeName","src":"3807:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3806:6:27"},"scope":8347,"src":"3729:135:27","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8097,"nodeType":"Block","src":"4036:33:27","statements":[{"expression":{"id":8095,"name":"allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7850,"src":"4053:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":8094,"id":8096,"nodeType":"Return","src":"4046:16:27"}]},"documentation":{"id":8089,"nodeType":"StructuredDocumentation","src":"3870:96:27","text":" @dev Get all deployed token addresses\n @return Array of token addresses"},"functionSelector":"2a5c792a","id":8098,"implemented":true,"kind":"function","modifiers":[],"name":"getAllTokens","nameLocation":"3980:12:27","nodeType":"FunctionDefinition","parameters":{"id":8090,"nodeType":"ParameterList","parameters":[],"src":"3992:2:27"},"returnParameters":{"id":8094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8098,"src":"4018:16:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8091,"name":"address","nodeType":"ElementaryTypeName","src":"4018:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8092,"nodeType":"ArrayTypeName","src":"4018:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4017:18:27"},"scope":8347,"src":"3971:98:27","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8107,"nodeType":"Block","src":"4228:40:27","statements":[{"expression":{"expression":{"id":8104,"name":"allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7850,"src":"4245:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4255:6:27","memberName":"length","nodeType":"MemberAccess","src":"4245:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8103,"id":8106,"nodeType":"Return","src":"4238:23:27"}]},"documentation":{"id":8099,"nodeType":"StructuredDocumentation","src":"4075:91:27","text":" @dev Get total number of deployed tokens\n @return Number of tokens"},"functionSelector":"78a89567","id":8108,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenCount","nameLocation":"4180:13:27","nodeType":"FunctionDefinition","parameters":{"id":8100,"nodeType":"ParameterList","parameters":[],"src":"4193:2:27"},"returnParameters":{"id":8103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8108,"src":"4219:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8101,"name":"uint256","nodeType":"ElementaryTypeName","src":"4219:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4218:9:27"},"scope":8347,"src":"4171:97:27","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8172,"nodeType":"Block","src":"4950:457:27","statements":[{"assignments":[8129],"declarations":[{"constant":false,"id":8129,"mutability":"mutable","name":"token","nameLocation":"4968:5:27","nodeType":"VariableDeclaration","scope":8172,"src":"4960:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8128,"name":"address","nodeType":"ElementaryTypeName","src":"4960:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8133,"initialValue":{"baseExpression":{"id":8130,"name":"stockTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7843,"src":"4976:11:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":8132,"indexExpression":{"id":8131,"name":"_stockSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8111,"src":"4988:12:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4976:25:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4960:41:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8135,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"5019:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5036:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5028:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8136,"name":"address","nodeType":"ElementaryTypeName","src":"5028:7:27","typeDescriptions":{}}},"id":8139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5028:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5019:19:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f7420666f756e64","id":8141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5040:17:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_487af3faa279cd1df07c0d1897feb1b8a94d7a439a5fcca3a8f816912eee96c2","typeString":"literal_string \"Token not found\""},"value":"Token not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_487af3faa279cd1df07c0d1897feb1b8a94d7a439a5fcca3a8f816912eee96c2","typeString":"literal_string \"Token not found\""}],"id":8134,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5011:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5011:47:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8143,"nodeType":"ExpressionStatement","src":"5011:47:27"},{"assignments":[8146],"declarations":[{"constant":false,"id":8146,"mutability":"mutable","name":"stockToken","nameLocation":"5096:10:27","nodeType":"VariableDeclaration","scope":8172,"src":"5077:29:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_NigerianStockToken_$8894","typeString":"contract NigerianStockToken"},"typeName":{"id":8145,"nodeType":"UserDefinedTypeName","pathNode":{"id":8144,"name":"NigerianStockToken","nameLocations":["5077:18:27"],"nodeType":"IdentifierPath","referencedDeclaration":8894,"src":"5077:18:27"},"referencedDeclaration":8894,"src":"5077:18:27","typeDescriptions":{"typeIdentifier":"t_contract$_NigerianStockToken_$8894","typeString":"contract NigerianStockToken"}},"visibility":"internal"}],"id":8150,"initialValue":{"arguments":[{"id":8148,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"5128:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8147,"name":"NigerianStockToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8894,"src":"5109:18:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_NigerianStockToken_$8894_$","typeString":"type(contract NigerianStockToken)"}},"id":8149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5109:25:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_NigerianStockToken_$8894","typeString":"contract NigerianStockToken"}},"nodeType":"VariableDeclarationStatement","src":"5077:57:27"},{"expression":{"components":[{"id":8151,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8129,"src":"5174:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8152,"name":"stockToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8146,"src":"5193:10:27","typeDescriptions":{"typeIdentifier":"t_contract$_NigerianStockToken_$8894","typeString":"contract NigerianStockToken"}},"id":8153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5204:4:27","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":750,"src":"5193:15:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view external returns (string memory)"}},"id":8154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5193:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8155,"name":"stockToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8146,"src":"5224:10:27","typeDescriptions":{"typeIdentifier":"t_contract$_NigerianStockToken_$8894","typeString":"contract NigerianStockToken"}},"id":8156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5235:6:27","memberName":"symbol","nodeType":"MemberAccess","referencedDeclaration":759,"src":"5224:17:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view external returns (string memory)"}},"id":8157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5224:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8158,"name":"stockToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8146,"src":"5257:10:27","typeDescriptions":{"typeIdentifier":"t_contract$_NigerianStockToken_$8894","typeString":"contract NigerianStockToken"}},"id":8159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5268:11:27","memberName":"companyName","nodeType":"MemberAccess","referencedDeclaration":8389,"src":"5257:22:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view external returns (string memory)"}},"id":8160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5257:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8161,"name":"stockToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8146,"src":"5295:10:27","typeDescriptions":{"typeIdentifier":"t_contract$_NigerianStockToken_$8894","typeString":"contract NigerianStockToken"}},"id":8162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5306:11:27","memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":777,"src":"5295:22:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":8163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5295:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8164,"name":"stockToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8146,"src":"5333:10:27","typeDescriptions":{"typeIdentifier":"t_contract$_NigerianStockToken_$8894","typeString":"contract NigerianStockToken"}},"id":8165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5344:9:27","memberName":"maxSupply","nodeType":"MemberAccess","referencedDeclaration":8391,"src":"5333:20:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":8166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5333:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8167,"name":"stockToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8146,"src":"5369:10:27","typeDescriptions":{"typeIdentifier":"t_contract$_NigerianStockToken_$8894","typeString":"contract NigerianStockToken"}},"id":8168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5380:8:27","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":768,"src":"5369:19:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":8169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5369:21:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":8170,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5160:240:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint8_$","typeString":"tuple(address,string memory,string memory,string memory,uint256,uint256,uint8)"}},"functionReturnParameters":8127,"id":8171,"nodeType":"Return","src":"5153:247:27"}]},"documentation":{"id":8109,"nodeType":"StructuredDocumentation","src":"4274:389:27","text":" @dev Get token information by stock symbol\n @param _stockSymbol Stock symbol\n @return tokenAddress Token contract address\n @return name Token name\n @return symbol Token symbol\n @return companyName Company name\n @return totalSupply Total token supply\n @return maxSupply Maximum token supply\n @return decimals Token decimals"},"functionSelector":"8e0ad1cc","id":8173,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenInfo","nameLocation":"4677:12:27","nodeType":"FunctionDefinition","parameters":{"id":8112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8111,"mutability":"mutable","name":"_stockSymbol","nameLocation":"4704:12:27","nodeType":"VariableDeclaration","scope":8173,"src":"4690:26:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8110,"name":"string","nodeType":"ElementaryTypeName","src":"4690:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4689:28:27"},"returnParameters":{"id":8127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8114,"mutability":"mutable","name":"tokenAddress","nameLocation":"4758:12:27","nodeType":"VariableDeclaration","scope":8173,"src":"4750:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8113,"name":"address","nodeType":"ElementaryTypeName","src":"4750:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8116,"mutability":"mutable","name":"name","nameLocation":"4794:4:27","nodeType":"VariableDeclaration","scope":8173,"src":"4780:18:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8115,"name":"string","nodeType":"ElementaryTypeName","src":"4780:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8118,"mutability":"mutable","name":"symbol","nameLocation":"4822:6:27","nodeType":"VariableDeclaration","scope":8173,"src":"4808:20:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8117,"name":"string","nodeType":"ElementaryTypeName","src":"4808:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8120,"mutability":"mutable","name":"companyName","nameLocation":"4852:11:27","nodeType":"VariableDeclaration","scope":8173,"src":"4838:25:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8119,"name":"string","nodeType":"ElementaryTypeName","src":"4838:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8122,"mutability":"mutable","name":"totalSupply","nameLocation":"4881:11:27","nodeType":"VariableDeclaration","scope":8173,"src":"4873:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8121,"name":"uint256","nodeType":"ElementaryTypeName","src":"4873:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8124,"mutability":"mutable","name":"maxSupply","nameLocation":"4910:9:27","nodeType":"VariableDeclaration","scope":8173,"src":"4902:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8123,"name":"uint256","nodeType":"ElementaryTypeName","src":"4902:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8126,"mutability":"mutable","name":"decimals","nameLocation":"4935:8:27","nodeType":"VariableDeclaration","scope":8173,"src":"4929:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8125,"name":"uint8","nodeType":"ElementaryTypeName","src":"4929:5:27","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4740:209:27"},"scope":8347,"src":"4668:739:27","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8332,"nodeType":"Block","src":"5752:1466:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8191,"name":"_tokenData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8178,"src":"5770:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenDeploymentData_$8346_memory_ptr_$dyn_memory_ptr","typeString":"struct NigerianStockFactory.TokenDeploymentData memory[] memory"}},"id":8192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5781:6:27","memberName":"length","nodeType":"MemberAccess","src":"5770:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5790:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5770:21:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f20746f6b656e20646174612070726f7669646564","id":8195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5793:24:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_1be8bff5dd961c539358e8371234d129dde274327acf58b9e05e7c7d84abd74f","typeString":"literal_string \"No token data provided\""},"value":"No token data provided"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1be8bff5dd961c539358e8371234d129dde274327acf58b9e05e7c7d84abd74f","typeString":"literal_string \"No token data provided\""}],"id":8190,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5762:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5762:56:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8197,"nodeType":"ExpressionStatement","src":"5762:56:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8199,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"5836:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5854:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5846:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8200,"name":"address","nodeType":"ElementaryTypeName","src":"5846:7:27","typeDescriptions":{}}},"id":8203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5846:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5836:20:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41646d696e2063616e6e6f74206265207a65726f2061646472657373","id":8205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5858:30:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24","typeString":"literal_string \"Admin cannot be zero address\""},"value":"Admin cannot be zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24","typeString":"literal_string \"Admin cannot be zero address\""}],"id":8198,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5828:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5828:61:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8207,"nodeType":"ExpressionStatement","src":"5828:61:27"},{"assignments":[8212],"declarations":[{"constant":false,"id":8212,"mutability":"mutable","name":"deployedTokens","nameLocation":"5925:14:27","nodeType":"VariableDeclaration","scope":8332,"src":"5908:31:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8210,"name":"address","nodeType":"ElementaryTypeName","src":"5908:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8211,"nodeType":"ArrayTypeName","src":"5908:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":8219,"initialValue":{"arguments":[{"expression":{"id":8216,"name":"_tokenData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8178,"src":"5956:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenDeploymentData_$8346_memory_ptr_$dyn_memory_ptr","typeString":"struct NigerianStockFactory.TokenDeploymentData memory[] memory"}},"id":8217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5967:6:27","memberName":"length","nodeType":"MemberAccess","src":"5956:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5942:13:27","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":8213,"name":"address","nodeType":"ElementaryTypeName","src":"5946:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8214,"nodeType":"ArrayTypeName","src":"5946:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":8218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5942:32:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5908:66:27"},{"body":{"id":8328,"nodeType":"Block","src":"6041:1131:27","statements":[{"assignments":[8233],"declarations":[{"constant":false,"id":8233,"mutability":"mutable","name":"data","nameLocation":"6082:4:27","nodeType":"VariableDeclaration","scope":8328,"src":"6055:31:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenDeploymentData_$8346_memory_ptr","typeString":"struct NigerianStockFactory.TokenDeploymentData"},"typeName":{"id":8232,"nodeType":"UserDefinedTypeName","pathNode":{"id":8231,"name":"TokenDeploymentData","nameLocations":["6055:19:27"],"nodeType":"IdentifierPath","referencedDeclaration":8346,"src":"6055:19:27"},"referencedDeclaration":8346,"src":"6055:19:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenDeploymentData_$8346_storage_ptr","typeString":"struct NigerianStockFactory.TokenDeploymentData"}},"visibility":"internal"}],"id":8237,"initialValue":{"baseExpression":{"id":8234,"name":"_tokenData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8178,"src":"6089:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenDeploymentData_$8346_memory_ptr_$dyn_memory_ptr","typeString":"struct NigerianStockFactory.TokenDeploymentData memory[] memory"}},"id":8236,"indexExpression":{"id":8235,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8221,"src":"6100:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6089:13:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenDeploymentData_$8346_memory_ptr","typeString":"struct NigerianStockFactory.TokenDeploymentData memory"}},"nodeType":"VariableDeclarationStatement","src":"6055:47:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"id":8241,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"6143:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenDeploymentData_$8346_memory_ptr","typeString":"struct NigerianStockFactory.TokenDeploymentData memory"}},"id":8242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6148:11:27","memberName":"stockSymbol","nodeType":"MemberAccess","referencedDeclaration":8339,"src":"6143:16:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6137:5:27","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8239,"name":"bytes","nodeType":"ElementaryTypeName","src":"6137:5:27","typeDescriptions":{}}},"id":8243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6137:23:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6161:6:27","memberName":"length","nodeType":"MemberAccess","src":"6137:30:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6170:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6137:34:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53746f636b2073796d626f6c2063616e6e6f7420626520656d707479","id":8247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6173:30:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_25738101cc12252055b183d28efe8e24d4cbb6e99569f3cf453f32945ed83746","typeString":"literal_string \"Stock symbol cannot be empty\""},"value":"Stock symbol cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25738101cc12252055b183d28efe8e24d4cbb6e99569f3cf453f32945ed83746","typeString":"literal_string \"Stock symbol cannot be empty\""}],"id":8238,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6129:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6129:75:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8249,"nodeType":"ExpressionStatement","src":"6129:75:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8251,"name":"stockTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7843,"src":"6226:11:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":8254,"indexExpression":{"expression":{"id":8252,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"6238:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenDeploymentData_$8346_memory_ptr","typeString":"struct NigerianStockFactory.TokenDeploymentData memory"}},"id":8253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6243:11:27","memberName":"stockSymbol","nodeType":"MemberAccess","referencedDeclaration":8339,"src":"6238:16:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6226:29:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6267:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6259:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8255,"name":"address","nodeType":"ElementaryTypeName","src":"6259:7:27","typeDescriptions":{}}},"id":8258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6259:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6226:43:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53746f636b20746f6b656e20616c726561647920657869737473","id":8260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6271:28:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_2379fd97128171c529528a32c8946e7ef3f80d9231b442f98924a78411a3fb7c","typeString":"literal_string \"Stock token already exists\""},"value":"Stock token already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2379fd97128171c529528a32c8946e7ef3f80d9231b442f98924a78411a3fb7c","typeString":"literal_string \"Stock token already exists\""}],"id":8250,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6218:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6218:82:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8262,"nodeType":"ExpressionStatement","src":"6218:82:27"},{"assignments":[8265],"declarations":[{"constant":false,"id":8265,"mutability":"mutable","name":"newToken","nameLocation":"6374:8:27","nodeType":"VariableDeclaration","scope":8328,"src":"6355:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_NigerianStockToken_$8894","typeString":"contract NigerianStockToken"},"typeName":{"id":8264,"nodeType":"UserDefinedTypeName","pathNode":{"id":8263,"name":"NigerianStockToken","nameLocations":["6355:18:27"],"nodeType":"IdentifierPath","referencedDeclaration":8894,"src":"6355:18:27"},"referencedDeclaration":8894,"src":"6355:18:27","typeDescriptions":{"typeIdentifier":"t_contract$_NigerianStockToken_$8894","typeString":"contract NigerianStockToken"}},"visibility":"internal"}],"id":8283,"initialValue":{"arguments":[{"expression":{"id":8269,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"6425:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenDeploymentData_$8346_memory_ptr","typeString":"struct NigerianStockFactory.TokenDeploymentData memory"}},"id":8270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6430:4:27","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":8335,"src":"6425:9:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8271,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"6452:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenDeploymentData_$8346_memory_ptr","typeString":"struct NigerianStockFactory.TokenDeploymentData memory"}},"id":8272,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6457:6:27","memberName":"symbol","nodeType":"MemberAccess","referencedDeclaration":8337,"src":"6452:11:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8273,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"6481:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenDeploymentData_$8346_memory_ptr","typeString":"struct NigerianStockFactory.TokenDeploymentData memory"}},"id":8274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6486:11:27","memberName":"stockSymbol","nodeType":"MemberAccess","referencedDeclaration":8339,"src":"6481:16:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8275,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"6515:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenDeploymentData_$8346_memory_ptr","typeString":"struct NigerianStockFactory.TokenDeploymentData memory"}},"id":8276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6520:11:27","memberName":"companyName","nodeType":"MemberAccess","referencedDeclaration":8341,"src":"6515:16:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8277,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"6549:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenDeploymentData_$8346_memory_ptr","typeString":"struct NigerianStockFactory.TokenDeploymentData memory"}},"id":8278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6554:9:27","memberName":"maxSupply","nodeType":"MemberAccess","referencedDeclaration":8343,"src":"6549:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8279,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"6581:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenDeploymentData_$8346_memory_ptr","typeString":"struct NigerianStockFactory.TokenDeploymentData memory"}},"id":8280,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6586:13:27","memberName":"initialSupply","nodeType":"MemberAccess","referencedDeclaration":8345,"src":"6581:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8281,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8180,"src":"6617:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"6385:22:27","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_contract$_NigerianStockToken_$8894_$","typeString":"function (string memory,string memory,string memory,string memory,uint256,uint256,address) returns (contract NigerianStockToken)"},"typeName":{"id":8267,"nodeType":"UserDefinedTypeName","pathNode":{"id":8266,"name":"NigerianStockToken","nameLocations":["6389:18:27"],"nodeType":"IdentifierPath","referencedDeclaration":8894,"src":"6389:18:27"},"referencedDeclaration":8894,"src":"6389:18:27","typeDescriptions":{"typeIdentifier":"t_contract$_NigerianStockToken_$8894","typeString":"contract NigerianStockToken"}}},"id":8282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6385:252:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_NigerianStockToken_$8894","typeString":"contract NigerianStockToken"}},"nodeType":"VariableDeclarationStatement","src":"6355:282:27"},{"assignments":[8285],"declarations":[{"constant":false,"id":8285,"mutability":"mutable","name":"tokenAddress","nameLocation":"6672:12:27","nodeType":"VariableDeclaration","scope":8328,"src":"6664:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8284,"name":"address","nodeType":"ElementaryTypeName","src":"6664:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8290,"initialValue":{"arguments":[{"id":8288,"name":"newToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8265,"src":"6695:8:27","typeDescriptions":{"typeIdentifier":"t_contract$_NigerianStockToken_$8894","typeString":"contract NigerianStockToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_NigerianStockToken_$8894","typeString":"contract NigerianStockToken"}],"id":8287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6687:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8286,"name":"address","nodeType":"ElementaryTypeName","src":"6687:7:27","typeDescriptions":{}}},"id":8289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6687:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6664:40:27"},{"expression":{"id":8296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8291,"name":"stockTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7843,"src":"6761:11:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":8294,"indexExpression":{"expression":{"id":8292,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"6773:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenDeploymentData_$8346_memory_ptr","typeString":"struct NigerianStockFactory.TokenDeploymentData memory"}},"id":8293,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6778:11:27","memberName":"stockSymbol","nodeType":"MemberAccess","referencedDeclaration":8339,"src":"6773:16:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6761:29:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8295,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8285,"src":"6793:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6761:44:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8297,"nodeType":"ExpressionStatement","src":"6761:44:27"},{"expression":{"id":8302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8298,"name":"isStockToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7847,"src":"6819:12:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8300,"indexExpression":{"id":8299,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8285,"src":"6832:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6819:26:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6848:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6819:33:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8303,"nodeType":"ExpressionStatement","src":"6819:33:27"},{"expression":{"arguments":[{"id":8307,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8285,"src":"6881:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8304,"name":"allTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7850,"src":"6866:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6876:4:27","memberName":"push","nodeType":"MemberAccess","src":"6866:14:27","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":8308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6866:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8309,"nodeType":"ExpressionStatement","src":"6866:28:27"},{"expression":{"id":8314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8310,"name":"deployedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8212,"src":"6908:14:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":8312,"indexExpression":{"id":8311,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8221,"src":"6923:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6908:17:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8313,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8285,"src":"6928:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6908:32:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8315,"nodeType":"ExpressionStatement","src":"6908:32:27"},{"eventCall":{"arguments":[{"expression":{"id":8317,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"7008:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenDeploymentData_$8346_memory_ptr","typeString":"struct NigerianStockFactory.TokenDeploymentData memory"}},"id":8318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7013:11:27","memberName":"stockSymbol","nodeType":"MemberAccess","referencedDeclaration":8339,"src":"7008:16:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8319,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8285,"src":"7042:12:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8320,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"7072:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenDeploymentData_$8346_memory_ptr","typeString":"struct NigerianStockFactory.TokenDeploymentData memory"}},"id":8321,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7077:4:27","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":8335,"src":"7072:9:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8322,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"7099:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenDeploymentData_$8346_memory_ptr","typeString":"struct NigerianStockFactory.TokenDeploymentData memory"}},"id":8323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7104:11:27","memberName":"companyName","nodeType":"MemberAccess","referencedDeclaration":8341,"src":"7099:16:27","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8324,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"7133:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenDeploymentData_$8346_memory_ptr","typeString":"struct NigerianStockFactory.TokenDeploymentData memory"}},"id":8325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7138:9:27","memberName":"maxSupply","nodeType":"MemberAccess","referencedDeclaration":8343,"src":"7133:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8316,"name":"StockTokenDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7862,"src":"6972:18:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (string memory,address,string memory,string memory,uint256)"}},"id":8326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6972:189:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8327,"nodeType":"EmitStatement","src":"6967:194:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8224,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8221,"src":"6013:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8225,"name":"_tokenData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8178,"src":"6017:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenDeploymentData_$8346_memory_ptr_$dyn_memory_ptr","typeString":"struct NigerianStockFactory.TokenDeploymentData memory[] memory"}},"id":8226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6028:6:27","memberName":"length","nodeType":"MemberAccess","src":"6017:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6013:21:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8329,"initializationExpression":{"assignments":[8221],"declarations":[{"constant":false,"id":8221,"mutability":"mutable","name":"i","nameLocation":"6006:1:27","nodeType":"VariableDeclaration","scope":8329,"src":"5998:9:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8220,"name":"uint256","nodeType":"ElementaryTypeName","src":"5998:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8223,"initialValue":{"hexValue":"30","id":8222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6010:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5998:13:27"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6036:3:27","subExpression":{"id":8228,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8221,"src":"6036:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8230,"nodeType":"ExpressionStatement","src":"6036:3:27"},"nodeType":"ForStatement","src":"5993:1179:27"},{"expression":{"id":8330,"name":"deployedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8212,"src":"7197:14:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":8189,"id":8331,"nodeType":"Return","src":"7190:21:27"}]},"documentation":{"id":8174,"nodeType":"StructuredDocumentation","src":"5413:164:27","text":" @dev Batch deploy multiple stock tokens\n @param _tokenData Array of token deployment data\n @param _admin Admin address for all tokens"},"functionSelector":"0c2c0a53","id":8333,"implemented":true,"kind":"function","modifiers":[{"id":8183,"kind":"modifierInvocation","modifierName":{"id":8182,"name":"onlyOwner","nameLocations":["5702:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"5702:9:27"},"nodeType":"ModifierInvocation","src":"5702:9:27"},{"id":8185,"kind":"modifierInvocation","modifierName":{"id":8184,"name":"nonReentrant","nameLocations":["5712:12:27"],"nodeType":"IdentifierPath","referencedDeclaration":1823,"src":"5712:12:27"},"nodeType":"ModifierInvocation","src":"5712:12:27"}],"name":"batchDeployStockTokens","nameLocation":"5591:22:27","nodeType":"FunctionDefinition","parameters":{"id":8181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8178,"mutability":"mutable","name":"_tokenData","nameLocation":"5652:10:27","nodeType":"VariableDeclaration","scope":8333,"src":"5623:39:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenDeploymentData_$8346_memory_ptr_$dyn_memory_ptr","typeString":"struct NigerianStockFactory.TokenDeploymentData[]"},"typeName":{"baseType":{"id":8176,"nodeType":"UserDefinedTypeName","pathNode":{"id":8175,"name":"TokenDeploymentData","nameLocations":["5623:19:27"],"nodeType":"IdentifierPath","referencedDeclaration":8346,"src":"5623:19:27"},"referencedDeclaration":8346,"src":"5623:19:27","typeDescriptions":{"typeIdentifier":"t_struct$_TokenDeploymentData_$8346_storage_ptr","typeString":"struct NigerianStockFactory.TokenDeploymentData"}},"id":8177,"nodeType":"ArrayTypeName","src":"5623:21:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TokenDeploymentData_$8346_storage_$dyn_storage_ptr","typeString":"struct NigerianStockFactory.TokenDeploymentData[]"}},"visibility":"internal"},{"constant":false,"id":8180,"mutability":"mutable","name":"_admin","nameLocation":"5680:6:27","nodeType":"VariableDeclaration","scope":8333,"src":"5672:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8179,"name":"address","nodeType":"ElementaryTypeName","src":"5672:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5613:79:27"},"returnParameters":{"id":8189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8333,"src":"5734:16:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8186,"name":"address","nodeType":"ElementaryTypeName","src":"5734:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8187,"nodeType":"ArrayTypeName","src":"5734:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"5733:18:27"},"scope":8347,"src":"5582:1636:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"canonicalName":"NigerianStockFactory.TokenDeploymentData","id":8346,"members":[{"constant":false,"id":8335,"mutability":"mutable","name":"name","nameLocation":"7303:4:27","nodeType":"VariableDeclaration","scope":8346,"src":"7296:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8334,"name":"string","nodeType":"ElementaryTypeName","src":"7296:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8337,"mutability":"mutable","name":"symbol","nameLocation":"7324:6:27","nodeType":"VariableDeclaration","scope":8346,"src":"7317:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8336,"name":"string","nodeType":"ElementaryTypeName","src":"7317:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8339,"mutability":"mutable","name":"stockSymbol","nameLocation":"7347:11:27","nodeType":"VariableDeclaration","scope":8346,"src":"7340:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8338,"name":"string","nodeType":"ElementaryTypeName","src":"7340:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8341,"mutability":"mutable","name":"companyName","nameLocation":"7375:11:27","nodeType":"VariableDeclaration","scope":8346,"src":"7368:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8340,"name":"string","nodeType":"ElementaryTypeName","src":"7368:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8343,"mutability":"mutable","name":"maxSupply","nameLocation":"7404:9:27","nodeType":"VariableDeclaration","scope":8346,"src":"7396:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8342,"name":"uint256","nodeType":"ElementaryTypeName","src":"7396:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8345,"mutability":"mutable","name":"initialSupply","nameLocation":"7431:13:27","nodeType":"VariableDeclaration","scope":8346,"src":"7423:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8344,"name":"uint256","nodeType":"ElementaryTypeName","src":"7423:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"TokenDeploymentData","nameLocation":"7266:19:27","nodeType":"StructDefinition","scope":8347,"src":"7259:192:27","visibility":"public"}],"scope":8348,"src":"333:7120:27","usedErrors":[393,398,1804],"usedEvents":[404,7862,7870]}],"src":"32:7422:27"},"id":27},"contracts/NigerianStockToken.sol":{"ast":{"absolutePath":"contracts/NigerianStockToken.sol","exportedSymbols":{"AccessControl":[296],"Context":[1562],"ECDSA":[3950],"EIP712":[4177],"ERC165":[4287],"ERC20":[1204],"ERC20Pausable":[1316],"ERC20Permit":[1470],"IAccessControl":[379],"IERC165":[4299],"IERC20":[1282],"IERC20Errors":[594],"IERC20Metadata":[1496],"IERC20Permit":[1532],"NigerianStockToken":[8894],"Nonces":[1630],"Pausable":[1790],"ReentrancyGuard":[1859]},"id":8895,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8349,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"32:24:28"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":8350,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8895,"sourceUnit":1205,"src":"58:55:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol","id":8351,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8895,"sourceUnit":1471,"src":"114:72:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol","id":8352,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8895,"sourceUnit":1317,"src":"187:74:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":8353,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8895,"sourceUnit":297,"src":"262:58:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":8354,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8895,"sourceUnit":1860,"src":"321:59:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8356,"name":"ERC20","nameLocations":["773:5:28"],"nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"773:5:28"},"id":8357,"nodeType":"InheritanceSpecifier","src":"773:5:28"},{"baseName":{"id":8358,"name":"ERC20Permit","nameLocations":["780:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":1470,"src":"780:11:28"},"id":8359,"nodeType":"InheritanceSpecifier","src":"780:11:28"},{"baseName":{"id":8360,"name":"ERC20Pausable","nameLocations":["793:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":1316,"src":"793:13:28"},"id":8361,"nodeType":"InheritanceSpecifier","src":"793:13:28"},{"baseName":{"id":8362,"name":"AccessControl","nameLocations":["808:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":296,"src":"808:13:28"},"id":8363,"nodeType":"InheritanceSpecifier","src":"808:13:28"},{"baseName":{"id":8364,"name":"ReentrancyGuard","nameLocations":["823:15:28"],"nodeType":"IdentifierPath","referencedDeclaration":1859,"src":"823:15:28"},"id":8365,"nodeType":"InheritanceSpecifier","src":"823:15:28"}],"canonicalName":"NigerianStockToken","contractDependencies":[],"contractKind":"contract","documentation":{"id":8355,"nodeType":"StructuredDocumentation","src":"382:359:28","text":" @title NigerianStockToken\n @dev ERC20 token representing Nigerian Stock Exchange (NGX) stocks on Bitfinity EVM\n \n Features:\n - ERC20 compliant with permit functionality\n - Role-based access control\n - Pausable for emergency stops\n - Reentrancy protection\n - Minting and burning capabilities\n - Transfer restrictions for compliance"},"fullyImplemented":true,"id":8894,"linearizedBaseContracts":[8894,1859,296,4287,4299,379,1316,1790,1470,1630,4177,552,1532,1204,594,1496,1282,1562],"name":"NigerianStockToken","nameLocation":"751:18:28","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"d5391393","id":8370,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"893:11:28","nodeType":"VariableDeclaration","scope":8894,"src":"869:62:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8366,"name":"bytes32","nodeType":"ElementaryTypeName","src":"869:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":8368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"917:13:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":8367,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"907:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"907:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"282c51f3","id":8375,"mutability":"constant","name":"BURNER_ROLE","nameLocation":"961:11:28","nodeType":"VariableDeclaration","scope":8894,"src":"937:62:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"937:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4255524e45525f524f4c45","id":8373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"985:13:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848","typeString":"literal_string \"BURNER_ROLE\""},"value":"BURNER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848","typeString":"literal_string \"BURNER_ROLE\""}],"id":8372,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"975:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"975:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"e63ab1e9","id":8380,"mutability":"constant","name":"PAUSER_ROLE","nameLocation":"1029:11:28","nodeType":"VariableDeclaration","scope":8894,"src":"1005:62:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8376,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1005:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5041555345525f524f4c45","id":8378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1053:13:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""},"value":"PAUSER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a","typeString":"literal_string \"PAUSER_ROLE\""}],"id":8377,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1043:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1043:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"062d3bd7","id":8385,"mutability":"constant","name":"COMPLIANCE_ROLE","nameLocation":"1097:15:28","nodeType":"VariableDeclaration","scope":8894,"src":"1073:70:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1073:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"434f4d504c49414e43455f524f4c45","id":8383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1125:17:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_442a94f1a1fac79af32856af2a64f63648cfa2ef3b98610a5bb7cbec4cee6985","typeString":"literal_string \"COMPLIANCE_ROLE\""},"value":"COMPLIANCE_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_442a94f1a1fac79af32856af2a64f63648cfa2ef3b98610a5bb7cbec4cee6985","typeString":"literal_string \"COMPLIANCE_ROLE\""}],"id":8382,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1115:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1115:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"c87cbe56","id":8387,"mutability":"mutable","name":"stockSymbol","nameLocation":"1186:11:28","nodeType":"VariableDeclaration","scope":8894,"src":"1172:25:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":8386,"name":"string","nodeType":"ElementaryTypeName","src":"1172:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"f5ec2eed","id":8389,"mutability":"mutable","name":"companyName","nameLocation":"1217:11:28","nodeType":"VariableDeclaration","scope":8894,"src":"1203:25:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":8388,"name":"string","nodeType":"ElementaryTypeName","src":"1203:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"d5abeb01","id":8391,"mutability":"mutable","name":"maxSupply","nameLocation":"1249:9:28","nodeType":"VariableDeclaration","scope":8894,"src":"1234:24:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"dbac26e9","id":8395,"mutability":"mutable","name":"blacklisted","nameLocation":"1341:11:28","nodeType":"VariableDeclaration","scope":8894,"src":"1309:43:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":8394,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8392,"name":"address","nodeType":"ElementaryTypeName","src":"1317:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1309:24:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8393,"name":"bool","nodeType":"ElementaryTypeName","src":"1328:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"7d89d05c","id":8399,"mutability":"mutable","name":"dailyTransferLimits","nameLocation":"1393:19:28","nodeType":"VariableDeclaration","scope":8894,"src":"1358:54:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":8398,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8396,"name":"address","nodeType":"ElementaryTypeName","src":"1366:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1358:27:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8397,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"fdb98082","id":8405,"mutability":"mutable","name":"dailyTransferAmounts","nameLocation":"1473:20:28","nodeType":"VariableDeclaration","scope":8894,"src":"1418:75:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"typeName":{"id":8404,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8400,"name":"address","nodeType":"ElementaryTypeName","src":"1426:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1418:47:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8403,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8401,"name":"uint256","nodeType":"ElementaryTypeName","src":"1445:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1437:27:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8402,"name":"uint256","nodeType":"ElementaryTypeName","src":"1456:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"c76b0888","id":8412,"mutability":"mutable","name":"defaultDailyLimit","nameLocation":"1519:17:28","nodeType":"VariableDeclaration","scope":8894,"src":"1504:51:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8406,"name":"uint256","nodeType":"ElementaryTypeName","src":"1504:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"},"id":8411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31303030303030","id":8407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1539:7:28","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":8410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1549:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":8409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1553:2:28","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1549:6:28","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"1539:16:28","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"}},"visibility":"public"},{"constant":false,"functionSelector":"c8c8ebe4","id":8419,"mutability":"mutable","name":"maxTransactionAmount","nameLocation":"1597:20:28","nodeType":"VariableDeclaration","scope":8894,"src":"1582:53:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8413,"name":"uint256","nodeType":"ElementaryTypeName","src":"1582:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000_by_1","typeString":"int_const 100000000000000000000000"},"id":8418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313030303030","id":8414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1620:6:28","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":8417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":8415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1629:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":8416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1633:2:28","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"1629:6:28","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"1620:15:28","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000_by_1","typeString":"int_const 100000000000000000000000"}},"visibility":"public"},{"anonymous":false,"eventSelector":"cf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd8","id":8425,"name":"Blacklisted","nameLocation":"1697:11:28","nodeType":"EventDefinition","parameters":{"id":8424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8421,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1725:7:28","nodeType":"VariableDeclaration","scope":8425,"src":"1709:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8420,"name":"address","nodeType":"ElementaryTypeName","src":"1709:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8423,"indexed":false,"mutability":"mutable","name":"status","nameLocation":"1739:6:28","nodeType":"VariableDeclaration","scope":8425,"src":"1734:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8422,"name":"bool","nodeType":"ElementaryTypeName","src":"1734:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1708:38:28"},"src":"1691:56:28"},{"anonymous":false,"eventSelector":"d3d22ffd28b02735cf411bd7f925bd8da01212c7028153e0d632e2953ac3088e","id":8431,"name":"DailyLimitSet","nameLocation":"1758:13:28","nodeType":"EventDefinition","parameters":{"id":8430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8427,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1788:7:28","nodeType":"VariableDeclaration","scope":8431,"src":"1772:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8426,"name":"address","nodeType":"ElementaryTypeName","src":"1772:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8429,"indexed":false,"mutability":"mutable","name":"limit","nameLocation":"1805:5:28","nodeType":"VariableDeclaration","scope":8431,"src":"1797:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8428,"name":"uint256","nodeType":"ElementaryTypeName","src":"1797:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1771:40:28"},"src":"1752:60:28"},{"anonymous":false,"eventSelector":"7c1cb3702d8e1fa6d24b12dd90670ab69c6d66d58233103d37da8b07d6b850ac","id":8435,"name":"MaxTransactionAmountUpdated","nameLocation":"1823:27:28","nodeType":"EventDefinition","parameters":{"id":8434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8433,"indexed":false,"mutability":"mutable","name":"newAmount","nameLocation":"1859:9:28","nodeType":"VariableDeclaration","scope":8435,"src":"1851:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8432,"name":"uint256","nodeType":"ElementaryTypeName","src":"1851:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1850:19:28"},"src":"1817:53:28"},{"anonymous":false,"eventSelector":"3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a4273","id":8441,"name":"TokensMinted","nameLocation":"1881:12:28","nodeType":"EventDefinition","parameters":{"id":8440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8437,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1910:2:28","nodeType":"VariableDeclaration","scope":8441,"src":"1894:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8436,"name":"address","nodeType":"ElementaryTypeName","src":"1894:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8439,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1922:6:28","nodeType":"VariableDeclaration","scope":8441,"src":"1914:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8438,"name":"uint256","nodeType":"ElementaryTypeName","src":"1914:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1893:36:28"},"src":"1875:55:28"},{"anonymous":false,"eventSelector":"fd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb6","id":8447,"name":"TokensBurned","nameLocation":"1941:12:28","nodeType":"EventDefinition","parameters":{"id":8446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8443,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"1970:4:28","nodeType":"VariableDeclaration","scope":8447,"src":"1954:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8442,"name":"address","nodeType":"ElementaryTypeName","src":"1954:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8445,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1984:6:28","nodeType":"VariableDeclaration","scope":8447,"src":"1976:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8444,"name":"uint256","nodeType":"ElementaryTypeName","src":"1976:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1953:38:28"},"src":"1935:57:28"},{"body":{"id":8548,"nodeType":"Block","src":"2674:775:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8473,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8462,"src":"2692:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2710:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2702:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8474,"name":"address","nodeType":"ElementaryTypeName","src":"2702:7:28","typeDescriptions":{}}},"id":8477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2692:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41646d696e2063616e6e6f74206265207a65726f2061646472657373","id":8479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2714:30:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24","typeString":"literal_string \"Admin cannot be zero address\""},"value":"Admin cannot be zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_10657174ead1fc3dc6d1d3f881b335facfc9095796fd15a08f7c17697cf4bb24","typeString":"literal_string \"Admin cannot be zero address\""}],"id":8472,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2684:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2684:61:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8481,"nodeType":"ExpressionStatement","src":"2684:61:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8483,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8458,"src":"2763:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2776:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2763:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d617820737570706c79206d7573742062652067726561746572207468616e2030","id":8486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2779:35:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_70a6648aa72a1e7168c40902f40c67b1d1a9aad6f898271bd268101fd953f64f","typeString":"literal_string \"Max supply must be greater than 0\""},"value":"Max supply must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_70a6648aa72a1e7168c40902f40c67b1d1a9aad6f898271bd268101fd953f64f","typeString":"literal_string \"Max supply must be greater than 0\""}],"id":8482,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2755:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2755:60:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8488,"nodeType":"ExpressionStatement","src":"2755:60:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8490,"name":"_initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8460,"src":"2833:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":8491,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8458,"src":"2851:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2833:28:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c20737570706c792065786365656473206d617820737570706c79","id":8493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2863:35:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_d2b4003947a28bea510e1f497fab95ff4a8fce8b3d30c35cd98d1fb7fcb013e6","typeString":"literal_string \"Initial supply exceeds max supply\""},"value":"Initial supply exceeds max supply"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d2b4003947a28bea510e1f497fab95ff4a8fce8b3d30c35cd98d1fb7fcb013e6","typeString":"literal_string \"Initial supply exceeds max supply\""}],"id":8489,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2825:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2825:74:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8495,"nodeType":"ExpressionStatement","src":"2825:74:28"},{"expression":{"id":8498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8496,"name":"stockSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8387,"src":"2918:11:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8497,"name":"_stockSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8454,"src":"2932:12:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2918:26:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8499,"nodeType":"ExpressionStatement","src":"2918:26:28"},{"expression":{"id":8502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8500,"name":"companyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8389,"src":"2954:11:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8501,"name":"_companyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8456,"src":"2968:12:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2954:26:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8503,"nodeType":"ExpressionStatement","src":"2954:26:28"},{"expression":{"id":8506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8504,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8391,"src":"2990:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8505,"name":"_maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8458,"src":"3002:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2990:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8507,"nodeType":"ExpressionStatement","src":"2990:22:28"},{"expression":{"arguments":[{"id":8509,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"3065:18:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8510,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8462,"src":"3085:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8508,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3054:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3054:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8512,"nodeType":"ExpressionStatement","src":"3054:38:28"},{"expression":{"arguments":[{"id":8514,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8370,"src":"3113:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8515,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8462,"src":"3126:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8513,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3102:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3102:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8517,"nodeType":"ExpressionStatement","src":"3102:31:28"},{"expression":{"arguments":[{"id":8519,"name":"BURNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"3154:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8520,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8462,"src":"3167:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8518,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3143:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3143:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8522,"nodeType":"ExpressionStatement","src":"3143:31:28"},{"expression":{"arguments":[{"id":8524,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8380,"src":"3195:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8525,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8462,"src":"3208:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8523,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3184:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3184:31:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8527,"nodeType":"ExpressionStatement","src":"3184:31:28"},{"expression":{"arguments":[{"id":8529,"name":"COMPLIANCE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8385,"src":"3236:15:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8530,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8462,"src":"3253:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":8528,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3225:10:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":8531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3225:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8532,"nodeType":"ExpressionStatement","src":"3225:35:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8533,"name":"_initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8460,"src":"3314:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3331:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3314:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8547,"nodeType":"IfStatement","src":"3310:133:28","trueBody":{"id":8546,"nodeType":"Block","src":"3334:109:28","statements":[{"expression":{"arguments":[{"id":8537,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8462,"src":"3354:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8538,"name":"_initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8460,"src":"3362:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8536,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"3348:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3348:29:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8540,"nodeType":"ExpressionStatement","src":"3348:29:28"},{"eventCall":{"arguments":[{"id":8542,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8462,"src":"3409:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8543,"name":"_initialSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8460,"src":"3417:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8541,"name":"TokensMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8441,"src":"3396:12:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:36:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8545,"nodeType":"EmitStatement","src":"3391:41:28"}]}}]},"documentation":{"id":8448,"nodeType":"StructuredDocumentation","src":"1998:396:28","text":" @dev Constructor\n @param _name Token name (e.g., \"Dangote Cement Token\")\n @param _symbol Token symbol (e.g., \"DANGCEM\")\n @param _stockSymbol NGX stock symbol (e.g., \"DANGCEM\")\n @param _companyName Full company name\n @param _maxSupply Maximum token supply\n @param _initialSupply Initial token supply to mint\n @param _admin Admin address"},"id":8549,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8465,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8450,"src":"2639:5:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8466,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8452,"src":"2646:7:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":8467,"kind":"baseConstructorSpecifier","modifierName":{"id":8464,"name":"ERC20","nameLocations":["2633:5:28"],"nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"2633:5:28"},"nodeType":"ModifierInvocation","src":"2633:21:28"},{"arguments":[{"id":8469,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8450,"src":"2667:5:28","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":8470,"kind":"baseConstructorSpecifier","modifierName":{"id":8468,"name":"ERC20Permit","nameLocations":["2655:11:28"],"nodeType":"IdentifierPath","referencedDeclaration":1470,"src":"2655:11:28"},"nodeType":"ModifierInvocation","src":"2655:18:28"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8450,"mutability":"mutable","name":"_name","nameLocation":"2434:5:28","nodeType":"VariableDeclaration","scope":8549,"src":"2420:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8449,"name":"string","nodeType":"ElementaryTypeName","src":"2420:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8452,"mutability":"mutable","name":"_symbol","nameLocation":"2463:7:28","nodeType":"VariableDeclaration","scope":8549,"src":"2449:21:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8451,"name":"string","nodeType":"ElementaryTypeName","src":"2449:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8454,"mutability":"mutable","name":"_stockSymbol","nameLocation":"2494:12:28","nodeType":"VariableDeclaration","scope":8549,"src":"2480:26:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8453,"name":"string","nodeType":"ElementaryTypeName","src":"2480:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8456,"mutability":"mutable","name":"_companyName","nameLocation":"2530:12:28","nodeType":"VariableDeclaration","scope":8549,"src":"2516:26:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8455,"name":"string","nodeType":"ElementaryTypeName","src":"2516:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8458,"mutability":"mutable","name":"_maxSupply","nameLocation":"2560:10:28","nodeType":"VariableDeclaration","scope":8549,"src":"2552:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8457,"name":"uint256","nodeType":"ElementaryTypeName","src":"2552:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8460,"mutability":"mutable","name":"_initialSupply","nameLocation":"2588:14:28","nodeType":"VariableDeclaration","scope":8549,"src":"2580:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8459,"name":"uint256","nodeType":"ElementaryTypeName","src":"2580:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8462,"mutability":"mutable","name":"_admin","nameLocation":"2620:6:28","nodeType":"VariableDeclaration","scope":8549,"src":"2612:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8461,"name":"address","nodeType":"ElementaryTypeName","src":"2612:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2410:222:28"},"returnParameters":{"id":8471,"nodeType":"ParameterList","parameters":[],"src":"2674:0:28"},"scope":8894,"src":"2399:1050:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8592,"nodeType":"Block","src":"3691:228:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8563,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8552,"src":"3709:2:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3723:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3715:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8564,"name":"address","nodeType":"ElementaryTypeName","src":"3715:7:28","typeDescriptions":{}}},"id":8567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3715:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3709:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74206d696e7420746f207a65726f2061646472657373","id":8569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3727:29:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9","typeString":"literal_string \"Cannot mint to zero address\""},"value":"Cannot mint to zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9","typeString":"literal_string \"Cannot mint to zero address\""}],"id":8562,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3701:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:56:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8571,"nodeType":"ExpressionStatement","src":"3701:56:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":8573,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"3775:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3775:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8575,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8554,"src":"3791:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3775:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":8577,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8391,"src":"3801:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3775:35:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45786365656473206d6178696d756d20737570706c79","id":8579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3812:24:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_b83e72630929d78477fef4cca5c963cb5d623236248c325d9816c0b16266bfe6","typeString":"literal_string \"Exceeds maximum supply\""},"value":"Exceeds maximum supply"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b83e72630929d78477fef4cca5c963cb5d623236248c325d9816c0b16266bfe6","typeString":"literal_string \"Exceeds maximum supply\""}],"id":8572,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3767:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3767:70:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8581,"nodeType":"ExpressionStatement","src":"3767:70:28"},{"expression":{"arguments":[{"id":8583,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8552,"src":"3862:2:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8584,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8554,"src":"3866:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8582,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"3856:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3856:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8586,"nodeType":"ExpressionStatement","src":"3856:17:28"},{"eventCall":{"arguments":[{"id":8588,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8552,"src":"3901:2:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8589,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8554,"src":"3905:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8587,"name":"TokensMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8441,"src":"3888:12:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3888:24:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8591,"nodeType":"EmitStatement","src":"3883:29:28"}]},"documentation":{"id":8550,"nodeType":"StructuredDocumentation","src":"3455:145:28","text":" @dev Mint tokens to specified address\n @param to Address to mint tokens to\n @param amount Amount of tokens to mint"},"functionSelector":"40c10f19","id":8593,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8557,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8370,"src":"3665:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8558,"kind":"modifierInvocation","modifierName":{"id":8556,"name":"onlyRole","nameLocations":["3656:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"3656:8:28"},"nodeType":"ModifierInvocation","src":"3656:21:28"},{"id":8560,"kind":"modifierInvocation","modifierName":{"id":8559,"name":"nonReentrant","nameLocations":["3678:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":1823,"src":"3678:12:28"},"nodeType":"ModifierInvocation","src":"3678:12:28"}],"name":"mint","nameLocation":"3614:4:28","nodeType":"FunctionDefinition","parameters":{"id":8555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8552,"mutability":"mutable","name":"to","nameLocation":"3627:2:28","nodeType":"VariableDeclaration","scope":8593,"src":"3619:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8551,"name":"address","nodeType":"ElementaryTypeName","src":"3619:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8554,"mutability":"mutable","name":"amount","nameLocation":"3639:6:28","nodeType":"VariableDeclaration","scope":8593,"src":"3631:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8553,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3618:28:28"},"returnParameters":{"id":8561,"nodeType":"ParameterList","parameters":[],"src":"3691:0:28"},"scope":8894,"src":"3605:314:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8635,"nodeType":"Block","src":"4169:232:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8607,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8596,"src":"4187:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4203:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4195:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8608,"name":"address","nodeType":"ElementaryTypeName","src":"4195:7:28","typeDescriptions":{}}},"id":8611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4195:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4187:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74206275726e2066726f6d207a65726f2061646472657373","id":8613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4207:31:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_615b3d4a6d0bcb2f8abea393d6c2b412bab38052582f8faef4259418487cdc84","typeString":"literal_string \"Cannot burn from zero address\""},"value":"Cannot burn from zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_615b3d4a6d0bcb2f8abea393d6c2b412bab38052582f8faef4259418487cdc84","typeString":"literal_string \"Cannot burn from zero address\""}],"id":8606,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4179:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4179:60:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8615,"nodeType":"ExpressionStatement","src":"4179:60:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8618,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8596,"src":"4267:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8617,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"4257:9:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":8619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4257:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8620,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8598,"src":"4276:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4257:25:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e636520746f206275726e","id":8622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4284:30:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5","typeString":"literal_string \"Insufficient balance to burn\""},"value":"Insufficient balance to burn"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eac0e9db12cd14c1c0291906654a3fa6bfacc1c08081fda717334bc66586bac5","typeString":"literal_string \"Insufficient balance to burn\""}],"id":8616,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4249:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4249:66:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8624,"nodeType":"ExpressionStatement","src":"4249:66:28"},{"expression":{"arguments":[{"id":8626,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8596,"src":"4340:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8627,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8598,"src":"4346:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8625,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"4334:5:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4334:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8629,"nodeType":"ExpressionStatement","src":"4334:19:28"},{"eventCall":{"arguments":[{"id":8631,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8596,"src":"4381:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8632,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8598,"src":"4387:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8630,"name":"TokensBurned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8447,"src":"4368:12:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4368:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8634,"nodeType":"EmitStatement","src":"4363:31:28"}]},"documentation":{"id":8594,"nodeType":"StructuredDocumentation","src":"3925:151:28","text":" @dev Burn tokens from specified address\n @param from Address to burn tokens from\n @param amount Amount of tokens to burn"},"functionSelector":"9dc29fac","id":8636,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8601,"name":"BURNER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"4143:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8602,"kind":"modifierInvocation","modifierName":{"id":8600,"name":"onlyRole","nameLocations":["4134:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4134:8:28"},"nodeType":"ModifierInvocation","src":"4134:21:28"},{"id":8604,"kind":"modifierInvocation","modifierName":{"id":8603,"name":"nonReentrant","nameLocations":["4156:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":1823,"src":"4156:12:28"},"nodeType":"ModifierInvocation","src":"4156:12:28"}],"name":"burn","nameLocation":"4090:4:28","nodeType":"FunctionDefinition","parameters":{"id":8599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8596,"mutability":"mutable","name":"from","nameLocation":"4103:4:28","nodeType":"VariableDeclaration","scope":8636,"src":"4095:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8595,"name":"address","nodeType":"ElementaryTypeName","src":"4095:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8598,"mutability":"mutable","name":"amount","nameLocation":"4117:6:28","nodeType":"VariableDeclaration","scope":8636,"src":"4109:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8597,"name":"uint256","nodeType":"ElementaryTypeName","src":"4109:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4094:30:28"},"returnParameters":{"id":8605,"nodeType":"ParameterList","parameters":[],"src":"4169:0:28"},"scope":8894,"src":"4081:320:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8646,"nodeType":"Block","src":"4509:25:28","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8643,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"4519:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4519:8:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8645,"nodeType":"ExpressionStatement","src":"4519:8:28"}]},"documentation":{"id":8637,"nodeType":"StructuredDocumentation","src":"4407:49:28","text":" @dev Pause all token transfers"},"functionSelector":"8456cb59","id":8647,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8640,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8380,"src":"4496:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8641,"kind":"modifierInvocation","modifierName":{"id":8639,"name":"onlyRole","nameLocations":["4487:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4487:8:28"},"nodeType":"ModifierInvocation","src":"4487:21:28"}],"name":"pause","nameLocation":"4470:5:28","nodeType":"FunctionDefinition","parameters":{"id":8638,"nodeType":"ParameterList","parameters":[],"src":"4475:2:28"},"returnParameters":{"id":8642,"nodeType":"ParameterList","parameters":[],"src":"4509:0:28"},"scope":8894,"src":"4461:73:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8657,"nodeType":"Block","src":"4646:27:28","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8654,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"4656:8:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4656:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8656,"nodeType":"ExpressionStatement","src":"4656:10:28"}]},"documentation":{"id":8648,"nodeType":"StructuredDocumentation","src":"4540:51:28","text":" @dev Unpause all token transfers"},"functionSelector":"3f4ba83a","id":8658,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8651,"name":"PAUSER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8380,"src":"4633:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8652,"kind":"modifierInvocation","modifierName":{"id":8650,"name":"onlyRole","nameLocations":["4624:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4624:8:28"},"nodeType":"ModifierInvocation","src":"4624:21:28"}],"name":"unpause","nameLocation":"4605:7:28","nodeType":"FunctionDefinition","parameters":{"id":8649,"nodeType":"ParameterList","parameters":[],"src":"4612:2:28"},"returnParameters":{"id":8653,"nodeType":"ParameterList","parameters":[],"src":"4646:0:28"},"scope":8894,"src":"4596:77:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8680,"nodeType":"Block","src":"4946:89:28","statements":[{"expression":{"id":8673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8669,"name":"blacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8395,"src":"4956:11:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8671,"indexExpression":{"id":8670,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8661,"src":"4968:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4956:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8672,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8663,"src":"4979:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4956:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8674,"nodeType":"ExpressionStatement","src":"4956:29:28"},{"eventCall":{"arguments":[{"id":8676,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8661,"src":"5012:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8677,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8663,"src":"5021:6:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8675,"name":"Blacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8425,"src":"5000:11:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":8678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5000:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8679,"nodeType":"EmitStatement","src":"4995:33:28"}]},"documentation":{"id":8659,"nodeType":"StructuredDocumentation","src":"4679:173:28","text":" @dev Add/remove address from blacklist\n @param account Address to blacklist/unblacklist\n @param status True to blacklist, false to unblacklist"},"functionSelector":"d01dd6d2","id":8681,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8666,"name":"COMPLIANCE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8385,"src":"4929:15:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8667,"kind":"modifierInvocation","modifierName":{"id":8665,"name":"onlyRole","nameLocations":["4920:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4920:8:28"},"nodeType":"ModifierInvocation","src":"4920:25:28"}],"name":"setBlacklisted","nameLocation":"4866:14:28","nodeType":"FunctionDefinition","parameters":{"id":8664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8661,"mutability":"mutable","name":"account","nameLocation":"4889:7:28","nodeType":"VariableDeclaration","scope":8681,"src":"4881:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8660,"name":"address","nodeType":"ElementaryTypeName","src":"4881:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8663,"mutability":"mutable","name":"status","nameLocation":"4903:6:28","nodeType":"VariableDeclaration","scope":8681,"src":"4898:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8662,"name":"bool","nodeType":"ElementaryTypeName","src":"4898:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4880:30:28"},"returnParameters":{"id":8668,"nodeType":"ParameterList","parameters":[],"src":"4946:0:28"},"scope":8894,"src":"4857:178:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8703,"nodeType":"Block","src":"5287:97:28","statements":[{"expression":{"id":8696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8692,"name":"dailyTransferLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8399,"src":"5297:19:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8694,"indexExpression":{"id":8693,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8684,"src":"5317:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5297:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8695,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8686,"src":"5328:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5297:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8697,"nodeType":"ExpressionStatement","src":"5297:36:28"},{"eventCall":{"arguments":[{"id":8699,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8684,"src":"5362:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8700,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8686,"src":"5371:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8698,"name":"DailyLimitSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8431,"src":"5348:13:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5348:29:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8702,"nodeType":"EmitStatement","src":"5343:34:28"}]},"documentation":{"id":8682,"nodeType":"StructuredDocumentation","src":"5041:151:28","text":" @dev Set daily transfer limit for an address\n @param account Address to set limit for\n @param limit Daily transfer limit"},"functionSelector":"2803212f","id":8704,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8689,"name":"COMPLIANCE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8385,"src":"5270:15:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8690,"kind":"modifierInvocation","modifierName":{"id":8688,"name":"onlyRole","nameLocations":["5261:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"5261:8:28"},"nodeType":"ModifierInvocation","src":"5261:25:28"}],"name":"setDailyLimit","nameLocation":"5206:13:28","nodeType":"FunctionDefinition","parameters":{"id":8687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8684,"mutability":"mutable","name":"account","nameLocation":"5228:7:28","nodeType":"VariableDeclaration","scope":8704,"src":"5220:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8683,"name":"address","nodeType":"ElementaryTypeName","src":"5220:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8686,"mutability":"mutable","name":"limit","nameLocation":"5245:5:28","nodeType":"VariableDeclaration","scope":8704,"src":"5237:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8685,"name":"uint256","nodeType":"ElementaryTypeName","src":"5237:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5219:32:28"},"returnParameters":{"id":8691,"nodeType":"ParameterList","parameters":[],"src":"5287:0:28"},"scope":8894,"src":"5197:187:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8721,"nodeType":"Block","src":"5585:96:28","statements":[{"expression":{"id":8715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8713,"name":"maxTransactionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8419,"src":"5595:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8714,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8707,"src":"5618:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5595:29:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8716,"nodeType":"ExpressionStatement","src":"5595:29:28"},{"eventCall":{"arguments":[{"id":8718,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8707,"src":"5667:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8717,"name":"MaxTransactionAmountUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8435,"src":"5639:27:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5639:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8720,"nodeType":"EmitStatement","src":"5634:40:28"}]},"documentation":{"id":8705,"nodeType":"StructuredDocumentation","src":"5390:106:28","text":" @dev Set maximum transaction amount\n @param amount New maximum transaction amount"},"functionSelector":"1e293c10","id":8722,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8710,"name":"COMPLIANCE_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8385,"src":"5568:15:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":8711,"kind":"modifierInvocation","modifierName":{"id":8709,"name":"onlyRole","nameLocations":["5559:8:28"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"5559:8:28"},"nodeType":"ModifierInvocation","src":"5559:25:28"}],"name":"setMaxTransactionAmount","nameLocation":"5510:23:28","nodeType":"FunctionDefinition","parameters":{"id":8708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8707,"mutability":"mutable","name":"amount","nameLocation":"5542:6:28","nodeType":"VariableDeclaration","scope":8722,"src":"5534:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8706,"name":"uint256","nodeType":"ElementaryTypeName","src":"5534:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5533:16:28"},"returnParameters":{"id":8712,"nodeType":"ParameterList","parameters":[],"src":"5585:0:28"},"scope":8894,"src":"5501:180:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8733,"nodeType":"Block","src":"5805:48:28","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8728,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5822:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5828:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"5822:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31","id":8730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5840:6:28","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"src":"5822:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8727,"id":8732,"nodeType":"Return","src":"5815:31:28"}]},"documentation":{"id":8723,"nodeType":"StructuredDocumentation","src":"5687:58:28","text":" @dev Get current day (for daily limits)"},"functionSelector":"3e6968b6","id":8734,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentDay","nameLocation":"5759:13:28","nodeType":"FunctionDefinition","parameters":{"id":8724,"nodeType":"ParameterList","parameters":[],"src":"5772:2:28"},"returnParameters":{"id":8727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8734,"src":"5796:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8725,"name":"uint256","nodeType":"ElementaryTypeName","src":"5796:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5795:9:28"},"scope":8894,"src":"5750:103:28","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8801,"nodeType":"Block","src":"6121:639:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8746,"name":"blacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8395,"src":"6162:11:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8748,"indexExpression":{"id":8747,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8737,"src":"6174:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6162:17:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"baseExpression":{"id":8749,"name":"blacklisted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8395,"src":"6183:11:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8751,"indexExpression":{"id":8750,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8739,"src":"6195:2:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6183:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6162:36:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8756,"nodeType":"IfStatement","src":"6158:79:28","trueBody":{"id":8755,"nodeType":"Block","src":"6200:37:28","statements":[{"expression":{"hexValue":"66616c7365","id":8753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6221:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":8745,"id":8754,"nodeType":"Return","src":"6214:12:28"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8757,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8741,"src":"6299:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8758,"name":"maxTransactionAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8419,"src":"6308:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6299:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8763,"nodeType":"IfStatement","src":"6295:72:28","trueBody":{"id":8762,"nodeType":"Block","src":"6330:37:28","statements":[{"expression":{"hexValue":"66616c7365","id":8760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6351:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":8745,"id":8761,"nodeType":"Return","src":"6344:12:28"}]}},{"assignments":[8765],"declarations":[{"constant":false,"id":8765,"mutability":"mutable","name":"currentDay","nameLocation":"6423:10:28","nodeType":"VariableDeclaration","scope":8801,"src":"6415:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8764,"name":"uint256","nodeType":"ElementaryTypeName","src":"6415:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8768,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":8766,"name":"getCurrentDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8734,"src":"6436:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6436:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6415:36:28"},{"assignments":[8770],"declarations":[{"constant":false,"id":8770,"mutability":"mutable","name":"dailyLimit","nameLocation":"6469:10:28","nodeType":"VariableDeclaration","scope":8801,"src":"6461:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8769,"name":"uint256","nodeType":"ElementaryTypeName","src":"6461:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8781,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8771,"name":"dailyTransferLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8399,"src":"6482:19:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8773,"indexExpression":{"id":8772,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8737,"src":"6502:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6482:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6510:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6482:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":8779,"name":"defaultDailyLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8412,"src":"6542:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6482:77:28","trueExpression":{"baseExpression":{"id":8776,"name":"dailyTransferLimits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8399,"src":"6514:19:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":8778,"indexExpression":{"id":8777,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8737,"src":"6534:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6514:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6461:98:28"},{"assignments":[8783],"declarations":[{"constant":false,"id":8783,"mutability":"mutable","name":"dailyAmount","nameLocation":"6577:11:28","nodeType":"VariableDeclaration","scope":8801,"src":"6569:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8782,"name":"uint256","nodeType":"ElementaryTypeName","src":"6569:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8789,"initialValue":{"baseExpression":{"baseExpression":{"id":8784,"name":"dailyTransferAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8405,"src":"6591:20:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":8786,"indexExpression":{"id":8785,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8737,"src":"6612:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6591:26:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8788,"indexExpression":{"id":8787,"name":"currentDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8765,"src":"6618:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6591:38:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6569:60:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8790,"name":"dailyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8783,"src":"6652:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8791,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8741,"src":"6666:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6652:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8793,"name":"dailyLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8770,"src":"6675:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6652:33:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8798,"nodeType":"IfStatement","src":"6648:76:28","trueBody":{"id":8797,"nodeType":"Block","src":"6687:37:28","statements":[{"expression":{"hexValue":"66616c7365","id":8795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6708:5:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":8745,"id":8796,"nodeType":"Return","src":"6701:12:28"}]}},{"expression":{"hexValue":"74727565","id":8799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6749:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":8745,"id":8800,"nodeType":"Return","src":"6742:11:28"}]},"documentation":{"id":8735,"nodeType":"StructuredDocumentation","src":"5859:158:28","text":" @dev Check if transfer is allowed\n @param from Sender address\n @param to Recipient address\n @param amount Transfer amount"},"id":8802,"implemented":true,"kind":"function","modifiers":[],"name":"_isTransferAllowed","nameLocation":"6031:18:28","nodeType":"FunctionDefinition","parameters":{"id":8742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8737,"mutability":"mutable","name":"from","nameLocation":"6058:4:28","nodeType":"VariableDeclaration","scope":8802,"src":"6050:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8736,"name":"address","nodeType":"ElementaryTypeName","src":"6050:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8739,"mutability":"mutable","name":"to","nameLocation":"6072:2:28","nodeType":"VariableDeclaration","scope":8802,"src":"6064:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8738,"name":"address","nodeType":"ElementaryTypeName","src":"6064:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8741,"mutability":"mutable","name":"amount","nameLocation":"6084:6:28","nodeType":"VariableDeclaration","scope":8802,"src":"6076:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8740,"name":"uint256","nodeType":"ElementaryTypeName","src":"6076:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6049:42:28"},"returnParameters":{"id":8745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8802,"src":"6115:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8743,"name":"bool","nodeType":"ElementaryTypeName","src":"6115:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6114:6:28"},"scope":8894,"src":"6022:738:28","stateMutability":"view","virtual":false,"visibility":"internal"},{"baseFunctions":[1011,1315],"body":{"id":8860,"nodeType":"Block","src":"6935:417:28","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8815,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8805,"src":"6996:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7012:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7004:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8816,"name":"address","nodeType":"ElementaryTypeName","src":"7004:7:28","typeDescriptions":{}}},"id":8819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7004:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6996:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8821,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8807,"src":"7018:2:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7032:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7024:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8822,"name":"address","nodeType":"ElementaryTypeName","src":"7024:7:28","typeDescriptions":{}}},"id":8825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7024:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7018:16:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6996:38:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8851,"nodeType":"IfStatement","src":"6992:305:28","trueBody":{"id":8850,"nodeType":"Block","src":"7036:261:28","statements":[{"expression":{"arguments":[{"arguments":[{"id":8830,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8805,"src":"7077:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8831,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8807,"src":"7083:2:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8809,"src":"7087:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8829,"name":"_isTransferAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8802,"src":"7058:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":8833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7058:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206e6f7420616c6c6f776564","id":8834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7095:22:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_783643401de0e8e7f0730d31a292834de04949f570394ff814aa952c1426c9b7","typeString":"literal_string \"Transfer not allowed\""},"value":"Transfer not allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_783643401de0e8e7f0730d31a292834de04949f570394ff814aa952c1426c9b7","typeString":"literal_string \"Transfer not allowed\""}],"id":8828,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7050:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7050:68:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8836,"nodeType":"ExpressionStatement","src":"7050:68:28"},{"assignments":[8838],"declarations":[{"constant":false,"id":8838,"mutability":"mutable","name":"currentDay","nameLocation":"7197:10:28","nodeType":"VariableDeclaration","scope":8850,"src":"7189:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8837,"name":"uint256","nodeType":"ElementaryTypeName","src":"7189:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8841,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":8839,"name":"getCurrentDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8734,"src":"7210:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7210:15:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7189:36:28"},{"expression":{"id":8848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":8842,"name":"dailyTransferAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8405,"src":"7239:20:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$","typeString":"mapping(address => mapping(uint256 => uint256))"}},"id":8845,"indexExpression":{"id":8843,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8805,"src":"7260:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7239:26:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":8846,"indexExpression":{"id":8844,"name":"currentDay","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8838,"src":"7266:10:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7239:38:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8809,"src":"7281:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7239:47:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8849,"nodeType":"ExpressionStatement","src":"7239:47:28"}]}},{"expression":{"arguments":[{"id":8855,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8805,"src":"7329:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8856,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8807,"src":"7335:2:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8809,"src":"7339:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8852,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"7315:5:28","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_NigerianStockToken_$8894_$","typeString":"type(contract super NigerianStockToken)"}},"id":8854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7321:7:28","memberName":"_update","nodeType":"MemberAccess","referencedDeclaration":1315,"src":"7315:13:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":8858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7315:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8859,"nodeType":"ExpressionStatement","src":"7315:30:28"}]},"documentation":{"id":8803,"nodeType":"StructuredDocumentation","src":"6766:66:28","text":" @dev Override transfer to add compliance checks"},"id":8861,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6846:7:28","nodeType":"FunctionDefinition","overrides":{"id":8813,"nodeType":"OverrideSpecifier","overrides":[{"id":8811,"name":"ERC20","nameLocations":["6913:5:28"],"nodeType":"IdentifierPath","referencedDeclaration":1204,"src":"6913:5:28"},{"id":8812,"name":"ERC20Pausable","nameLocations":["6920:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":1316,"src":"6920:13:28"}],"src":"6904:30:28"},"parameters":{"id":8810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8805,"mutability":"mutable","name":"from","nameLocation":"6862:4:28","nodeType":"VariableDeclaration","scope":8861,"src":"6854:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8804,"name":"address","nodeType":"ElementaryTypeName","src":"6854:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8807,"mutability":"mutable","name":"to","nameLocation":"6876:2:28","nodeType":"VariableDeclaration","scope":8861,"src":"6868:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8806,"name":"address","nodeType":"ElementaryTypeName","src":"6868:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8809,"mutability":"mutable","name":"value","nameLocation":"6888:5:28","nodeType":"VariableDeclaration","scope":8861,"src":"6880:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8808,"name":"uint256","nodeType":"ElementaryTypeName","src":"6880:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6853:41:28"},"returnParameters":{"id":8814,"nodeType":"ParameterList","parameters":[],"src":"6935:0:28"},"scope":8894,"src":"6837:515:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8892,"nodeType":"Block","src":"7676:200:28","statements":[{"expression":{"components":[{"arguments":[],"expression":{"argumentTypes":[],"id":8879,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"7707:4:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":8880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7707:6:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8881,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"7727:6:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":8882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7727:8:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8883,"name":"stockSymbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8387,"src":"7749:11:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":8884,"name":"companyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8389,"src":"7774:11:28","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8885,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"7799:11:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":8886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7799:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8887,"name":"maxSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8391,"src":"7826:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":8888,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"7849:8:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":8889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7849:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":8890,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7693:176:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_storage_$_t_string_storage_$_t_uint256_$_t_uint256_$_t_uint8_$","typeString":"tuple(string memory,string memory,string storage ref,string storage ref,uint256,uint256,uint8)"}},"functionReturnParameters":8878,"id":8891,"nodeType":"Return","src":"7686:183:28"}]},"documentation":{"id":8862,"nodeType":"StructuredDocumentation","src":"7358:45:28","text":" @dev Get token information"},"functionSelector":"abb1dc44","id":8893,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenInfo","nameLocation":"7417:12:28","nodeType":"FunctionDefinition","parameters":{"id":8863,"nodeType":"ParameterList","parameters":[],"src":"7429:2:28"},"returnParameters":{"id":8878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8865,"mutability":"mutable","name":"_name","nameLocation":"7478:5:28","nodeType":"VariableDeclaration","scope":8893,"src":"7464:19:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8864,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8867,"mutability":"mutable","name":"_symbol","nameLocation":"7507:7:28","nodeType":"VariableDeclaration","scope":8893,"src":"7493:21:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8866,"name":"string","nodeType":"ElementaryTypeName","src":"7493:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8869,"mutability":"mutable","name":"_stockSymbol","nameLocation":"7538:12:28","nodeType":"VariableDeclaration","scope":8893,"src":"7524:26:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8868,"name":"string","nodeType":"ElementaryTypeName","src":"7524:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8871,"mutability":"mutable","name":"_companyName","nameLocation":"7574:12:28","nodeType":"VariableDeclaration","scope":8893,"src":"7560:26:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8870,"name":"string","nodeType":"ElementaryTypeName","src":"7560:6:28","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8873,"mutability":"mutable","name":"_totalSupply","nameLocation":"7604:12:28","nodeType":"VariableDeclaration","scope":8893,"src":"7596:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8872,"name":"uint256","nodeType":"ElementaryTypeName","src":"7596:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8875,"mutability":"mutable","name":"_maxSupply","nameLocation":"7634:10:28","nodeType":"VariableDeclaration","scope":8893,"src":"7626:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8874,"name":"uint256","nodeType":"ElementaryTypeName","src":"7626:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8877,"mutability":"mutable","name":"_decimals","nameLocation":"7660:9:28","nodeType":"VariableDeclaration","scope":8893,"src":"7654:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8876,"name":"uint8","nodeType":"ElementaryTypeName","src":"7654:5:28","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"7454:221:28"},"scope":8894,"src":"7408:468:28","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":8895,"src":"742:7136:28","usedErrors":[306,309,564,569,574,583,588,593,1347,1354,1572,1704,1707,1804,1873,1875,3613,3618,3623],"usedEvents":[318,327,336,532,1216,1225,1696,1701,8425,8431,8435,8441,8447]}],"src":"32:7847:28"},"id":28}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol":{"ERC20Pausable":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","paused()":"5c975abb","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","eip712Domain()":"84b0196e","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC-20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xecd08ad8132d88a5fcfd50f76a18583004fcdab4c33fb86343903ae420ca5a2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02422dce2e5305624e5cec644add1baa44bfa98ea131bf6030069089a2f56ca4\",\"dweb:/ipfs/QmcsSUkX7AYXNZE18LYE6JEmv8zZcCZvKfbUm9cSzNQyNo\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Nonces.sol":{"Nonces":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"nonces(address)":"7ecebe00"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Nonces.sol\":\"Nonces\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212203b3afa1277119b640488d4eee45831b9e219afa7ba9b7e447d9596cc7aa3884d64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE GASPRICE STATICCALL SLT PUSH24 0x119B640488D4EEE45831B9E219AFA7BA9B7E447D9596CC7A LOG3 DUP9 0x4D PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"657:1315:13:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212203b3afa1277119b640488d4eee45831b9e219afa7ba9b7e447d9596cc7aa3884d64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE GASPRICE STATICCALL SLT PUSH24 0x119B640488D4EEE45831B9E219AFA7BA9B7E447D9596CC7A LOG3 DUP9 0x4D PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"657:1315:13:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220e6868d3b98367abc648605b5b93651352d49f2e27e5376100353dd385889caa864736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 DUP7 DUP14 EXTCODESIZE SWAP9 CALLDATASIZE PUSH27 0xBC648605B5B93651352D49F2E27E5376100353DD385889CAA86473 PUSH16 0x6C634300081800330000000000000000 ","sourceMap":"1255:3046:16:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220e6868d3b98367abc648605b5b93651352d49f2e27e5376100353dd385889caa864736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 DUP7 DUP14 EXTCODESIZE SWAP9 CALLDATASIZE PUSH27 0xBC648605B5B93651352D49F2E27E5376100353DD385889CAA86473 PUSH16 0x6C634300081800330000000000000000 ","sourceMap":"1255:3046:16:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220349fad931e95b8b8d069aea6857f4fc049eea29c313ad774ba26f08f6d7aaa3964736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE SWAP16 0xAD SWAP4 0x1E SWAP6 0xB8 0xB8 0xD0 PUSH10 0xAEA6857F4FC049EEA29C BALANCE GASPRICE 0xD7 PUSH21 0xBA26F08F6D7AAA3964736F6C634300081800330000 ","sourceMap":"1407:2774:17:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220349fad931e95b8b8d069aea6857f4fc049eea29c313ad774ba26f08f6d7aaa3964736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE SWAP16 0xAD SWAP4 0x1E SWAP6 0xB8 0xB8 0xD0 PUSH10 0xAEA6857F4FC049EEA29C BALANCE GASPRICE 0xD7 PUSH21 0xBA26F08F6D7AAA3964736F6C634300081800330000 ","sourceMap":"1407:2774:17:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220a26ceb9e22e9d3421f2f76b318ebc5f2324cc113daaa2f7b54162df0401c12e964736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 PUSH13 0xEB9E22E9D3421F2F76B318EBC5 CALLCODE ORIGIN 0x4C 0xC1 SGT 0xDA 0xAA 0x2F PUSH28 0x54162DF0401C12E964736F6C63430008180033000000000000000000 ","sourceMap":"297:18982:18:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220a26ceb9e22e9d3421f2f76b318ebc5f2324cc113daaa2f7b54162df0401c12e964736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 PUSH13 0xEB9E22E9D3421F2F76B318EBC5 CALLCODE ORIGIN 0x4C 0xC1 SGT 0xDA 0xAA 0x2F PUSH28 0x54162DF0401C12E964736F6C63430008180033000000000000000000 ","sourceMap":"297:18982:18:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212201053a7c72002399eec557de2bd4dc17a1325a524723784b3fefa16d162a61d2864736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT MSTORE8 0xA7 0xC7 KECCAK256 MUL CODECOPY SWAP15 0xEC SSTORE PUSH30 0xE2BD4DC17A1325A524723784B3FEFA16D162A61D2864736F6C6343000818 STOP CALLER ","sourceMap":"344:7470:19:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212201053a7c72002399eec557de2bd4dc17a1325a524723784b3fefa16d162a61d2864736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT MSTORE8 0xA7 0xC7 KECCAK256 MUL CODECOPY SWAP15 0xEC SSTORE PUSH30 0xE2BD4DC17A1325A524723784B3FEFA16D162A61D2864736F6C6343000818 STOP CALLER ","sourceMap":"344:7470:19:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220fdb2563bc6a2525e390068a1e1d3a6ac567219145cd404589172e36ae1589a7964736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xB2 JUMP EXTCODESIZE 0xC6 LOG2 MSTORE MCOPY CODECOPY STOP PUSH9 0xA1E1D3A6AC56721914 TLOAD 0xD4 DIV PC SWAP2 PUSH19 0xE36AE1589A7964736F6C634300081800330000 ","sourceMap":"521:3729:21:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220fdb2563bc6a2525e390068a1e1d3a6ac567219145cd404589172e36ae1589a7964736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xB2 JUMP EXTCODESIZE 0xC6 LOG2 MSTORE MCOPY CODECOPY STOP PUSH9 0xA1E1D3A6AC56721914 TLOAD 0xD4 DIV PC SWAP2 PUSH19 0xE36AE1589A7964736F6C634300081800330000 ","sourceMap":"521:3729:21:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220f558c60c9486582fb7f3f828dbf3aa89c08408258ee976da2fd24181bd220cc064736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PC 0xC6 0xC SWAP5 DUP7 PC 0x2F 0xB7 RETURN 0xF8 0x28 0xDB RETURN 0xAA DUP10 0xC0 DUP5 ADDMOD 0x25 DUP15 0xE9 PUSH23 0xDA2FD24181BD220CC064736F6C63430008180033000000 ","sourceMap":"281:31863:24:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220f558c60c9486582fb7f3f828dbf3aa89c08408258ee976da2fd24181bd220cc064736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 PC 0xC6 0xC SWAP5 DUP7 PC 0x2F 0xB7 RETURN 0xF8 0x28 0xDB RETURN 0xAA DUP10 0xC0 DUP5 ADDMOD 0x25 DUP15 0xE9 PUSH23 0xDA2FD24181BD220CC064736F6C63430008180033000000 ","sourceMap":"281:31863:24:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202e098a98f74c1e6dd1f85ca476023c8aca86f42fe4998906afaf05c2d14039e764736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E MULMOD DUP11 SWAP9 0xF7 0x4C 0x1E PUSH14 0xD1F85CA476023C8ACA86F42FE499 DUP10 MOD 0xAF 0xAF SDIV 0xC2 0xD1 BLOCKHASH CODECOPY 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"769:34173:25:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202e098a98f74c1e6dd1f85ca476023c8aca86f42fe4998906afaf05c2d14039e764736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E MULMOD DUP11 SWAP9 0xF7 0x4C 0x1E PUSH14 0xD1F85CA476023C8ACA86F42FE499 DUP10 MOD 0xAF 0xAF SDIV 0xC2 0xD1 BLOCKHASH CODECOPY 0xE7 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"769:34173:25:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212201af8d1ad17d8f489f18bc1f77d76e6216bb00fc2d3dfcbdfdabee8a90f2f622b64736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xF8 0xD1 0xAD OR 0xD8 DELEGATECALL DUP10 CALL DUP12 0xC1 0xF7 PUSH30 0x76E6216BB00FC2D3DFCBDFDABEE8A90F2F622B64736F6C63430008180033 ","sourceMap":"258:2354:26:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212201af8d1ad17d8f489f18bc1f77d76e6216bb00fc2d3dfcbdfdabee8a90f2f622b64736f6c63430008180033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xF8 0xD1 0xAD OR 0xD8 DELEGATECALL DUP10 CALL DUP12 0xC1 0xF7 PUSH30 0x76E6216BB00FC2D3DFCBDFDABEE8A90F2F622B64736F6C63430008180033 ","sourceMap":"258:2354:26:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/NigerianStockFactory.sol":{"NigerianStockFactory":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"stockSymbol","type":"string"},{"indexed":true,"internalType":"address","name":"tokenAddress","type":"address"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"string","name":"companyName","type":"string"},{"indexed":false,"internalType":"uint256","name":"maxSupply","type":"uint256"}],"name":"StockTokenDeployed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"stockSymbol","type":"string"},{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"TokenUpdated","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allTokens","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"string","name":"stockSymbol","type":"string"},{"internalType":"string","name":"companyName","type":"string"},{"internalType":"uint256","name":"maxSupply","type":"uint256"},{"internalType":"uint256","name":"initialSupply","type":"uint256"}],"internalType":"struct NigerianStockFactory.TokenDeploymentData[]","name":"_tokenData","type":"tuple[]"},{"internalType":"address","name":"_admin","type":"address"}],"name":"batchDeployStockTokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"string","name":"_stockSymbol","type":"string"},{"internalType":"string","name":"_companyName","type":"string"},{"internalType":"uint256","name":"_maxSupply","type":"uint256"},{"internalType":"uint256","name":"_initialSupply","type":"uint256"},{"internalType":"address","name":"_admin","type":"address"}],"name":"deployStockToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAllTokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_stockSymbol","type":"string"}],"name":"getTokenAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_stockSymbol","type":"string"}],"name":"getTokenInfo","outputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"string","name":"companyName","type":"string"},{"internalType":"uint256","name":"totalSupply","type":"uint256"},{"internalType":"uint256","name":"maxSupply","type":"uint256"},{"internalType":"uint8","name":"decimals","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"}],"name":"isRegisteredStockToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isStockToken","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"stockTokens","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_stockSymbol","type":"string"},{"internalType":"address","name":"_newTokenAddress","type":"address"}],"name":"updateStockToken","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523461007e5733156100685760008054336001600160a01b03198216811783556040519290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36001805561423d90816100848239f35b631e4fbdf760e01b815260006004820152602490fd5b600080fdfe608060405260043610156200001357600080fd5b60003560e01c80630c2c0a531462000a7c5780632a5c792a14620009e0578063634282af1462000982578063704f703a1462000805578063715018a614620007a857806378a8956714620007885780637b71586b146200054d5780638da5cb5b14620005225780638e0ad1cc146200020c5780638e445e75146200019d578063c4091236146200019d578063e5b2e3a6146200015a578063f1dc8c8b146200015a5763f2fde38b14620000c557600080fd5b34620001555760203660031901126200015557620000e262000ef6565b620000ec62001276565b6001600160a01b039081169081156200013c57600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b346200015557602036600319011262000155576001600160a01b036200017f62000ef6565b166000526003602052602060ff604060002054166040519015158152f35b346200015557602036600319011262000155576004356001600160401b0381116200015557620001d4602091369060040162000e92565b81620001ea604051928381519384920162000f54565b600290820190815281900382019020546040516001600160a01b039091168152f35b34620001555760208060031936011262000155576004356001600160401b03811162000155576200024290369060040162000e92565b8162000258604051928381519384920162000f54565b600290820190815281900382019020546001600160a01b03168015620004eb576040516306fdde0360e01b8152600081600481855afa9081156200040b57600091620004cc575b506040516395d89b4160e01b815290600082600481865afa9182156200040b57600092620004ab575b5060405163f5ec2eed60e01b815290600082600481875afa9182156200040b5760009262000481575b506040516318160ddd60e01b8152928584600481885afa9384156200040b576000946200044c575b5060405163d5abeb0160e01b8152908682600481895afa9182156200040b5760009262000417575b5060405163313ce56760e01b81529287846004818a5afa9384156200040b57600094620003c6575b5093620003a2620003b1926200039360ff9760e06040519c8d9c8d528c015260e08b019062000f79565b9089820360408b015262000f79565b90878203606089015262000f79565b93608086015260a08501521660c08301520390f35b9093508781813d831162000403575b620003e1818362000e3c565b810103126200015557519360ff8516850362000155579392620003a262000369565b503d620003d5565b6040513d6000823e3d90fd5b9091508681813d831162000444575b62000432818362000e3c565b81010312620001555751908762000341565b503d62000426565b9093508581813d831162000479575b62000467818362000e3c565b81010312620001555751928662000319565b503d6200045b565b620004a39192503d806000833e6200049a818362000e3c565b8101906200120b565b9085620002f1565b620004c49192503d806000833e6200049a818362000e3c565b9084620002c8565b620004e491503d806000833e6200049a818362000e3c565b836200029f565b60405162461bcd60e51b815260048101839052600f60248201526e151bdad95b881b9bdd08199bdd5b99608a1b6044820152606490fd5b346200015557600036600319011262000155576000546040516001600160a01b039091168152602090f35b34620001555760e036600319011262000155576004356001600160401b03811162000155576200058290369060040162000e92565b6024356001600160401b0381116200015557620005a490369060040162000e92565b906044356001600160401b0381116200015557620005c790369060040162000e92565b6064356001600160401b0381116200015557620005e990369060040162000e92565b9260c4356001600160a01b038116900362000155576200060862001276565b62000612620012a3565b620006208251151562001040565b6200065a60405183516200063981836020880162000f54565b60029082019081528190036020019020546001600160a01b0316156200108d565b6200067260c4356001600160a01b0316151562000fc8565b60405190612f408083018381106001600160401b0382111762000772578392620006b192620012c8853960c43591888760a435938a60843594620010da565b03906000f09283156200040b577f94388f0c0d4b29e278b2169cc87c7693bdfab9afa4434111c9f0952076b83c3e6200074d9360209560018060a01b03169485946040518881835162000708818385880162000f54565b81016002815203019020866001600160601b0360a01b82541617905585600052600388526040600020600160ff1982541617905562000747866200114c565b620011b7565b92620007636040519283926084359184620011d9565b0390a360018055604051908152f35b634e487b7160e01b600052604160045260246000fd5b346200015557600036600319011262000155576020600454604051908152f35b34620001555760003660031901126200015557620007c562001276565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346200015557604036600319011262000155576004356001600160401b03811162000155576200083a90369060040162000e92565b6200084462000edf565b6200084e62001276565b6200085c8251151562001040565b6001600160a01b038181169290919083156200093e5762000747620008fb92620008b960206040519687828188516200089a81848c019d8e62000f54565b8101600281520301902054169660405180938192885192839162000f54565b81016002815203019020866001600160601b0360a01b8254161790558462000922575b8560005260036020526040600020600160ff198254161790556200114c565b7fe1dfa83513a4b65c296bc64d8a68945cb723d798739225012d7167dbb2d6e3fc600080a4005b846000526003602052604060002060ff198154169055620008dc565b606460405162461bcd60e51b815260206004820152602060248201527f4e657720746f6b656e20616464726573732063616e6e6f74206265207a65726f6044820152fd5b34620001555760203660031901126200015557600435600454811015620001555760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01546040516001600160a01b039091168152602090f35b34620001555760003660031901126200015557604051806004549182815260208091019260046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b916000905b82821062000a5b5762000a578562000a4a8189038262000e3c565b6040519182918262000f0d565b0390f35b83546001600160a01b03168652948501946001938401939091019062000a2f565b346200015557604036600319011262000155576004356001600160401b0381116200015557366023820112156200015557806004013562000abd8162000e5e565b9162000acd604051938462000e3c565b8183526024602084019260051b82010190368211620001555760248101925b82841062000d2e578462000aff62000edf565b9062000b0a62001276565b62000b14620012a3565b80511562000cf05762000b326001600160a01b038316151562000fc8565b80519162000b408362000e5e565b9262000b50604051948562000e3c565b80845262000b61601f199162000e5e565b0136602085013760005b825181101562000cdc5762000b81818462001015565b519062000b95604083015151151562001040565b604082015162000bbc906001600160a01b039062000bb39062000fa0565b5416156200108d565b81516020830151604084015190606085015192608086015160a0870151906040519586612f408101106001600160401b03612f40890111176200077257869562000c16958b95612f40620012c88a39612f408901620010da565b03906000f09182156200040b5760408101516001936001600160a01b0316919062000c419062000fa0565b80546001600160a01b031916831790556000828152600360205260409020805460ff19168517905562000c74826200114c565b8162000c81848962001015565b527f94388f0c0d4b29e278b2169cc87c7693bdfab9afa4434111c9f0952076b83c3e604082015191805162000cd262000cc46080606085015194015195620011b7565b9460405193849384620011d9565b0390a30162000b6b565b600180556040518062000a57868262000f0d565b60405162461bcd60e51b8152602060048201526016602482015275139bc81d1bdad95b8819185d18481c1c9bdd9a59195960521b6044820152606490fd5b83356001600160401b0381116200015557820160c09182602319833603011262000155576040519283018381106001600160401b03821117620007725760405260248201356001600160401b038111620001555762000d94906024369185010162000e92565b835260448201356001600160401b038111620001555762000dbc906024369185010162000e92565b602084015260648201356001600160401b038111620001555762000de7906024369185010162000e92565b60408401526084820135926001600160401b038411620001555760c46020949362000e1a86956024369184010162000e92565b606084015260a48101356080840152013560a082015281520193019262000aec565b90601f801991011681019081106001600160401b038211176200077257604052565b6001600160401b038111620007725760051b60200190565b6001600160401b0381116200077257601f01601f191660200190565b81601f82011215620001555780359062000eac8262000e76565b9262000ebc604051948562000e3c565b828452602083830101116200015557816000926020809301838601378301015290565b602435906001600160a01b03821682036200015557565b600435906001600160a01b03821682036200015557565b602090602060408183019282815285518094520193019160005b82811062000f36575050505090565b83516001600160a01b03168552938101939281019260010162000f27565b60005b83811062000f685750506000910152565b818101518382015260200162000f57565b9060209162000f948151809281855285808601910162000f54565b601f01601f1916010190565b602062000fbb91816040519382858094519384920162000f54565b8101600281520301902090565b1562000fd057565b60405162461bcd60e51b815260206004820152601c60248201527f41646d696e2063616e6e6f74206265207a65726f2061646472657373000000006044820152606490fd5b80518210156200102a5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b156200104857565b60405162461bcd60e51b815260206004820152601c60248201527f53746f636b2073796d626f6c2063616e6e6f7420626520656d707479000000006044820152606490fd5b156200109557565b60405162461bcd60e51b815260206004820152601a60248201527f53746f636b20746f6b656e20616c7265616479206578697374730000000000006044820152606490fd5b959262001122906200111362001131946200110460c0999c9b989560e08c5260e08c019062000f79565b908a820360208c015262000f79565b9088820360408a015262000f79565b90868203606088015262000f79565b608085019690965260a08401526001600160a01b0316910152565b60045468010000000000000000811015620007725760018101806004558110156200102a5760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b03909216919091179055565b620011d19060206040519282848094519384920162000f54565b810103902090565b9392916200120690620011f760409360608852606088019062000f79565b90868203602088015262000f79565b930152565b60208183031262000155578051906001600160401b03821162000155570181601f8201121562000155578051620012428162000e76565b9262001252604051948562000e3c565b81845260208284010111620001555762001273916020808501910162000f54565b90565b6000546001600160a01b031633036200128b57565b60405163118cdaa760e01b8152336004820152602490fd5b600260015414620012b5576002600155565b604051633ee5aeb560e01b8152600490fdfe610160806040523462000a2c5762002f40803803809162000021828562000a31565b833981019060e08183031262000a2c5780516001600160401b03811162000a2c57826200005091830162000a7a565b60208201516001600160401b03811162000a2c57836200007291840162000a7a565b60408301516001600160401b03811162000a2c57846200009491850162000a7a565b606084015190946001600160401b03821162000a2c57620000b791850162000a7a565b9360808401519160c060a08601519501519360018060a01b038516850362000a2c5760408051929083016001600160401b03811184821017620005fb5760405260018352603160f81b602084015281516001600160401b038111620005fb57600354600181811c9116801562000a21575b6020821014620005da57601f8111620009bb575b50806020601f8211600114620009315760009162000925575b508160011b916000199060031b1c1916176003555b8051906001600160401b038211620005fb5760045490600182811c921680156200091a575b6020831014620005da5781601f849311620008a5575b50602090601f831160011462000816576000926200080a575b50508160011b916000199060031b1c1916176004555b620001df8162000dd3565b61012052620001ee8262000f78565b6101405260208151910120908160e0526020815191012080610100524660a0526040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a0815260c081019181831060018060401b03841117620005fb576040839052815190206080523060c0526001600a5569d3c21bcecceda100000060115569152d02c7e14af68000006012556001600160a01b03851615620007c65750508115620007775781841162000728578051906001600160401b038211620005fb57600b5490600182811c921680156200071d575b6020831014620005da5781601f849311620006a8575b50602090601f83116001146200061d5760009262000611575b50508160011b916000199060031b1c191617600b555b83516001600160401b038111620005fb57600c54600181811c91168015620005f0575b6020821014620005da57601f811162000570575b50602094601f82116001146200050357948192939495600092620004f7575b50508160011b916000199060031b1c191617600c555b600d55620003a18162000ad5565b50620003ad8162000b56565b50620003b98162000bf9565b50620003c58162000c97565b50620003d18162000d35565b50816200042b575b604051611e509081620010d082396080518161186c015260a05181611938015260c05181611836015260e051816118bb015261010051816118e1015261012051816109af015261014051816109d90152f35b60ff60085416620004e557600254828101809111620004cf576002556001600160a01b038116600081815260208181526040808320805487019055518581527f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a42739491939192907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908590a36040519384526001600160a01b031692a23880620003d9565b634e487b7160e01b600052601160045260246000fd5b60405163d93c066560e01b8152600490fd5b0151905038806200037d565b601f19821695600c60005260206000209160005b88811062000557575083600195969798106200053d575b505050811b01600c5562000393565b015160001960f88460031b161c191690553880806200052e565b9192602060018192868501518155019401920162000517565b600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7601f830160051c81019160208410620005cf575b601f0160051c01905b818110620005c257506200035e565b60008155600101620005b3565b9091508190620005aa565b634e487b7160e01b600052602260045260246000fd5b90607f16906200034a565b634e487b7160e01b600052604160045260246000fd5b01519050388062000311565b600b60009081527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db99350601f198516905b8181106200068f575090846001959493921062000675575b505050811b01600b5562000327565b015160001960f88460031b161c1916905538808062000666565b929360206001819287860151815501950193016200064e565b600b6000529091507f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9601f840160051c8101916020851062000712575b90601f859493920160051c01905b818110620007025750620002f8565b60008155849350600101620006f3565b9091508190620006e5565b91607f1691620002e2565b60405162461bcd60e51b815260206004820152602160248201527f496e697469616c20737570706c792065786365656473206d617820737570706c6044820152607960f81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f4d617820737570706c79206d7573742062652067726561746572207468616e206044820152600360fc1b6064820152608490fd5b62461bcd60e51b8252602060c4820152601c60e48201527f41646d696e2063616e6e6f74206265207a65726f20616464726573730000000061010490910152606490fd5b015190503880620001be565b6004600090815293507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b91905b601f198416851062000889576001945083601f198116106200086f575b505050811b01600455620001d4565b015160001960f88460031b161c1916905538808062000860565b8181015183556020948501946001909301929091019062000843565b60046000529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c810191602085106200090f575b90601f859493920160051c01905b818110620008ff5750620001a5565b60008155849350600101620008f0565b9091508190620008e2565b91607f16916200018f565b90508301513862000155565b6003600090815292507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b905b601f1983168410620009a2576001935082601f1981161062000988575b5050811b016003556200016a565b85015160001960f88460031b161c1916905538806200097a565b858101518255602093840193600190920191016200095d565b60036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c81016020841062000a19575b601f830160051c8201811062000a0c5750506200013c565b60008155600101620009f4565b5080620009f4565b90607f169062000128565b600080fd5b601f909101601f19168101906001600160401b03821190821017620005fb57604052565b60005b83811062000a695750506000910152565b818101518382015260200162000a58565b81601f8201121562000a2c5780516001600160401b038111620005fb576040519262000ab1601f8301601f19166020018562000a31565b8184526020828401011162000a2c5762000ad2916020808501910162000a55565b90565b6001600160a01b031660008181527fec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b602052604081205490919060ff1662000b525781805260096020526040822081835260205260408220600160ff19825416179055339160008051602062002f208339815191528180a4600190565b5090565b6001600160a01b031660008181527fd5d09b8f3165a736d25b1a14611612ac91830c1b82012b1c33b2dac7c90a064960205260408120549091907f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a69060ff1662000bf45780835260096020526040832082845260205260408320600160ff1982541617905560008051602062002f20833981519152339380a4600190565b505090565b6001600160a01b031660008181527fafc27dadd95cc92cc3511384503afbc19841fe8e9d61fefc7f2fb1e6a3bd40c260205260408120549091907f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8489060ff1662000bf45780835260096020526040832082845260205260408320600160ff1982541617905560008051602062002f20833981519152339380a4600190565b6001600160a01b031660008181527f84574a31e2f767388bfa57bc81ff2590df95d3022c04c363cca3e37ee960863160205260408120549091907f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a9060ff1662000bf45780835260096020526040832082845260205260408320600160ff1982541617905560008051602062002f20833981519152339380a4600190565b6001600160a01b031660008181527f4fcb20797bc22b6bdf05ed948026fdc1b31b30d107ac0811a08b18c975bbd64b60205260408120549091907f442a94f1a1fac79af32856af2a64f63648cfa2ef3b98610a5bb7cbec4cee69859060ff1662000bf45780835260096020526040832082845260205260408320600160ff1982541617905560008051602062002f20833981519152339380a4600190565b8051602091908281101562000e53575090601f82511162000e11578082519201519080831062000e0257501790565b82600019910360031b1b161790565b60449062000e459260405193849263305a27a960e01b84528060048501528251928391826024870152868601910162000a55565b601f01601f19168101030190fd5b6001600160401b038111620005fb576005928354926001938481811c9116801562000f6d575b83821014620005da57601f811162000f36575b5081601f841160011462000ecc575092829391839260009462000ec0575b50501b916000199060031b1c191617905560ff90565b01519250388062000eaa565b919083601f1981168760005284600020946000905b8883831062000f1b575050501062000f01575b505050811b01905560ff90565b015160001960f88460031b161c1916905538808062000ef4565b85870151885590960195948501948793509081019062000ee1565b8560005284601f846000209201871c820191601f8601881c015b82811062000f6057505062000e8c565b6000815501859062000f50565b90607f169062000e79565b80516020908181101562000fa55750601f82511162000e11578082519201519080831062000e0257501790565b906001600160401b038211620005fb57600654926001938481811c91168015620010c4575b83821014620005da57601f81116200108a575b5081601f84116001146200101e575092829391839260009462001012575b50501b916000199060031b1c19161760065560ff90565b01519250388062000ffb565b919083601f198116600660005284600020946000905b888383106200106f575050501062001055575b505050811b0160065560ff90565b015160001960f88460031b161c1916905538808062001047565b85870151885590960195948501948793509081019062001034565b600660005284601f84600020920160051c820191601f860160051c015b828110620010b757505062000fdd565b60008155018590620010a7565b90607f169062000fca56fe608060408181526004918236101561001657600080fd5b60009260e08435811c92836301ffc9a71461118a57508263062d3bd71461114e57826306fdde0314611128578263095ea7b3146110fd57826318160ddd146110dd5782631e293c101461108e57826323b872dd14610f9a578263248a9ca314610f6e5782632803212f14610f05578263282c51f314610ec95782632f2ff15d14610e9f578263313ce56714610e825782633644e51514610e5d57826336568abe14610e165782633e6968b614610df55782633f4ba83a14610d8a57826340c10f1914610be05782635c975abb14610bbb57826370a0823114610b835782637d89d05c14610b4a5782637ecebe0014610b115782638456cb5914610ab557826384b0196e1461099757826391d148541461094f57826395d89b41146109295782639dc29fac14610740578263a217fddf14610724578263a9059cbb146106f2578263abb1dc4414610624578263c76b088814610604578263c87cbe56146105de578263c8c8ebe4146105be578263d01dd6d21461053b578263d505accf146103d557508163d53913931461039a578163d547741f1461035657508063d5abeb0114610338578063dbac26e9146102fb578063dd62ed3e146102b3578063e63ab1e914610279578063f5ec2eed146102385763fdb98082146101f557600080fd5b3461023457806003193601126102345760209181906001600160a01b0361021a61121e565b168152601084528181206024358252845220549051908152f35b5080fd5b50346102345781600319360112610234578051610275916102638261025c81611459565b0383611519565b519182916020835260208301906111de565b0390f35b5034610234578160031936011261023457602090517f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8152f35b5034610234578060031936011261023457806020926102d061121e565b6102d8611239565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b50346102345760203660031901126102345760209160ff9082906001600160a01b0361032561121e565b168152600e855220541690519015158152f35b5034610234578160031936011261023457602090600d549051908152f35b91905034610396578060031936011261039657610392913561038d600161037b611239565b93838752600960205286200154611634565b61195e565b5080f35b8280fd5b505034610234578160031936011261023457602090517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b90849250346103965781600319360112610396576103f161121e565b6103f9611239565b916044359360643560843560ff8116810361053757814211610520578860018060a01b039283871694858b526007602052828b20918254926001840190558351928760208501957f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98752850152868b1660608501528b608085015260a084015260c083015260c08252810181811067ffffffffffffffff82111761050d578b525190206104db916104d2916104ac611833565b908c519161190160f01b83526002830152602282015260c43591604260a4359220611c6d565b90929192611cfd565b168181036104f257866104ef8787876119f8565b80f35b87516325c0072360e11b815292830152602482015260449150fd5b634e487b7160e01b8b526041875260248bfd5b885163313c898160e11b8152808501839052602490fd5b8780fd5b5050503461023457806003193601126102345761055661121e565b602435908115158092036105ba577fcf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd89160209161059161155e565b6001600160a01b0316808652600e8352848620805460ff191660ff84161790559351908152a280f35b8380fd5b505050346102345781600319360112610234576020906012549051908152f35b505050346102345781600319360112610234578051610275916102638261025c816113cb565b505050346102345781600319360112610234576020906011549051908152f35b839085346106ef57806003193601126106ef575081519161064f8361064881611289565b0384611519565b80519061065f8261025c8161133d565b6106d9600254926106cb600d549380516106838161067c816113cb565b0382611519565b6106be82519461069d8661069681611459565b0387611519565b6106b084519b8b8d9c8d528c01906111de565b908a820360208c01526111de565b91888303908901526111de565b9085820360608701526111de565b91608084015260a0830152601260c08301520390f35b80fd5b5050503461023457806003193601126102345760209061071d61071361121e565b602435903361165a565b5160018152f35b5050503461023457816003193601126102345751908152602090f35b5090503461039657816003193601126103965761075b61121e565b91602435907f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8489283865260209360098552828720338852855260ff83882054161561090e57506107a96119d5565b6001600160a01b0385169485156108cc5785875286855283838820541061088a576107d2611a8b565b858752868552828720549184831061085657505090827ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb69493928688528785520381872055816002540360025585857fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef858451868152a351908152a26001600a5580f35b835163391434e360e21b81526001600160a01b03909216908201908152602081018390526040810185905281906060010390fd5b5083606492519162461bcd60e51b8352820152601c60248201527f496e73756666696369656e742062616c616e636520746f206275726e000000006044820152fd5b5083606492519162461bcd60e51b8352820152601d60248201527f43616e6e6f74206275726e2066726f6d207a65726f20616464726573730000006044820152fd5b604492519163e2517d3f60e01b835233908301526024820152fd5b505050346102345781600319360112610234578051610275916102638261025c8161133d565b509050346103965781600319360112610396578160209360ff92610971611239565b90358252600986528282206001600160a01b039091168252855220549151911615158152f35b908385346106ef57806003193601126106ef576109d37f0000000000000000000000000000000000000000000000000000000000000000611aa9565b906109fd7f0000000000000000000000000000000000000000000000000000000000000000611bad565b92805193602093602086019686881067ffffffffffffffff891117610aa25750959390610a5883602092878b999652868652610a4b82519a8b9a600f60f81b8c5280878d01528b01906111de565b91898303908a01526111de565b924660608801523060808801528460a088015286840360c088015251928381520193925b828110610a8b57505050500390f35b835185528695509381019392810192600101610a7c565b634e487b7160e01b855260419052602484fd5b5050503461023457816003193601126102345760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25891610af46115d8565b610afc611a8b565b600160ff19600854161760085551338152a180f35b505050346102345760203660031901126102345760209181906001600160a01b03610b3a61121e565b1681526007845220549051908152f35b505050346102345760203660031901126102345760209181906001600160a01b03610b7361121e565b168152600f845220549051908152f35b505050346102345760203660031901126102345760209181906001600160a01b03610bac61121e565b16815280845220549051908152f35b5050503461023457816003193601126102345760209060ff6008541690519015158152f35b84828534610396578060031936011261039657610bfb61121e565b90602435907f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a69283865260209360098552828720338852855260ff838820541615610d6c5750610c496119d5565b6001600160a01b0316938415610d2b5760025490610c67848361153b565b600d5410610cef575090610ca6837f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a4273959493610ca1611a8b565b61153b565b60025584865285835280862082815401905584867fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef858451868152a351908152a26001600a5580f35b825162461bcd60e51b8152908101859052601660248201527545786365656473206d6178696d756d20737570706c7960501b6044820152606490fd5b83606492519162461bcd60e51b8352820152601b60248201527f43616e6e6f74206d696e7420746f207a65726f206164647265737300000000006044820152fd5b825163e2517d3f60e01b815233818801526024810191909152604490fd5b50905034610396578260031936011261039657610da56115d8565b6008549060ff821615610de7575060ff1916600855513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b8251638dfc202b60e01b8152fd5b50505034610234578160031936011261023457602090516201518042048152f35b50838334610234578060031936011261023457610e31611239565b90336001600160a01b03831603610e4e575061039291923561195e565b5163334bd91960e11b81528390fd5b50505034610234578160031936011261023457602090610e7b611833565b9051908152f35b505050346102345781600319360112610234576020905160128152f35b848285346103965780600319360112610396576103929135610ec4600161037b611239565b6117b3565b50505034610234578160031936011261023457602090517f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8488152f35b505050346102345780600319360112610234577fd3d22ffd28b02735cf411bd7f925bd8da01212c7028153e0d632e2953ac3088e6020610f4361121e565b60243590610f4f61155e565b6001600160a01b0316808652600f83528486208290559351908152a280f35b509050346103965760203660031901126103965781602093600192358152600985522001549051908152f35b838286346106ef5760603660031901126106ef57610fb661121e565b610fbe611239565b916044359360018060a01b038316808352600160205286832033845260205286832054916000198310610ffa575b60208861071d89898961165a565b86831061106257811561104b5733156110345750825260016020908152868320338452815291869020908590039055829061071d87610fec565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b50905034610396576020366003190112610396577f7c1cb3702d8e1fa6d24b12dd90670ab69c6d66d58233103d37da8b07d6b850ac9160209135906110d161155e565b8160125551908152a180f35b505050346102345781600319360112610234576020906002549051908152f35b5050503461023457806003193601126102345760209061071d61111e61121e565b60243590336119f8565b505050346102345781600319360112610234578051610275916102638261025c81611289565b50505034610234578160031936011261023457602090517f442a94f1a1fac79af32856af2a64f63648cfa2ef3b98610a5bb7cbec4cee69858152f35b85908334610396576020366003190112610396573563ffffffff60e01b81168091036103965760209250637965db0b60e01b81149081156111cd575b5015158152f35b6301ffc9a760e01b149050836111c6565b919082519283825260005b84811061120a575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016111e9565b600435906001600160a01b038216820361123457565b600080fd5b602435906001600160a01b038216820361123457565b90600182811c9216801561127f575b602083101461126957565b634e487b7160e01b600052602260045260246000fd5b91607f169161125e565b600354600092916112998261124f565b8082529160209060019081811690811561131857506001146112bc575b50505050565b9293945060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b926000935b8585106113055750505060209250010190388080806112b6565b80548585018401529382019381016112eb565b92505050602093945060ff929192191683830152151560051b010190388080806112b6565b6004546000929161134d8261124f565b80825291602090600190818116908115611318575060011461136f5750505050565b9293945060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b926000935b8585106113b85750505060209250010190388080806112b6565b805485850184015293820193810161139e565b600b54600092916113db8261124f565b8082529160209060019081811690811561131857506001146113fd5750505050565b92939450600b6000527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9926000935b8585106114465750505060209250010190388080806112b6565b805485850184015293820193810161142c565b600c54600092916114698261124f565b80825291602090600190818116908115611318575060011461148b5750505050565b92939450600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7926000935b8585106114d45750505060209250010190388080806112b6565b80548585018401529382019381016114ba565b6040810190811067ffffffffffffffff82111761150357604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761150357604052565b9190820180921161154857565b634e487b7160e01b600052601160045260246000fd5b3360009081527f4fcb20797bc22b6bdf05ed948026fdc1b31b30d107ac0811a08b18c975bbd64b60205260409020547f442a94f1a1fac79af32856af2a64f63648cfa2ef3b98610a5bb7cbec4cee69859060ff16156115ba5750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b3360009081527f84574a31e2f767388bfa57bc81ff2590df95d3022c04c363cca3e37ee960863160205260409020547f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a9060ff16156115ba5750565b80600052600960205260406000203360005260205260ff60406000205416156115ba5750565b90916001600160a01b038083169290831561179a57841693841561178157826116839183611d82565b15611745576000838152601060205260409182822062015180420483526020528282206116b185825461153b565b90556116bb611a8b565b848252816020528282205490848210611714575091808285602095887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef98965282875203828220558781522082815401905551908152a3565b835163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101849052606490fd5b60405162461bcd60e51b8152602060048201526014602482015273151c985b9cd9995c881b9bdd08185b1b1bddd95960621b6044820152606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b906000918083526009602052604083209160018060a01b03169182845260205260ff6040842054161560001461182e5780835260096020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611935575b1561188e577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff8211176115035760405251902090565b507f00000000000000000000000000000000000000000000000000000000000000004614611865565b906000918083526009602052604083209160018060a01b03169182845260205260ff60408420541660001461182e578083526009602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b6002600a54146119e6576002600a55565b604051633ee5aeb560e01b8152600490fd5b6001600160a01b03908116918215611a725716918215611a595760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b604051634a1406b160e11b815260006004820152602490fd5b60405163e602df0560e01b815260006004820152602490fd5b60ff60085416611a9757565b60405163d93c066560e01b8152600490fd5b60ff8114611ae75760ff811690601f8211611ad55760405191611acb836114e7565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b50604051600554816000611afa8361124f565b80835292602090600190818116908115611b895750600114611b28575b5050611b2592500382611519565b90565b91509260056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0936000925b828410611b715750611b259450505081016020013880611b17565b85548785018301529485019486945092810192611b56565b91505060209250611b2594915060ff191682840152151560051b8201013880611b17565b60ff8114611bcf5760ff811690601f8211611ad55760405191611acb836114e7565b50604051600654816000611be28361124f565b80835292602090600190818116908115611b895750600114611c0c575050611b2592500382611519565b91509260066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f936000925b828410611c555750611b259450505081016020013880611b17565b85548785018301529485019486945092810192611c3a565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411611cf157926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa15611ce55780516001600160a01b03811615611cdc57918190565b50809160019190565b604051903d90823e3d90fd5b50505060009160039190565b6004811015611d6c5780611d0f575050565b60018103611d295760405163f645eedf60e01b8152600490fd5b60028103611d4a5760405163fce698f760e01b815260048101839052602490fd5b600314611d545750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fd5b919060018060a01b0380931690600093828552600e60205260ff604086205416918215611e07575b505061182e57601254821161182e578252600f60205260408220548015611dfa57611def90915b6010602052604084206201518042048552602052604084205461153b565b11611b255750600190565b50611def60115491611dd1565b16845250604083205460ff163880611daa56fea264697066735822122020d7f16771b70444d4041c0b6723667f1452ca70018594b409a99119ad91f85464736f6c634300081800332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0da2646970667358221220a021d43280cb39302decb86006678e34d4b5dd4014a78731c6d900bb101ef5b064736f6c63430008180033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x7E JUMPI CALLER ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH2 0x423D SWAP1 DUP2 PUSH2 0x84 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH3 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC2C0A53 EQ PUSH3 0xA7C JUMPI DUP1 PUSH4 0x2A5C792A EQ PUSH3 0x9E0 JUMPI DUP1 PUSH4 0x634282AF EQ PUSH3 0x982 JUMPI DUP1 PUSH4 0x704F703A EQ PUSH3 0x805 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x7A8 JUMPI DUP1 PUSH4 0x78A89567 EQ PUSH3 0x788 JUMPI DUP1 PUSH4 0x7B71586B EQ PUSH3 0x54D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x522 JUMPI DUP1 PUSH4 0x8E0AD1CC EQ PUSH3 0x20C JUMPI DUP1 PUSH4 0x8E445E75 EQ PUSH3 0x19D JUMPI DUP1 PUSH4 0xC4091236 EQ PUSH3 0x19D JUMPI DUP1 PUSH4 0xE5B2E3A6 EQ PUSH3 0x15A JUMPI DUP1 PUSH4 0xF1DC8C8B EQ PUSH3 0x15A JUMPI PUSH4 0xF2FDE38B EQ PUSH3 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH3 0x155 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x155 JUMPI PUSH3 0xE2 PUSH3 0xEF6 JUMP JUMPDEST PUSH3 0xEC PUSH3 0x1276 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH3 0x13C JUMPI PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH3 0x155 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x155 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH3 0x17F PUSH3 0xEF6 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x155 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x155 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x155 JUMPI PUSH3 0x1D4 PUSH1 0x20 SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0xE92 JUMP JUMPDEST DUP2 PUSH3 0x1EA PUSH1 0x40 MLOAD SWAP3 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH3 0xF54 JUMP JUMPDEST PUSH1 0x2 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB DUP3 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x155 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x155 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x155 JUMPI PUSH3 0x242 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0xE92 JUMP JUMPDEST DUP2 PUSH3 0x258 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH3 0xF54 JUMP JUMPDEST PUSH1 0x2 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB DUP3 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH3 0x4EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x6FDDE03 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH3 0x40B JUMPI PUSH1 0x0 SWAP2 PUSH3 0x4CC JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x95D89B41 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x0 DUP3 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH3 0x40B JUMPI PUSH1 0x0 SWAP3 PUSH3 0x4AB JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xF5EC2EED PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x0 DUP3 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH3 0x40B JUMPI PUSH1 0x0 SWAP3 PUSH3 0x481 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP6 DUP5 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH3 0x40B JUMPI PUSH1 0x0 SWAP5 PUSH3 0x44C JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xD5ABEB01 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP7 DUP3 PUSH1 0x4 DUP2 DUP10 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH3 0x40B JUMPI PUSH1 0x0 SWAP3 PUSH3 0x417 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP8 DUP5 PUSH1 0x4 DUP2 DUP11 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH3 0x40B JUMPI PUSH1 0x0 SWAP5 PUSH3 0x3C6 JUMPI JUMPDEST POP SWAP4 PUSH3 0x3A2 PUSH3 0x3B1 SWAP3 PUSH3 0x393 PUSH1 0xFF SWAP8 PUSH1 0xE0 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 DUP14 MSTORE DUP13 ADD MSTORE PUSH1 0xE0 DUP12 ADD SWAP1 PUSH3 0xF79 JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x40 DUP12 ADD MSTORE PUSH3 0xF79 JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x60 DUP10 ADD MSTORE PUSH3 0xF79 JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE AND PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP4 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH3 0x403 JUMPI JUMPDEST PUSH3 0x3E1 DUP2 DUP4 PUSH3 0xE3C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x155 JUMPI MLOAD SWAP4 PUSH1 0xFF DUP6 AND DUP6 SUB PUSH3 0x155 JUMPI SWAP4 SWAP3 PUSH3 0x3A2 PUSH3 0x369 JUMP JUMPDEST POP RETURNDATASIZE PUSH3 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH3 0x444 JUMPI JUMPDEST PUSH3 0x432 DUP2 DUP4 PUSH3 0xE3C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x155 JUMPI MLOAD SWAP1 DUP8 PUSH3 0x341 JUMP JUMPDEST POP RETURNDATASIZE PUSH3 0x426 JUMP JUMPDEST SWAP1 SWAP4 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH3 0x479 JUMPI JUMPDEST PUSH3 0x467 DUP2 DUP4 PUSH3 0xE3C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x155 JUMPI MLOAD SWAP3 DUP7 PUSH3 0x319 JUMP JUMPDEST POP RETURNDATASIZE PUSH3 0x45B JUMP JUMPDEST PUSH3 0x4A3 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH3 0x49A DUP2 DUP4 PUSH3 0xE3C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH3 0x120B JUMP JUMPDEST SWAP1 DUP6 PUSH3 0x2F1 JUMP JUMPDEST PUSH3 0x4C4 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH3 0x49A DUP2 DUP4 PUSH3 0xE3C JUMP JUMPDEST SWAP1 DUP5 PUSH3 0x2C8 JUMP JUMPDEST PUSH3 0x4E4 SWAP2 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH3 0x49A DUP2 DUP4 PUSH3 0xE3C JUMP JUMPDEST DUP4 PUSH3 0x29F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881B9BDD08199BDD5B99 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH3 0x155 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x155 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH3 0x155 JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x155 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x155 JUMPI PUSH3 0x582 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0xE92 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x155 JUMPI PUSH3 0x5A4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0xE92 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x155 JUMPI PUSH3 0x5C7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0xE92 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x155 JUMPI PUSH3 0x5E9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0xE92 JUMP JUMPDEST SWAP3 PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 SUB PUSH3 0x155 JUMPI PUSH3 0x608 PUSH3 0x1276 JUMP JUMPDEST PUSH3 0x612 PUSH3 0x12A3 JUMP JUMPDEST PUSH3 0x620 DUP3 MLOAD ISZERO ISZERO PUSH3 0x1040 JUMP JUMPDEST PUSH3 0x65A PUSH1 0x40 MLOAD DUP4 MLOAD PUSH3 0x639 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH3 0xF54 JUMP JUMPDEST PUSH1 0x2 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH3 0x108D JUMP JUMPDEST PUSH3 0x672 PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH3 0xFC8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2F40 DUP1 DUP4 ADD DUP4 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x772 JUMPI DUP4 SWAP3 PUSH3 0x6B1 SWAP3 PUSH3 0x12C8 DUP6 CODECOPY PUSH1 0xC4 CALLDATALOAD SWAP2 DUP9 DUP8 PUSH1 0xA4 CALLDATALOAD SWAP4 DUP11 PUSH1 0x84 CALLDATALOAD SWAP5 PUSH3 0x10DA JUMP JUMPDEST SUB SWAP1 PUSH1 0x0 CREATE SWAP3 DUP4 ISZERO PUSH3 0x40B JUMPI PUSH32 0x94388F0C0D4B29E278B2169CC87C7693BDFAB9AFA4434111C9F0952076B83C3E PUSH3 0x74D SWAP4 PUSH1 0x20 SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP6 SWAP5 PUSH1 0x40 MLOAD DUP9 DUP2 DUP4 MLOAD PUSH3 0x708 DUP2 DUP4 DUP6 DUP9 ADD PUSH3 0xF54 JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 DUP9 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH3 0x747 DUP7 PUSH3 0x114C JUMP JUMPDEST PUSH3 0x11B7 JUMP JUMPDEST SWAP3 PUSH3 0x763 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x84 CALLDATALOAD SWAP2 DUP5 PUSH3 0x11D9 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH3 0x155 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x155 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x155 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x155 JUMPI PUSH3 0x7C5 PUSH3 0x1276 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH3 0x155 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x155 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x155 JUMPI PUSH3 0x83A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0xE92 JUMP JUMPDEST PUSH3 0x844 PUSH3 0xEDF JUMP JUMPDEST PUSH3 0x84E PUSH3 0x1276 JUMP JUMPDEST PUSH3 0x85C DUP3 MLOAD ISZERO ISZERO PUSH3 0x1040 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ISZERO PUSH3 0x93E JUMPI PUSH3 0x747 PUSH3 0x8FB SWAP3 PUSH3 0x8B9 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP7 DUP8 DUP3 DUP2 DUP9 MLOAD PUSH3 0x89A DUP2 DUP5 DUP13 ADD SWAP14 DUP15 PUSH3 0xF54 JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND SWAP7 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP9 MLOAD SWAP3 DUP4 SWAP2 PUSH3 0xF54 JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 PUSH3 0x922 JUMPI JUMPDEST DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH3 0x114C JUMP JUMPDEST PUSH32 0xE1DFA83513A4B65C296BC64D8A68945CB723D798739225012D7167DBB2D6E3FC PUSH1 0x0 DUP1 LOG4 STOP JUMPDEST DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH3 0x8DC JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E657720746F6B656E20616464726573732063616E6E6F74206265207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH3 0x155 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x155 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH3 0x155 JUMPI PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH3 0x155 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x155 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x4 SLOAD SWAP2 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD SWAP3 PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH3 0xA5B JUMPI PUSH3 0xA57 DUP6 PUSH3 0xA4A DUP2 DUP10 SUB DUP3 PUSH3 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH3 0xF0D JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH3 0xA2F JUMP JUMPDEST CALLVALUE PUSH3 0x155 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x155 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x155 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH3 0x155 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH3 0xABD DUP2 PUSH3 0xE5E JUMP JUMPDEST SWAP2 PUSH3 0xACD PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH3 0xE3C JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x24 PUSH1 0x20 DUP5 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH3 0x155 JUMPI PUSH1 0x24 DUP2 ADD SWAP3 JUMPDEST DUP3 DUP5 LT PUSH3 0xD2E JUMPI DUP5 PUSH3 0xAFF PUSH3 0xEDF JUMP JUMPDEST SWAP1 PUSH3 0xB0A PUSH3 0x1276 JUMP JUMPDEST PUSH3 0xB14 PUSH3 0x12A3 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH3 0xCF0 JUMPI PUSH3 0xB32 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH3 0xFC8 JUMP JUMPDEST DUP1 MLOAD SWAP2 PUSH3 0xB40 DUP4 PUSH3 0xE5E JUMP JUMPDEST SWAP3 PUSH3 0xB50 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH3 0xE3C JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH3 0xB61 PUSH1 0x1F NOT SWAP2 PUSH3 0xE5E JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH3 0xCDC JUMPI PUSH3 0xB81 DUP2 DUP5 PUSH3 0x1015 JUMP JUMPDEST MLOAD SWAP1 PUSH3 0xB95 PUSH1 0x40 DUP4 ADD MLOAD MLOAD ISZERO ISZERO PUSH3 0x1040 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD PUSH3 0xBBC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH3 0xBB3 SWAP1 PUSH3 0xFA0 JUMP JUMPDEST SLOAD AND ISZERO PUSH3 0x108D JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD SWAP1 PUSH1 0x60 DUP6 ADD MLOAD SWAP3 PUSH1 0x80 DUP7 ADD MLOAD PUSH1 0xA0 DUP8 ADD MLOAD SWAP1 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x2F40 DUP2 ADD LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x2F40 DUP10 ADD GT OR PUSH3 0x772 JUMPI DUP7 SWAP6 PUSH3 0xC16 SWAP6 DUP12 SWAP6 PUSH2 0x2F40 PUSH3 0x12C8 DUP11 CODECOPY PUSH2 0x2F40 DUP10 ADD PUSH3 0x10DA JUMP JUMPDEST SUB SWAP1 PUSH1 0x0 CREATE SWAP2 DUP3 ISZERO PUSH3 0x40B JUMPI PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH3 0xC41 SWAP1 PUSH3 0xFA0 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 OR SWAP1 SSTORE PUSH3 0xC74 DUP3 PUSH3 0x114C JUMP JUMPDEST DUP2 PUSH3 0xC81 DUP5 DUP10 PUSH3 0x1015 JUMP JUMPDEST MSTORE PUSH32 0x94388F0C0D4B29E278B2169CC87C7693BDFAB9AFA4434111C9F0952076B83C3E PUSH1 0x40 DUP3 ADD MLOAD SWAP2 DUP1 MLOAD PUSH3 0xCD2 PUSH3 0xCC4 PUSH1 0x80 PUSH1 0x60 DUP6 ADD MLOAD SWAP5 ADD MLOAD SWAP6 PUSH3 0x11B7 JUMP JUMPDEST SWAP5 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH3 0x11D9 JUMP JUMPDEST SUB SWAP1 LOG3 ADD PUSH3 0xB6B JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH3 0xA57 DUP7 DUP3 PUSH3 0xF0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x139BC81D1BDAD95B8819185D18481C1C9BDD9A591959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x155 JUMPI DUP3 ADD PUSH1 0xC0 SWAP2 DUP3 PUSH1 0x23 NOT DUP4 CALLDATASIZE SUB ADD SLT PUSH3 0x155 JUMPI PUSH1 0x40 MLOAD SWAP3 DUP4 ADD DUP4 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x772 JUMPI PUSH1 0x40 MSTORE PUSH1 0x24 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x155 JUMPI PUSH3 0xD94 SWAP1 PUSH1 0x24 CALLDATASIZE SWAP2 DUP6 ADD ADD PUSH3 0xE92 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x44 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x155 JUMPI PUSH3 0xDBC SWAP1 PUSH1 0x24 CALLDATASIZE SWAP2 DUP6 ADD ADD PUSH3 0xE92 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x64 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x155 JUMPI PUSH3 0xDE7 SWAP1 PUSH1 0x24 CALLDATASIZE SWAP2 DUP6 ADD ADD PUSH3 0xE92 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x84 DUP3 ADD CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH3 0x155 JUMPI PUSH1 0xC4 PUSH1 0x20 SWAP5 SWAP4 PUSH3 0xE1A DUP7 SWAP6 PUSH1 0x24 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH3 0xE92 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0xA4 DUP2 ADD CALLDATALOAD PUSH1 0x80 DUP5 ADD MSTORE ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP4 ADD SWAP3 PUSH3 0xAEC JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x772 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x772 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x772 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH3 0x155 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH3 0xEAC DUP3 PUSH3 0xE76 JUMP JUMPDEST SWAP3 PUSH3 0xEBC PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH3 0xE3C JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH3 0x155 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x155 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x155 JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH3 0xF36 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH3 0xF27 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH3 0xF68 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xF57 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH3 0xF94 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH3 0xF54 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH3 0xFBB SWAP2 DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH3 0xF54 JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST ISZERO PUSH3 0xFD0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646D696E2063616E6E6F74206265207A65726F206164647265737300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH3 0x102A JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH3 0x1048 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746F636B2073796D626F6C2063616E6E6F7420626520656D70747900000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH3 0x1095 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746F636B20746F6B656E20616C726561647920657869737473000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP6 SWAP3 PUSH3 0x1122 SWAP1 PUSH3 0x1113 PUSH3 0x1131 SWAP5 PUSH3 0x1104 PUSH1 0xC0 SWAP10 SWAP13 SWAP12 SWAP9 SWAP6 PUSH1 0xE0 DUP13 MSTORE PUSH1 0xE0 DUP13 ADD SWAP1 PUSH3 0xF79 JUMP JUMPDEST SWAP1 DUP11 DUP3 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH3 0xF79 JUMP JUMPDEST SWAP1 DUP9 DUP3 SUB PUSH1 0x40 DUP11 ADD MSTORE PUSH3 0xF79 JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x60 DUP9 ADD MSTORE PUSH3 0xF79 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH3 0x772 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x4 SSTORE DUP2 LT ISZERO PUSH3 0x102A JUMPI PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH3 0x11D1 SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH3 0xF54 JUMP JUMPDEST DUP2 ADD SUB SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 PUSH3 0x1206 SWAP1 PUSH3 0x11F7 PUSH1 0x40 SWAP4 PUSH1 0x60 DUP9 MSTORE PUSH1 0x60 DUP9 ADD SWAP1 PUSH3 0xF79 JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x20 DUP9 ADD MSTORE PUSH3 0xF79 JUMP JUMPDEST SWAP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH3 0x155 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x155 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH3 0x155 JUMPI DUP1 MLOAD PUSH3 0x1242 DUP2 PUSH3 0xE76 JUMP JUMPDEST SWAP3 PUSH3 0x1252 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH3 0xE3C JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH3 0x155 JUMPI PUSH3 0x1273 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH3 0xF54 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH3 0x128B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH3 0x12B5 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID PUSH2 0x160 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0xA2C JUMPI PUSH3 0x2F40 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH3 0x21 DUP3 DUP6 PUSH3 0xA31 JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0xE0 DUP2 DUP4 SUB SLT PUSH3 0xA2C JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xA2C JUMPI DUP3 PUSH3 0x50 SWAP2 DUP4 ADD PUSH3 0xA7A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xA2C JUMPI DUP4 PUSH3 0x72 SWAP2 DUP5 ADD PUSH3 0xA7A JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xA2C JUMPI DUP5 PUSH3 0x94 SWAP2 DUP6 ADD PUSH3 0xA7A JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MLOAD SWAP1 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0xA2C JUMPI PUSH3 0xB7 SWAP2 DUP6 ADD PUSH3 0xA7A JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP5 ADD MLOAD SWAP2 PUSH1 0xC0 PUSH1 0xA0 DUP7 ADD MLOAD SWAP6 ADD MLOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP6 SUB PUSH3 0xA2C JUMPI PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP5 DUP3 LT OR PUSH3 0x5FB JUMPI PUSH1 0x40 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP5 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x5FB JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0xA21 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0x5DA JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x9BB JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH3 0x931 JUMPI PUSH1 0x0 SWAP2 PUSH3 0x925 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x5FB JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x91A JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x5DA JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x8A5 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x816 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x80A JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH3 0x1DF DUP2 PUSH3 0xDD3 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH3 0x1EE DUP3 PUSH3 0xF78 JUMP JUMPDEST PUSH2 0x140 MSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 DUP2 PUSH1 0xE0 MSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 DUP1 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP5 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 DUP2 DUP4 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP5 GT OR PUSH3 0x5FB JUMPI PUSH1 0x40 DUP4 SWAP1 MSTORE DUP2 MLOAD SWAP1 KECCAK256 PUSH1 0x80 MSTORE ADDRESS PUSH1 0xC0 MSTORE PUSH1 0x1 PUSH1 0xA SSTORE PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x11 SSTORE PUSH10 0x152D02C7E14AF6800000 PUSH1 0x12 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH3 0x7C6 JUMPI POP POP DUP2 ISZERO PUSH3 0x777 JUMPI DUP2 DUP5 GT PUSH3 0x728 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x5FB JUMPI PUSH1 0xB SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x71D JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x5DA JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x6A8 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x61D JUMPI PUSH1 0x0 SWAP3 PUSH3 0x611 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xB SSTORE JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x5FB JUMPI PUSH1 0xC SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x5F0 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0x5DA JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x570 JUMPI JUMPDEST POP PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH3 0x503 JUMPI SWAP5 DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH3 0x4F7 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xC SSTORE JUMPDEST PUSH1 0xD SSTORE PUSH3 0x3A1 DUP2 PUSH3 0xAD5 JUMP JUMPDEST POP PUSH3 0x3AD DUP2 PUSH3 0xB56 JUMP JUMPDEST POP PUSH3 0x3B9 DUP2 PUSH3 0xBF9 JUMP JUMPDEST POP PUSH3 0x3C5 DUP2 PUSH3 0xC97 JUMP JUMPDEST POP PUSH3 0x3D1 DUP2 PUSH3 0xD35 JUMP JUMPDEST POP DUP2 PUSH3 0x42B JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E50 SWAP1 DUP2 PUSH3 0x10D0 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x186C ADD MSTORE PUSH1 0xA0 MLOAD DUP2 PUSH2 0x1938 ADD MSTORE PUSH1 0xC0 MLOAD DUP2 PUSH2 0x1836 ADD MSTORE PUSH1 0xE0 MLOAD DUP2 PUSH2 0x18BB ADD MSTORE PUSH2 0x100 MLOAD DUP2 PUSH2 0x18E1 ADD MSTORE PUSH2 0x120 MLOAD DUP2 PUSH2 0x9AF ADD MSTORE PUSH2 0x140 MLOAD DUP2 PUSH2 0x9D9 ADD MSTORE RETURN JUMPDEST PUSH1 0xFF PUSH1 0x8 SLOAD AND PUSH3 0x4E5 JUMPI PUSH1 0x2 SLOAD DUP3 DUP2 ADD DUP1 SWAP2 GT PUSH3 0x4CF JUMPI PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE PUSH32 0x3F2C9D57C068687834F0DE942A9BABB9E5ACAB57D516D3480A3C16EE165A4273 SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP6 SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 LOG2 CODESIZE DUP1 PUSH3 0x3D9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x37D JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 PUSH1 0xC PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP9 DUP2 LT PUSH3 0x557 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH3 0x53D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xC SSTORE PUSH3 0x393 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x52E JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0x517 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH3 0x5CF JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x5C2 JUMPI POP PUSH3 0x35E JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x5B3 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x5AA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x34A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x311 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x68F JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH3 0x675 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xB SSTORE PUSH3 0x327 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x666 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH3 0x64E JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 MSTORE SWAP1 SWAP2 POP PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH3 0x712 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x702 JUMPI POP PUSH3 0x2F8 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH3 0x6F3 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x6E5 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x2E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C20737570706C792065786365656473206D617820737570706C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x79 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820737570706C79206D7573742062652067726561746572207468616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0xC4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0xE4 DUP3 ADD MSTORE PUSH32 0x41646D696E2063616E6E6F74206265207A65726F206164647265737300000000 PUSH2 0x104 SWAP1 SWAP2 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x1BE JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP4 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x889 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x86F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH3 0x1D4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x860 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x843 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE SWAP1 SWAP2 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH3 0x90F JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x8FF JUMPI POP PUSH3 0x1A5 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH3 0x8F0 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x8E2 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x18F JUMP JUMPDEST SWAP1 POP DUP4 ADD MLOAD CODESIZE PUSH3 0x155 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 JUMPDEST PUSH1 0x1F NOT DUP4 AND DUP5 LT PUSH3 0x9A2 JUMPI PUSH1 0x1 SWAP4 POP DUP3 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x988 JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH3 0x16A JUMP JUMPDEST DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH3 0x97A JUMP JUMPDEST DUP6 DUP2 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH3 0x95D JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH3 0xA19 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0xA0C JUMPI POP POP PUSH3 0x13C JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x9F4 JUMP JUMPDEST POP DUP1 PUSH3 0x9F4 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x128 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH3 0x5FB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH3 0xA69 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xA58 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH3 0xA2C JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x5FB JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH3 0xAB1 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH3 0xA31 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH3 0xA2C JUMPI PUSH3 0xAD2 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH3 0xA55 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xEC8156718A8372B1DB44BB411437D0870F3E3790D4A08526D024CE1B0B668F6B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0xB52 JUMPI DUP2 DUP1 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2F20 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xD5D09B8F3165A736D25B1A14611612AC91830C1B82012B1C33B2DAC7C90A0649 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 SWAP1 PUSH1 0xFF AND PUSH3 0xBF4 JUMPI DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2F20 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xAFC27DADD95CC92CC3511384503AFBC19841FE8E9D61FEFC7F2FB1E6A3BD40C2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 SWAP1 PUSH1 0xFF AND PUSH3 0xBF4 JUMPI DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2F20 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x84574A31E2F767388BFA57BC81FF2590DF95D3022C04C363CCA3E37EE9608631 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A SWAP1 PUSH1 0xFF AND PUSH3 0xBF4 JUMPI DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2F20 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x4FCB20797BC22B6BDF05ED948026FDC1B31B30D107AC0811A08B18C975BBD64B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x442A94F1A1FAC79AF32856AF2A64F63648CFA2EF3B98610A5BB7CBEC4CEE6985 SWAP1 PUSH1 0xFF AND PUSH3 0xBF4 JUMPI DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2F20 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 SWAP1 DUP3 DUP2 LT ISZERO PUSH3 0xE53 JUMPI POP SWAP1 PUSH1 0x1F DUP3 MLOAD GT PUSH3 0xE11 JUMPI DUP1 DUP3 MLOAD SWAP3 ADD MLOAD SWAP1 DUP1 DUP4 LT PUSH3 0xE02 JUMPI POP OR SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x0 NOT SWAP2 SUB PUSH1 0x3 SHL SHL AND OR SWAP1 JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH3 0xE45 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP5 MSTORE DUP1 PUSH1 0x4 DUP6 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 SWAP2 DUP3 PUSH1 0x24 DUP8 ADD MSTORE DUP7 DUP7 ADD SWAP2 ADD PUSH3 0xA55 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x5FB JUMPI PUSH1 0x5 SWAP3 DUP4 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0xF6D JUMPI JUMPDEST DUP4 DUP3 LT EQ PUSH3 0x5DA JUMPI PUSH1 0x1F DUP2 GT PUSH3 0xF36 JUMPI JUMPDEST POP DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0xECC JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH3 0xEC0 JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0xEAA JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND DUP8 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0xF1B JUMPI POP POP POP LT PUSH3 0xF01 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0xEF4 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0xEE1 JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE DUP5 PUSH1 0x1F DUP5 PUSH1 0x0 KECCAK256 SWAP3 ADD DUP8 SHR DUP3 ADD SWAP2 PUSH1 0x1F DUP7 ADD DUP9 SHR ADD JUMPDEST DUP3 DUP2 LT PUSH3 0xF60 JUMPI POP POP PUSH3 0xE8C JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0xF50 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xE79 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP1 DUP2 DUP2 LT ISZERO PUSH3 0xFA5 JUMPI POP PUSH1 0x1F DUP3 MLOAD GT PUSH3 0xE11 JUMPI DUP1 DUP3 MLOAD SWAP3 ADD MLOAD SWAP1 DUP1 DUP4 LT PUSH3 0xE02 JUMPI POP OR SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x5FB JUMPI PUSH1 0x6 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x10C4 JUMPI JUMPDEST DUP4 DUP3 LT EQ PUSH3 0x5DA JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x108A JUMPI JUMPDEST POP DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0x101E JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH3 0x1012 JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x6 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0xFFB JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND PUSH1 0x6 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0x106F JUMPI POP POP POP LT PUSH3 0x1055 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x6 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x1047 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x1034 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 MSTORE DUP5 PUSH1 0x1F DUP5 PUSH1 0x0 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 PUSH1 0x1F DUP7 ADD PUSH1 0x5 SHR ADD JUMPDEST DUP3 DUP2 LT PUSH3 0x10B7 JUMPI POP POP PUSH3 0xFDD JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0x10A7 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xFCA JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 PUSH1 0xE0 DUP5 CALLDATALOAD DUP2 SHR SWAP3 DUP4 PUSH4 0x1FFC9A7 EQ PUSH2 0x118A JUMPI POP DUP3 PUSH4 0x62D3BD7 EQ PUSH2 0x114E JUMPI DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x1128 JUMPI DUP3 PUSH4 0x95EA7B3 EQ PUSH2 0x10FD JUMPI DUP3 PUSH4 0x18160DDD EQ PUSH2 0x10DD JUMPI DUP3 PUSH4 0x1E293C10 EQ PUSH2 0x108E JUMPI DUP3 PUSH4 0x23B872DD EQ PUSH2 0xF9A JUMPI DUP3 PUSH4 0x248A9CA3 EQ PUSH2 0xF6E JUMPI DUP3 PUSH4 0x2803212F EQ PUSH2 0xF05 JUMPI DUP3 PUSH4 0x282C51F3 EQ PUSH2 0xEC9 JUMPI DUP3 PUSH4 0x2F2FF15D EQ PUSH2 0xE9F JUMPI DUP3 PUSH4 0x313CE567 EQ PUSH2 0xE82 JUMPI DUP3 PUSH4 0x3644E515 EQ PUSH2 0xE5D JUMPI DUP3 PUSH4 0x36568ABE EQ PUSH2 0xE16 JUMPI DUP3 PUSH4 0x3E6968B6 EQ PUSH2 0xDF5 JUMPI DUP3 PUSH4 0x3F4BA83A EQ PUSH2 0xD8A JUMPI DUP3 PUSH4 0x40C10F19 EQ PUSH2 0xBE0 JUMPI DUP3 PUSH4 0x5C975ABB EQ PUSH2 0xBBB JUMPI DUP3 PUSH4 0x70A08231 EQ PUSH2 0xB83 JUMPI DUP3 PUSH4 0x7D89D05C EQ PUSH2 0xB4A JUMPI DUP3 PUSH4 0x7ECEBE00 EQ PUSH2 0xB11 JUMPI DUP3 PUSH4 0x8456CB59 EQ PUSH2 0xAB5 JUMPI DUP3 PUSH4 0x84B0196E EQ PUSH2 0x997 JUMPI DUP3 PUSH4 0x91D14854 EQ PUSH2 0x94F JUMPI DUP3 PUSH4 0x95D89B41 EQ PUSH2 0x929 JUMPI DUP3 PUSH4 0x9DC29FAC EQ PUSH2 0x740 JUMPI DUP3 PUSH4 0xA217FDDF EQ PUSH2 0x724 JUMPI DUP3 PUSH4 0xA9059CBB EQ PUSH2 0x6F2 JUMPI DUP3 PUSH4 0xABB1DC44 EQ PUSH2 0x624 JUMPI DUP3 PUSH4 0xC76B0888 EQ PUSH2 0x604 JUMPI DUP3 PUSH4 0xC87CBE56 EQ PUSH2 0x5DE JUMPI DUP3 PUSH4 0xC8C8EBE4 EQ PUSH2 0x5BE JUMPI DUP3 PUSH4 0xD01DD6D2 EQ PUSH2 0x53B JUMPI DUP3 PUSH4 0xD505ACCF EQ PUSH2 0x3D5 JUMPI POP DUP2 PUSH4 0xD5391393 EQ PUSH2 0x39A JUMPI DUP2 PUSH4 0xD547741F EQ PUSH2 0x356 JUMPI POP DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xDBAC26E9 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xF5EC2EED EQ PUSH2 0x238 JUMPI PUSH4 0xFDB98082 EQ PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x21A PUSH2 0x121E JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x10 DUP5 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI DUP1 MLOAD PUSH2 0x275 SWAP2 PUSH2 0x263 DUP3 PUSH2 0x25C DUP2 PUSH2 0x1459 JUMP JUMPDEST SUB DUP4 PUSH2 0x1519 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x11DE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x2D0 PUSH2 0x121E JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x234 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP2 PUSH1 0xFF SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x325 PUSH2 0x121E JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x396 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI PUSH2 0x392 SWAP2 CALLDATALOAD PUSH2 0x38D PUSH1 0x1 PUSH2 0x37B PUSH2 0x1239 JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x195E JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 MSTORE RETURN JUMPDEST SWAP1 DUP5 SWAP3 POP CALLVALUE PUSH2 0x396 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI PUSH2 0x3F1 PUSH2 0x121E JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x1239 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x537 JUMPI DUP2 TIMESTAMP GT PUSH2 0x520 JUMPI DUP9 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP8 AND SWAP5 DUP6 DUP12 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP3 DUP12 KECCAK256 SWAP2 DUP3 SLOAD SWAP3 PUSH1 0x1 DUP5 ADD SWAP1 SSTORE DUP4 MLOAD SWAP3 DUP8 PUSH1 0x20 DUP6 ADD SWAP6 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP8 MSTORE DUP6 ADD MSTORE DUP7 DUP12 AND PUSH1 0x60 DUP6 ADD MSTORE DUP12 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 MSTORE DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x50D JUMPI DUP12 MSTORE MLOAD SWAP1 KECCAK256 PUSH2 0x4DB SWAP2 PUSH2 0x4D2 SWAP2 PUSH2 0x4AC PUSH2 0x1833 JUMP JUMPDEST SWAP1 DUP13 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0xC4 CALLDATALOAD SWAP2 PUSH1 0x42 PUSH1 0xA4 CALLDATALOAD SWAP3 KECCAK256 PUSH2 0x1C6D JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x1CFD JUMP JUMPDEST AND DUP2 DUP2 SUB PUSH2 0x4F2 JUMPI DUP7 PUSH2 0x4EF DUP8 DUP8 DUP8 PUSH2 0x19F8 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP8 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP2 POP REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 DUP8 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST DUP9 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH2 0x556 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x5BA JUMPI PUSH32 0xCF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8 SWAP2 PUSH1 0x20 SWAP2 PUSH2 0x591 PUSH2 0x155E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP7 MSTORE PUSH1 0xE DUP4 MSTORE DUP5 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE SWAP4 MLOAD SWAP1 DUP2 MSTORE LOG2 DUP1 RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x12 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI DUP1 MLOAD PUSH2 0x275 SWAP2 PUSH2 0x263 DUP3 PUSH2 0x25C DUP2 PUSH2 0x13CB JUMP JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x11 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP1 DUP6 CALLVALUE PUSH2 0x6EF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6EF JUMPI POP DUP2 MLOAD SWAP2 PUSH2 0x64F DUP4 PUSH2 0x648 DUP2 PUSH2 0x1289 JUMP JUMPDEST SUB DUP5 PUSH2 0x1519 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH2 0x65F DUP3 PUSH2 0x25C DUP2 PUSH2 0x133D JUMP JUMPDEST PUSH2 0x6D9 PUSH1 0x2 SLOAD SWAP3 PUSH2 0x6CB PUSH1 0xD SLOAD SWAP4 DUP1 MLOAD PUSH2 0x683 DUP2 PUSH2 0x67C DUP2 PUSH2 0x13CB JUMP JUMPDEST SUB DUP3 PUSH2 0x1519 JUMP JUMPDEST PUSH2 0x6BE DUP3 MLOAD SWAP5 PUSH2 0x69D DUP7 PUSH2 0x696 DUP2 PUSH2 0x1459 JUMP JUMPDEST SUB DUP8 PUSH2 0x1519 JUMP JUMPDEST PUSH2 0x6B0 DUP5 MLOAD SWAP12 DUP12 DUP14 SWAP13 DUP14 MSTORE DUP13 ADD SWAP1 PUSH2 0x11DE JUMP JUMPDEST SWAP1 DUP11 DUP3 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x11DE JUMP JUMPDEST SWAP2 DUP9 DUP4 SUB SWAP1 DUP10 ADD MSTORE PUSH2 0x11DE JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x11DE JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x12 PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x71D PUSH2 0x713 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x165A JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 POP CALLVALUE PUSH2 0x396 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI PUSH2 0x75B PUSH2 0x121E JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 SWAP3 DUP4 DUP7 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x9 DUP6 MSTORE DUP3 DUP8 KECCAK256 CALLER DUP9 MSTORE DUP6 MSTORE PUSH1 0xFF DUP4 DUP9 KECCAK256 SLOAD AND ISZERO PUSH2 0x90E JUMPI POP PUSH2 0x7A9 PUSH2 0x19D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x8CC JUMPI DUP6 DUP8 MSTORE DUP7 DUP6 MSTORE DUP4 DUP4 DUP9 KECCAK256 SLOAD LT PUSH2 0x88A JUMPI PUSH2 0x7D2 PUSH2 0x1A8B JUMP JUMPDEST DUP6 DUP8 MSTORE DUP7 DUP6 MSTORE DUP3 DUP8 KECCAK256 SLOAD SWAP2 DUP5 DUP4 LT PUSH2 0x856 JUMPI POP POP SWAP1 DUP3 PUSH32 0xFD38818F5291BF0BB3A2A48AADC06BA8757865D1DABD804585338AAB3009DCB6 SWAP5 SWAP4 SWAP3 DUP7 DUP9 MSTORE DUP8 DUP6 MSTORE SUB DUP2 DUP8 KECCAK256 SSTORE DUP2 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE DUP6 DUP6 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 DUP5 MLOAD DUP7 DUP2 MSTORE LOG3 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x1 PUSH1 0xA SSTORE DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST POP DUP4 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E636520746F206275726E00000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP4 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206275726E2066726F6D207A65726F2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP3 MLOAD SWAP2 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI DUP1 MLOAD PUSH2 0x275 SWAP2 PUSH2 0x263 DUP3 PUSH2 0x25C DUP2 PUSH2 0x133D JUMP JUMPDEST POP SWAP1 POP CALLVALUE PUSH2 0x396 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x971 PUSH2 0x1239 JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x9 DUP7 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 DUP4 DUP6 CALLVALUE PUSH2 0x6EF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6EF JUMPI PUSH2 0x9D3 PUSH32 0x0 PUSH2 0x1AA9 JUMP JUMPDEST SWAP1 PUSH2 0x9FD PUSH32 0x0 PUSH2 0x1BAD JUMP JUMPDEST SWAP3 DUP1 MLOAD SWAP4 PUSH1 0x20 SWAP4 PUSH1 0x20 DUP7 ADD SWAP7 DUP7 DUP9 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP10 GT OR PUSH2 0xAA2 JUMPI POP SWAP6 SWAP4 SWAP1 PUSH2 0xA58 DUP4 PUSH1 0x20 SWAP3 DUP8 DUP12 SWAP10 SWAP7 MSTORE DUP7 DUP7 MSTORE PUSH2 0xA4B DUP3 MLOAD SWAP11 DUP12 SWAP11 PUSH1 0xF PUSH1 0xF8 SHL DUP13 MSTORE DUP1 DUP8 DUP14 ADD MSTORE DUP12 ADD SWAP1 PUSH2 0x11DE JUMP JUMPDEST SWAP2 DUP10 DUP4 SUB SWAP1 DUP11 ADD MSTORE PUSH2 0x11DE JUMP JUMPDEST SWAP3 CHAINID PUSH1 0x60 DUP9 ADD MSTORE ADDRESS PUSH1 0x80 DUP9 ADD MSTORE DUP5 PUSH1 0xA0 DUP9 ADD MSTORE DUP7 DUP5 SUB PUSH1 0xC0 DUP9 ADD MSTORE MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0xA8B JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xA7C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH2 0xAF4 PUSH2 0x15D8 JUMP JUMPDEST PUSH2 0xAFC PUSH2 0x1A8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB3A PUSH2 0x121E JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB73 PUSH2 0x121E JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xF DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBAC PUSH2 0x121E JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x8 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP5 DUP3 DUP6 CALLVALUE PUSH2 0x396 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI PUSH2 0xBFB PUSH2 0x121E JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 SWAP3 DUP4 DUP7 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x9 DUP6 MSTORE DUP3 DUP8 KECCAK256 CALLER DUP9 MSTORE DUP6 MSTORE PUSH1 0xFF DUP4 DUP9 KECCAK256 SLOAD AND ISZERO PUSH2 0xD6C JUMPI POP PUSH2 0xC49 PUSH2 0x19D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 ISZERO PUSH2 0xD2B JUMPI PUSH1 0x2 SLOAD SWAP1 PUSH2 0xC67 DUP5 DUP4 PUSH2 0x153B JUMP JUMPDEST PUSH1 0xD SLOAD LT PUSH2 0xCEF JUMPI POP SWAP1 PUSH2 0xCA6 DUP4 PUSH32 0x3F2C9D57C068687834F0DE942A9BABB9E5ACAB57D516D3480A3C16EE165A4273 SWAP6 SWAP5 SWAP4 PUSH2 0xCA1 PUSH2 0x1A8B JUMP JUMPDEST PUSH2 0x153B JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP7 MSTORE DUP6 DUP4 MSTORE DUP1 DUP7 KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE DUP5 DUP7 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 DUP5 MLOAD DUP7 DUP2 MSTORE LOG3 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x1 PUSH1 0xA SSTORE DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x45786365656473206D6178696D756D20737570706C79 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206D696E7420746F207A65726F20616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP9 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST POP SWAP1 POP CALLVALUE PUSH2 0x396 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI PUSH2 0xDA5 PUSH2 0x15D8 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0xDE7 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x8 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0x15180 TIMESTAMP DIV DUP2 MSTORE RETURN JUMPDEST POP DUP4 DUP4 CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH2 0xE31 PUSH2 0x1239 JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0xE4E JUMPI POP PUSH2 0x392 SWAP2 SWAP3 CALLDATALOAD PUSH2 0x195E JUMP JUMPDEST MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xE7B PUSH2 0x1833 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP5 DUP3 DUP6 CALLVALUE PUSH2 0x396 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI PUSH2 0x392 SWAP2 CALLDATALOAD PUSH2 0xEC4 PUSH1 0x1 PUSH2 0x37B PUSH2 0x1239 JUMP JUMPDEST PUSH2 0x17B3 JUMP JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH32 0xD3D22FFD28B02735CF411BD7F925BD8DA01212C7028153E0D632E2953AC3088E PUSH1 0x20 PUSH2 0xF43 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xF4F PUSH2 0x155E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP7 MSTORE PUSH1 0xF DUP4 MSTORE DUP5 DUP7 KECCAK256 DUP3 SWAP1 SSTORE SWAP4 MLOAD SWAP1 DUP2 MSTORE LOG2 DUP1 RETURN JUMPDEST POP SWAP1 POP CALLVALUE PUSH2 0x396 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x396 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x9 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 DUP7 CALLVALUE PUSH2 0x6EF JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x6EF JUMPI PUSH2 0xFB6 PUSH2 0x121E JUMP JUMPDEST PUSH2 0xFBE PUSH2 0x1239 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 LT PUSH2 0xFFA JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x71D DUP10 DUP10 DUP10 PUSH2 0x165A JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x1062 JUMPI DUP2 ISZERO PUSH2 0x104B JUMPI CALLER ISZERO PUSH2 0x1034 JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x71D DUP8 PUSH2 0xFEC JUMP JUMPDEST DUP8 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST POP SWAP1 POP CALLVALUE PUSH2 0x396 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x396 JUMPI PUSH32 0x7C1CB3702D8E1FA6D24B12DD90670AB69C6D66D58233103D37DA8B07D6B850AC SWAP2 PUSH1 0x20 SWAP2 CALLDATALOAD SWAP1 PUSH2 0x10D1 PUSH2 0x155E JUMP JUMPDEST DUP2 PUSH1 0x12 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x71D PUSH2 0x111E PUSH2 0x121E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x19F8 JUMP JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI DUP1 MLOAD PUSH2 0x275 SWAP2 PUSH2 0x263 DUP3 PUSH2 0x25C DUP2 PUSH2 0x1289 JUMP JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x442A94F1A1FAC79AF32856AF2A64F63648CFA2EF3B98610A5BB7CBEC4CEE6985 DUP2 MSTORE RETURN JUMPDEST DUP6 SWAP1 DUP4 CALLVALUE PUSH2 0x396 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x396 JUMPI CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x396 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x11CD JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x11C6 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x120A JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1234 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1234 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x127F JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1269 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1299 DUP3 PUSH2 0x124F JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1318 JUMPI POP PUSH1 0x1 EQ PUSH2 0x12BC JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP3 SWAP4 SWAP5 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP3 PUSH1 0x0 SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x1305 JUMPI POP POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x12B6 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP5 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x12EB JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x12B6 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x134D DUP3 PUSH2 0x124F JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1318 JUMPI POP PUSH1 0x1 EQ PUSH2 0x136F JUMPI POP POP POP POP JUMP JUMPDEST SWAP3 SWAP4 SWAP5 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP3 PUSH1 0x0 SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x13B8 JUMPI POP POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x12B6 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP5 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x139E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x13DB DUP3 PUSH2 0x124F JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1318 JUMPI POP PUSH1 0x1 EQ PUSH2 0x13FD JUMPI POP POP POP POP JUMP JUMPDEST SWAP3 SWAP4 SWAP5 POP PUSH1 0xB PUSH1 0x0 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 SWAP3 PUSH1 0x0 SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x1446 JUMPI POP POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x12B6 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP5 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x142C JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1469 DUP3 PUSH2 0x124F JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1318 JUMPI POP PUSH1 0x1 EQ PUSH2 0x148B JUMPI POP POP POP POP JUMP JUMPDEST SWAP3 SWAP4 SWAP5 POP PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP3 PUSH1 0x0 SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x14D4 JUMPI POP POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x12B6 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP5 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1503 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1503 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1548 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4FCB20797BC22B6BDF05ED948026FDC1B31B30D107AC0811A08B18C975BBD64B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x442A94F1A1FAC79AF32856AF2A64F63648CFA2EF3B98610A5BB7CBEC4CEE6985 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x15BA JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x84574A31E2F767388BFA57BC81FF2590DF95D3022C04C363CCA3E37EE9608631 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x15BA JUMPI POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x15BA JUMPI POP JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP3 SWAP1 DUP4 ISZERO PUSH2 0x179A JUMPI DUP5 AND SWAP4 DUP5 ISZERO PUSH2 0x1781 JUMPI DUP3 PUSH2 0x1683 SWAP2 DUP4 PUSH2 0x1D82 JUMP JUMPDEST ISZERO PUSH2 0x1745 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP2 DUP3 DUP3 KECCAK256 PUSH3 0x15180 TIMESTAMP DIV DUP4 MSTORE PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 PUSH2 0x16B1 DUP6 DUP3 SLOAD PUSH2 0x153B JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x16BB PUSH2 0x1A8B JUMP JUMPDEST DUP5 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SLOAD SWAP1 DUP5 DUP3 LT PUSH2 0x1714 JUMPI POP SWAP2 DUP1 DUP3 DUP6 PUSH1 0x20 SWAP6 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP9 SWAP7 MSTORE DUP3 DUP8 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP8 DUP2 MSTORE KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP4 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151C985B9CD9995C881B9BDD08185B1B1BDDD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x182E JUMPI DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST ADDRESS PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1935 JUMPI JUMPDEST ISZERO PUSH2 0x188E JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP3 MSTORE PUSH32 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1503 JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x1865 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x182E JUMPI DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xA SLOAD EQ PUSH2 0x19E6 JUMPI PUSH1 0x2 PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x1A72 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x1A59 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x8 SLOAD AND PUSH2 0x1A97 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x1AE7 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x1AD5 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1ACB DUP4 PUSH2 0x14E7 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x5 SLOAD DUP2 PUSH1 0x0 PUSH2 0x1AFA DUP4 PUSH2 0x124F JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1B89 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1B28 JUMPI JUMPDEST POP POP PUSH2 0x1B25 SWAP3 POP SUB DUP3 PUSH2 0x1519 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x1B71 JUMPI POP PUSH2 0x1B25 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0x1B17 JUMP JUMPDEST DUP6 SLOAD DUP8 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x1B56 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP3 POP PUSH2 0x1B25 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x1BCF JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x1AD5 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1ACB DUP4 PUSH2 0x14E7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x6 SLOAD DUP2 PUSH1 0x0 PUSH2 0x1BE2 DUP4 PUSH2 0x124F JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1B89 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1C0C JUMPI POP POP PUSH2 0x1B25 SWAP3 POP SUB DUP3 PUSH2 0x1519 JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0x6 PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x1C55 JUMPI POP PUSH2 0x1B25 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0x1B17 JUMP JUMPDEST DUP6 SLOAD DUP8 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x1C3A JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x1CF1 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x1CE5 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1CDC JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x1D6C JUMPI DUP1 PUSH2 0x1D0F JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x1D29 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x1D4A JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0x1D54 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND SWAP1 PUSH1 0x0 SWAP4 DUP3 DUP6 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND SWAP2 DUP3 ISZERO PUSH2 0x1E07 JUMPI JUMPDEST POP POP PUSH2 0x182E JUMPI PUSH1 0x12 SLOAD DUP3 GT PUSH2 0x182E JUMPI DUP3 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1DFA JUMPI PUSH2 0x1DEF SWAP1 SWAP2 JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 PUSH3 0x15180 TIMESTAMP DIV DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD PUSH2 0x153B JUMP JUMPDEST GT PUSH2 0x1B25 JUMPI POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH2 0x1DEF PUSH1 0x11 SLOAD SWAP2 PUSH2 0x1DD1 JUMP JUMPDEST AND DUP5 MSTORE POP PUSH1 0x40 DUP4 KECCAK256 SLOAD PUSH1 0xFF AND CODESIZE DUP1 PUSH2 0x1DAA JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xD7 CALL PUSH8 0x71B70444D4041C0B PUSH8 0x23667F1452CA7001 DUP6 SWAP5 0xB4 MULMOD 0xA9 SWAP2 NOT 0xAD SWAP2 0xF8 SLOAD PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER 0x2F DUP8 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0DA2646970 PUSH7 0x7358221220A021 0xD4 ORIGIN DUP1 0xCB CODECOPY ADDRESS 0x2D 0xEC 0xB8 PUSH1 0x6 PUSH8 0x8E34D4B5DD4014A7 DUP8 BALANCE 0xC6 0xD9 STOP 0xBB LT 0x1E CREATE2 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"333:7120:27:-:0;;;;;;;902:10;1273:26:2;1269:95;;1297:1;333:7120:27;;902:10;-1:-1:-1;;;;;;333:7120:27;;;;;;;;;902:10;;-1:-1:-1;;;;;333:7120:27;;3052:40:2;;1297:1;3052:40;1857:1:15;;;333:7120:27;;;;;;;1269:95:2;-1:-1:-1;;;1322:31:2;;1297:1;1322:31;;;333:7120:27;;;1322:31:2;333:7120:27;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":3807,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_11472":{"entryPoint":3830,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_string":{"entryPoint":3730,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":4619,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":3853,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":3961,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_string_string_string_uint256_uint256_address":{"entryPoint":4314,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_string_string_uint256":{"entryPoint":4569,"id":null,"parameterSlots":4,"returnSlots":1},"array_allocation_size_array_struct_TokenDeploymentData_dyn":{"entryPoint":3678,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":3702,"id":null,"parameterSlots":1,"returnSlots":1},"array_push_from_address_to_array_address_dyn_storage_ptr":{"entryPoint":4428,"id":null,"parameterSlots":1,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":3924,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":3644,"id":null,"parameterSlots":2,"returnSlots":0},"fun_checkOwner":{"entryPoint":4726,"id":464,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":4771,"id":1839,"parameterSlots":0,"returnSlots":0},"memory_array_index_access_struct_TokenDeploymentData_dyn":{"entryPoint":4117,"id":null,"parameterSlots":2,"returnSlots":1},"packed_hashed_string_to_string":{"entryPoint":4535,"id":null,"parameterSlots":1,"returnSlots":1},"packed_hashed_string_uint256_to_string_uint":{"entryPoint":4000,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":4040,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_2379":{"entryPoint":4237,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_2573":{"entryPoint":4160,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH3 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC2C0A53 EQ PUSH3 0xA7C JUMPI DUP1 PUSH4 0x2A5C792A EQ PUSH3 0x9E0 JUMPI DUP1 PUSH4 0x634282AF EQ PUSH3 0x982 JUMPI DUP1 PUSH4 0x704F703A EQ PUSH3 0x805 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH3 0x7A8 JUMPI DUP1 PUSH4 0x78A89567 EQ PUSH3 0x788 JUMPI DUP1 PUSH4 0x7B71586B EQ PUSH3 0x54D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0x522 JUMPI DUP1 PUSH4 0x8E0AD1CC EQ PUSH3 0x20C JUMPI DUP1 PUSH4 0x8E445E75 EQ PUSH3 0x19D JUMPI DUP1 PUSH4 0xC4091236 EQ PUSH3 0x19D JUMPI DUP1 PUSH4 0xE5B2E3A6 EQ PUSH3 0x15A JUMPI DUP1 PUSH4 0xF1DC8C8B EQ PUSH3 0x15A JUMPI PUSH4 0xF2FDE38B EQ PUSH3 0xC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH3 0x155 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x155 JUMPI PUSH3 0xE2 PUSH3 0xEF6 JUMP JUMPDEST PUSH3 0xEC PUSH3 0x1276 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH3 0x13C JUMPI PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH3 0x155 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x155 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH3 0x17F PUSH3 0xEF6 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x155 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x155 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x155 JUMPI PUSH3 0x1D4 PUSH1 0x20 SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0xE92 JUMP JUMPDEST DUP2 PUSH3 0x1EA PUSH1 0x40 MLOAD SWAP3 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH3 0xF54 JUMP JUMPDEST PUSH1 0x2 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB DUP3 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x155 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH3 0x155 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x155 JUMPI PUSH3 0x242 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0xE92 JUMP JUMPDEST DUP2 PUSH3 0x258 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH3 0xF54 JUMP JUMPDEST PUSH1 0x2 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB DUP3 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH3 0x4EB JUMPI PUSH1 0x40 MLOAD PUSH4 0x6FDDE03 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH3 0x40B JUMPI PUSH1 0x0 SWAP2 PUSH3 0x4CC JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x95D89B41 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x0 DUP3 PUSH1 0x4 DUP2 DUP7 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH3 0x40B JUMPI PUSH1 0x0 SWAP3 PUSH3 0x4AB JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xF5EC2EED PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x0 DUP3 PUSH1 0x4 DUP2 DUP8 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH3 0x40B JUMPI PUSH1 0x0 SWAP3 PUSH3 0x481 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP6 DUP5 PUSH1 0x4 DUP2 DUP9 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH3 0x40B JUMPI PUSH1 0x0 SWAP5 PUSH3 0x44C JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xD5ABEB01 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP7 DUP3 PUSH1 0x4 DUP2 DUP10 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH3 0x40B JUMPI PUSH1 0x0 SWAP3 PUSH3 0x417 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP8 DUP5 PUSH1 0x4 DUP2 DUP11 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH3 0x40B JUMPI PUSH1 0x0 SWAP5 PUSH3 0x3C6 JUMPI JUMPDEST POP SWAP4 PUSH3 0x3A2 PUSH3 0x3B1 SWAP3 PUSH3 0x393 PUSH1 0xFF SWAP8 PUSH1 0xE0 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 DUP14 MSTORE DUP13 ADD MSTORE PUSH1 0xE0 DUP12 ADD SWAP1 PUSH3 0xF79 JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x40 DUP12 ADD MSTORE PUSH3 0xF79 JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x60 DUP10 ADD MSTORE PUSH3 0xF79 JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP6 ADD MSTORE AND PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP4 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH3 0x403 JUMPI JUMPDEST PUSH3 0x3E1 DUP2 DUP4 PUSH3 0xE3C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x155 JUMPI MLOAD SWAP4 PUSH1 0xFF DUP6 AND DUP6 SUB PUSH3 0x155 JUMPI SWAP4 SWAP3 PUSH3 0x3A2 PUSH3 0x369 JUMP JUMPDEST POP RETURNDATASIZE PUSH3 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH3 0x444 JUMPI JUMPDEST PUSH3 0x432 DUP2 DUP4 PUSH3 0xE3C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x155 JUMPI MLOAD SWAP1 DUP8 PUSH3 0x341 JUMP JUMPDEST POP RETURNDATASIZE PUSH3 0x426 JUMP JUMPDEST SWAP1 SWAP4 POP DUP6 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH3 0x479 JUMPI JUMPDEST PUSH3 0x467 DUP2 DUP4 PUSH3 0xE3C JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x155 JUMPI MLOAD SWAP3 DUP7 PUSH3 0x319 JUMP JUMPDEST POP RETURNDATASIZE PUSH3 0x45B JUMP JUMPDEST PUSH3 0x4A3 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH3 0x49A DUP2 DUP4 PUSH3 0xE3C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH3 0x120B JUMP JUMPDEST SWAP1 DUP6 PUSH3 0x2F1 JUMP JUMPDEST PUSH3 0x4C4 SWAP2 SWAP3 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH3 0x49A DUP2 DUP4 PUSH3 0xE3C JUMP JUMPDEST SWAP1 DUP5 PUSH3 0x2C8 JUMP JUMPDEST PUSH3 0x4E4 SWAP2 POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP4 RETURNDATACOPY PUSH3 0x49A DUP2 DUP4 PUSH3 0xE3C JUMP JUMPDEST DUP4 PUSH3 0x29F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151BDAD95B881B9BDD08199BDD5B99 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH3 0x155 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x155 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH3 0x155 JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x155 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x155 JUMPI PUSH3 0x582 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0xE92 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x155 JUMPI PUSH3 0x5A4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0xE92 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x155 JUMPI PUSH3 0x5C7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0xE92 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x155 JUMPI PUSH3 0x5E9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0xE92 JUMP JUMPDEST SWAP3 PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 SUB PUSH3 0x155 JUMPI PUSH3 0x608 PUSH3 0x1276 JUMP JUMPDEST PUSH3 0x612 PUSH3 0x12A3 JUMP JUMPDEST PUSH3 0x620 DUP3 MLOAD ISZERO ISZERO PUSH3 0x1040 JUMP JUMPDEST PUSH3 0x65A PUSH1 0x40 MLOAD DUP4 MLOAD PUSH3 0x639 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH3 0xF54 JUMP JUMPDEST PUSH1 0x2 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH3 0x108D JUMP JUMPDEST PUSH3 0x672 PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH3 0xFC8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2F40 DUP1 DUP4 ADD DUP4 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x772 JUMPI DUP4 SWAP3 PUSH3 0x6B1 SWAP3 PUSH3 0x12C8 DUP6 CODECOPY PUSH1 0xC4 CALLDATALOAD SWAP2 DUP9 DUP8 PUSH1 0xA4 CALLDATALOAD SWAP4 DUP11 PUSH1 0x84 CALLDATALOAD SWAP5 PUSH3 0x10DA JUMP JUMPDEST SUB SWAP1 PUSH1 0x0 CREATE SWAP3 DUP4 ISZERO PUSH3 0x40B JUMPI PUSH32 0x94388F0C0D4B29E278B2169CC87C7693BDFAB9AFA4434111C9F0952076B83C3E PUSH3 0x74D SWAP4 PUSH1 0x20 SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP5 DUP6 SWAP5 PUSH1 0x40 MLOAD DUP9 DUP2 DUP4 MLOAD PUSH3 0x708 DUP2 DUP4 DUP6 DUP9 ADD PUSH3 0xF54 JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 DUP9 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH3 0x747 DUP7 PUSH3 0x114C JUMP JUMPDEST PUSH3 0x11B7 JUMP JUMPDEST SWAP3 PUSH3 0x763 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x84 CALLDATALOAD SWAP2 DUP5 PUSH3 0x11D9 JUMP JUMPDEST SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH3 0x155 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x155 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH3 0x155 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x155 JUMPI PUSH3 0x7C5 PUSH3 0x1276 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH3 0x155 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x155 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x155 JUMPI PUSH3 0x83A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH3 0xE92 JUMP JUMPDEST PUSH3 0x844 PUSH3 0xEDF JUMP JUMPDEST PUSH3 0x84E PUSH3 0x1276 JUMP JUMPDEST PUSH3 0x85C DUP3 MLOAD ISZERO ISZERO PUSH3 0x1040 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ISZERO PUSH3 0x93E JUMPI PUSH3 0x747 PUSH3 0x8FB SWAP3 PUSH3 0x8B9 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP7 DUP8 DUP3 DUP2 DUP9 MLOAD PUSH3 0x89A DUP2 DUP5 DUP13 ADD SWAP14 DUP15 PUSH3 0xF54 JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND SWAP7 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP9 MLOAD SWAP3 DUP4 SWAP2 PUSH3 0xF54 JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 PUSH3 0x922 JUMPI JUMPDEST DUP6 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH3 0x114C JUMP JUMPDEST PUSH32 0xE1DFA83513A4B65C296BC64D8A68945CB723D798739225012D7167DBB2D6E3FC PUSH1 0x0 DUP1 LOG4 STOP JUMPDEST DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH3 0x8DC JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E657720746F6B656E20616464726573732063616E6E6F74206265207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH3 0x155 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x155 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH3 0x155 JUMPI PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH3 0x155 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x155 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x4 SLOAD SWAP2 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD SWAP3 PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH3 0xA5B JUMPI PUSH3 0xA57 DUP6 PUSH3 0xA4A DUP2 DUP10 SUB DUP3 PUSH3 0xE3C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH3 0xF0D JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH3 0xA2F JUMP JUMPDEST CALLVALUE PUSH3 0x155 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH3 0x155 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x155 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH3 0x155 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH3 0xABD DUP2 PUSH3 0xE5E JUMP JUMPDEST SWAP2 PUSH3 0xACD PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH3 0xE3C JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x24 PUSH1 0x20 DUP5 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH3 0x155 JUMPI PUSH1 0x24 DUP2 ADD SWAP3 JUMPDEST DUP3 DUP5 LT PUSH3 0xD2E JUMPI DUP5 PUSH3 0xAFF PUSH3 0xEDF JUMP JUMPDEST SWAP1 PUSH3 0xB0A PUSH3 0x1276 JUMP JUMPDEST PUSH3 0xB14 PUSH3 0x12A3 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH3 0xCF0 JUMPI PUSH3 0xB32 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO ISZERO PUSH3 0xFC8 JUMP JUMPDEST DUP1 MLOAD SWAP2 PUSH3 0xB40 DUP4 PUSH3 0xE5E JUMP JUMPDEST SWAP3 PUSH3 0xB50 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH3 0xE3C JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH3 0xB61 PUSH1 0x1F NOT SWAP2 PUSH3 0xE5E JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP6 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH3 0xCDC JUMPI PUSH3 0xB81 DUP2 DUP5 PUSH3 0x1015 JUMP JUMPDEST MLOAD SWAP1 PUSH3 0xB95 PUSH1 0x40 DUP4 ADD MLOAD MLOAD ISZERO ISZERO PUSH3 0x1040 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MLOAD PUSH3 0xBBC SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH3 0xBB3 SWAP1 PUSH3 0xFA0 JUMP JUMPDEST SLOAD AND ISZERO PUSH3 0x108D JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD SWAP1 PUSH1 0x60 DUP6 ADD MLOAD SWAP3 PUSH1 0x80 DUP7 ADD MLOAD PUSH1 0xA0 DUP8 ADD MLOAD SWAP1 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x2F40 DUP2 ADD LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x2F40 DUP10 ADD GT OR PUSH3 0x772 JUMPI DUP7 SWAP6 PUSH3 0xC16 SWAP6 DUP12 SWAP6 PUSH2 0x2F40 PUSH3 0x12C8 DUP11 CODECOPY PUSH2 0x2F40 DUP10 ADD PUSH3 0x10DA JUMP JUMPDEST SUB SWAP1 PUSH1 0x0 CREATE SWAP2 DUP3 ISZERO PUSH3 0x40B JUMPI PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH3 0xC41 SWAP1 PUSH3 0xFA0 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP4 OR SWAP1 SSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 OR SWAP1 SSTORE PUSH3 0xC74 DUP3 PUSH3 0x114C JUMP JUMPDEST DUP2 PUSH3 0xC81 DUP5 DUP10 PUSH3 0x1015 JUMP JUMPDEST MSTORE PUSH32 0x94388F0C0D4B29E278B2169CC87C7693BDFAB9AFA4434111C9F0952076B83C3E PUSH1 0x40 DUP3 ADD MLOAD SWAP2 DUP1 MLOAD PUSH3 0xCD2 PUSH3 0xCC4 PUSH1 0x80 PUSH1 0x60 DUP6 ADD MLOAD SWAP5 ADD MLOAD SWAP6 PUSH3 0x11B7 JUMP JUMPDEST SWAP5 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH3 0x11D9 JUMP JUMPDEST SUB SWAP1 LOG3 ADD PUSH3 0xB6B JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH1 0x40 MLOAD DUP1 PUSH3 0xA57 DUP7 DUP3 PUSH3 0xF0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x139BC81D1BDAD95B8819185D18481C1C9BDD9A591959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x155 JUMPI DUP3 ADD PUSH1 0xC0 SWAP2 DUP3 PUSH1 0x23 NOT DUP4 CALLDATASIZE SUB ADD SLT PUSH3 0x155 JUMPI PUSH1 0x40 MLOAD SWAP3 DUP4 ADD DUP4 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x772 JUMPI PUSH1 0x40 MSTORE PUSH1 0x24 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x155 JUMPI PUSH3 0xD94 SWAP1 PUSH1 0x24 CALLDATASIZE SWAP2 DUP6 ADD ADD PUSH3 0xE92 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x44 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x155 JUMPI PUSH3 0xDBC SWAP1 PUSH1 0x24 CALLDATASIZE SWAP2 DUP6 ADD ADD PUSH3 0xE92 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x64 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x155 JUMPI PUSH3 0xDE7 SWAP1 PUSH1 0x24 CALLDATASIZE SWAP2 DUP6 ADD ADD PUSH3 0xE92 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x84 DUP3 ADD CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH3 0x155 JUMPI PUSH1 0xC4 PUSH1 0x20 SWAP5 SWAP4 PUSH3 0xE1A DUP7 SWAP6 PUSH1 0x24 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH3 0xE92 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0xA4 DUP2 ADD CALLDATALOAD PUSH1 0x80 DUP5 ADD MSTORE ADD CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP4 ADD SWAP3 PUSH3 0xAEC JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH3 0x772 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x772 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x772 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH3 0x155 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH3 0xEAC DUP3 PUSH3 0xE76 JUMP JUMPDEST SWAP3 PUSH3 0xEBC PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH3 0xE3C JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH3 0x155 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x155 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x155 JUMPI JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH3 0xF36 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH3 0xF27 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH3 0xF68 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xF57 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH3 0xF94 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH3 0xF54 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH3 0xFBB SWAP2 DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH3 0xF54 JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST ISZERO PUSH3 0xFD0 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41646D696E2063616E6E6F74206265207A65726F206164647265737300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH3 0x102A JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH3 0x1048 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746F636B2073796D626F6C2063616E6E6F7420626520656D70747900000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH3 0x1095 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746F636B20746F6B656E20616C726561647920657869737473000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP6 SWAP3 PUSH3 0x1122 SWAP1 PUSH3 0x1113 PUSH3 0x1131 SWAP5 PUSH3 0x1104 PUSH1 0xC0 SWAP10 SWAP13 SWAP12 SWAP9 SWAP6 PUSH1 0xE0 DUP13 MSTORE PUSH1 0xE0 DUP13 ADD SWAP1 PUSH3 0xF79 JUMP JUMPDEST SWAP1 DUP11 DUP3 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH3 0xF79 JUMP JUMPDEST SWAP1 DUP9 DUP3 SUB PUSH1 0x40 DUP11 ADD MSTORE PUSH3 0xF79 JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x60 DUP9 ADD MSTORE PUSH3 0xF79 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH3 0x772 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x4 SSTORE DUP2 LT ISZERO PUSH3 0x102A JUMPI PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH3 0x11D1 SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH3 0xF54 JUMP JUMPDEST DUP2 ADD SUB SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 PUSH3 0x1206 SWAP1 PUSH3 0x11F7 PUSH1 0x40 SWAP4 PUSH1 0x60 DUP9 MSTORE PUSH1 0x60 DUP9 ADD SWAP1 PUSH3 0xF79 JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x20 DUP9 ADD MSTORE PUSH3 0xF79 JUMP JUMPDEST SWAP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH3 0x155 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x155 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH3 0x155 JUMPI DUP1 MLOAD PUSH3 0x1242 DUP2 PUSH3 0xE76 JUMP JUMPDEST SWAP3 PUSH3 0x1252 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH3 0xE3C JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH3 0x155 JUMPI PUSH3 0x1273 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH3 0xF54 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH3 0x128B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH3 0x12B5 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT INVALID PUSH2 0x160 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0xA2C JUMPI PUSH3 0x2F40 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH3 0x21 DUP3 DUP6 PUSH3 0xA31 JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0xE0 DUP2 DUP4 SUB SLT PUSH3 0xA2C JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xA2C JUMPI DUP3 PUSH3 0x50 SWAP2 DUP4 ADD PUSH3 0xA7A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xA2C JUMPI DUP4 PUSH3 0x72 SWAP2 DUP5 ADD PUSH3 0xA7A JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xA2C JUMPI DUP5 PUSH3 0x94 SWAP2 DUP6 ADD PUSH3 0xA7A JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MLOAD SWAP1 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0xA2C JUMPI PUSH3 0xB7 SWAP2 DUP6 ADD PUSH3 0xA7A JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP5 ADD MLOAD SWAP2 PUSH1 0xC0 PUSH1 0xA0 DUP7 ADD MLOAD SWAP6 ADD MLOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP6 SUB PUSH3 0xA2C JUMPI PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP5 DUP3 LT OR PUSH3 0x5FB JUMPI PUSH1 0x40 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP5 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x5FB JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0xA21 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0x5DA JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x9BB JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH3 0x931 JUMPI PUSH1 0x0 SWAP2 PUSH3 0x925 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x5FB JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x91A JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x5DA JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x8A5 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x816 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x80A JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH3 0x1DF DUP2 PUSH3 0xDD3 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH3 0x1EE DUP3 PUSH3 0xF78 JUMP JUMPDEST PUSH2 0x140 MSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 DUP2 PUSH1 0xE0 MSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 DUP1 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP5 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 DUP2 DUP4 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP5 GT OR PUSH3 0x5FB JUMPI PUSH1 0x40 DUP4 SWAP1 MSTORE DUP2 MLOAD SWAP1 KECCAK256 PUSH1 0x80 MSTORE ADDRESS PUSH1 0xC0 MSTORE PUSH1 0x1 PUSH1 0xA SSTORE PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x11 SSTORE PUSH10 0x152D02C7E14AF6800000 PUSH1 0x12 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH3 0x7C6 JUMPI POP POP DUP2 ISZERO PUSH3 0x777 JUMPI DUP2 DUP5 GT PUSH3 0x728 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x5FB JUMPI PUSH1 0xB SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x71D JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x5DA JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x6A8 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x61D JUMPI PUSH1 0x0 SWAP3 PUSH3 0x611 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xB SSTORE JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x5FB JUMPI PUSH1 0xC SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x5F0 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0x5DA JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x570 JUMPI JUMPDEST POP PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH3 0x503 JUMPI SWAP5 DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH3 0x4F7 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xC SSTORE JUMPDEST PUSH1 0xD SSTORE PUSH3 0x3A1 DUP2 PUSH3 0xAD5 JUMP JUMPDEST POP PUSH3 0x3AD DUP2 PUSH3 0xB56 JUMP JUMPDEST POP PUSH3 0x3B9 DUP2 PUSH3 0xBF9 JUMP JUMPDEST POP PUSH3 0x3C5 DUP2 PUSH3 0xC97 JUMP JUMPDEST POP PUSH3 0x3D1 DUP2 PUSH3 0xD35 JUMP JUMPDEST POP DUP2 PUSH3 0x42B JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E50 SWAP1 DUP2 PUSH3 0x10D0 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x186C ADD MSTORE PUSH1 0xA0 MLOAD DUP2 PUSH2 0x1938 ADD MSTORE PUSH1 0xC0 MLOAD DUP2 PUSH2 0x1836 ADD MSTORE PUSH1 0xE0 MLOAD DUP2 PUSH2 0x18BB ADD MSTORE PUSH2 0x100 MLOAD DUP2 PUSH2 0x18E1 ADD MSTORE PUSH2 0x120 MLOAD DUP2 PUSH2 0x9AF ADD MSTORE PUSH2 0x140 MLOAD DUP2 PUSH2 0x9D9 ADD MSTORE RETURN JUMPDEST PUSH1 0xFF PUSH1 0x8 SLOAD AND PUSH3 0x4E5 JUMPI PUSH1 0x2 SLOAD DUP3 DUP2 ADD DUP1 SWAP2 GT PUSH3 0x4CF JUMPI PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE PUSH32 0x3F2C9D57C068687834F0DE942A9BABB9E5ACAB57D516D3480A3C16EE165A4273 SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP6 SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 LOG2 CODESIZE DUP1 PUSH3 0x3D9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x37D JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 PUSH1 0xC PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP9 DUP2 LT PUSH3 0x557 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH3 0x53D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xC SSTORE PUSH3 0x393 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x52E JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0x517 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH3 0x5CF JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x5C2 JUMPI POP PUSH3 0x35E JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x5B3 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x5AA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x34A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x311 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x68F JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH3 0x675 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xB SSTORE PUSH3 0x327 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x666 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH3 0x64E JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 MSTORE SWAP1 SWAP2 POP PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH3 0x712 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x702 JUMPI POP PUSH3 0x2F8 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH3 0x6F3 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x6E5 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x2E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C20737570706C792065786365656473206D617820737570706C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x79 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820737570706C79206D7573742062652067726561746572207468616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0xC4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0xE4 DUP3 ADD MSTORE PUSH32 0x41646D696E2063616E6E6F74206265207A65726F206164647265737300000000 PUSH2 0x104 SWAP1 SWAP2 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x1BE JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP4 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x889 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x86F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH3 0x1D4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x860 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x843 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE SWAP1 SWAP2 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH3 0x90F JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x8FF JUMPI POP PUSH3 0x1A5 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH3 0x8F0 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x8E2 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x18F JUMP JUMPDEST SWAP1 POP DUP4 ADD MLOAD CODESIZE PUSH3 0x155 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 JUMPDEST PUSH1 0x1F NOT DUP4 AND DUP5 LT PUSH3 0x9A2 JUMPI PUSH1 0x1 SWAP4 POP DUP3 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x988 JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH3 0x16A JUMP JUMPDEST DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH3 0x97A JUMP JUMPDEST DUP6 DUP2 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH3 0x95D JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH3 0xA19 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0xA0C JUMPI POP POP PUSH3 0x13C JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x9F4 JUMP JUMPDEST POP DUP1 PUSH3 0x9F4 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x128 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH3 0x5FB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH3 0xA69 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xA58 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH3 0xA2C JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x5FB JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH3 0xAB1 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH3 0xA31 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH3 0xA2C JUMPI PUSH3 0xAD2 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH3 0xA55 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xEC8156718A8372B1DB44BB411437D0870F3E3790D4A08526D024CE1B0B668F6B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0xB52 JUMPI DUP2 DUP1 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2F20 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xD5D09B8F3165A736D25B1A14611612AC91830C1B82012B1C33B2DAC7C90A0649 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 SWAP1 PUSH1 0xFF AND PUSH3 0xBF4 JUMPI DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2F20 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xAFC27DADD95CC92CC3511384503AFBC19841FE8E9D61FEFC7F2FB1E6A3BD40C2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 SWAP1 PUSH1 0xFF AND PUSH3 0xBF4 JUMPI DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2F20 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x84574A31E2F767388BFA57BC81FF2590DF95D3022C04C363CCA3E37EE9608631 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A SWAP1 PUSH1 0xFF AND PUSH3 0xBF4 JUMPI DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2F20 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x4FCB20797BC22B6BDF05ED948026FDC1B31B30D107AC0811A08B18C975BBD64B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x442A94F1A1FAC79AF32856AF2A64F63648CFA2EF3B98610A5BB7CBEC4CEE6985 SWAP1 PUSH1 0xFF AND PUSH3 0xBF4 JUMPI DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2F20 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 SWAP1 DUP3 DUP2 LT ISZERO PUSH3 0xE53 JUMPI POP SWAP1 PUSH1 0x1F DUP3 MLOAD GT PUSH3 0xE11 JUMPI DUP1 DUP3 MLOAD SWAP3 ADD MLOAD SWAP1 DUP1 DUP4 LT PUSH3 0xE02 JUMPI POP OR SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x0 NOT SWAP2 SUB PUSH1 0x3 SHL SHL AND OR SWAP1 JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH3 0xE45 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP5 MSTORE DUP1 PUSH1 0x4 DUP6 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 SWAP2 DUP3 PUSH1 0x24 DUP8 ADD MSTORE DUP7 DUP7 ADD SWAP2 ADD PUSH3 0xA55 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x5FB JUMPI PUSH1 0x5 SWAP3 DUP4 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0xF6D JUMPI JUMPDEST DUP4 DUP3 LT EQ PUSH3 0x5DA JUMPI PUSH1 0x1F DUP2 GT PUSH3 0xF36 JUMPI JUMPDEST POP DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0xECC JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH3 0xEC0 JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0xEAA JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND DUP8 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0xF1B JUMPI POP POP POP LT PUSH3 0xF01 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0xEF4 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0xEE1 JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE DUP5 PUSH1 0x1F DUP5 PUSH1 0x0 KECCAK256 SWAP3 ADD DUP8 SHR DUP3 ADD SWAP2 PUSH1 0x1F DUP7 ADD DUP9 SHR ADD JUMPDEST DUP3 DUP2 LT PUSH3 0xF60 JUMPI POP POP PUSH3 0xE8C JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0xF50 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xE79 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP1 DUP2 DUP2 LT ISZERO PUSH3 0xFA5 JUMPI POP PUSH1 0x1F DUP3 MLOAD GT PUSH3 0xE11 JUMPI DUP1 DUP3 MLOAD SWAP3 ADD MLOAD SWAP1 DUP1 DUP4 LT PUSH3 0xE02 JUMPI POP OR SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x5FB JUMPI PUSH1 0x6 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x10C4 JUMPI JUMPDEST DUP4 DUP3 LT EQ PUSH3 0x5DA JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x108A JUMPI JUMPDEST POP DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0x101E JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH3 0x1012 JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x6 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0xFFB JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND PUSH1 0x6 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0x106F JUMPI POP POP POP LT PUSH3 0x1055 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x6 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x1047 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x1034 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 MSTORE DUP5 PUSH1 0x1F DUP5 PUSH1 0x0 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 PUSH1 0x1F DUP7 ADD PUSH1 0x5 SHR ADD JUMPDEST DUP3 DUP2 LT PUSH3 0x10B7 JUMPI POP POP PUSH3 0xFDD JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0x10A7 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xFCA JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 PUSH1 0xE0 DUP5 CALLDATALOAD DUP2 SHR SWAP3 DUP4 PUSH4 0x1FFC9A7 EQ PUSH2 0x118A JUMPI POP DUP3 PUSH4 0x62D3BD7 EQ PUSH2 0x114E JUMPI DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x1128 JUMPI DUP3 PUSH4 0x95EA7B3 EQ PUSH2 0x10FD JUMPI DUP3 PUSH4 0x18160DDD EQ PUSH2 0x10DD JUMPI DUP3 PUSH4 0x1E293C10 EQ PUSH2 0x108E JUMPI DUP3 PUSH4 0x23B872DD EQ PUSH2 0xF9A JUMPI DUP3 PUSH4 0x248A9CA3 EQ PUSH2 0xF6E JUMPI DUP3 PUSH4 0x2803212F EQ PUSH2 0xF05 JUMPI DUP3 PUSH4 0x282C51F3 EQ PUSH2 0xEC9 JUMPI DUP3 PUSH4 0x2F2FF15D EQ PUSH2 0xE9F JUMPI DUP3 PUSH4 0x313CE567 EQ PUSH2 0xE82 JUMPI DUP3 PUSH4 0x3644E515 EQ PUSH2 0xE5D JUMPI DUP3 PUSH4 0x36568ABE EQ PUSH2 0xE16 JUMPI DUP3 PUSH4 0x3E6968B6 EQ PUSH2 0xDF5 JUMPI DUP3 PUSH4 0x3F4BA83A EQ PUSH2 0xD8A JUMPI DUP3 PUSH4 0x40C10F19 EQ PUSH2 0xBE0 JUMPI DUP3 PUSH4 0x5C975ABB EQ PUSH2 0xBBB JUMPI DUP3 PUSH4 0x70A08231 EQ PUSH2 0xB83 JUMPI DUP3 PUSH4 0x7D89D05C EQ PUSH2 0xB4A JUMPI DUP3 PUSH4 0x7ECEBE00 EQ PUSH2 0xB11 JUMPI DUP3 PUSH4 0x8456CB59 EQ PUSH2 0xAB5 JUMPI DUP3 PUSH4 0x84B0196E EQ PUSH2 0x997 JUMPI DUP3 PUSH4 0x91D14854 EQ PUSH2 0x94F JUMPI DUP3 PUSH4 0x95D89B41 EQ PUSH2 0x929 JUMPI DUP3 PUSH4 0x9DC29FAC EQ PUSH2 0x740 JUMPI DUP3 PUSH4 0xA217FDDF EQ PUSH2 0x724 JUMPI DUP3 PUSH4 0xA9059CBB EQ PUSH2 0x6F2 JUMPI DUP3 PUSH4 0xABB1DC44 EQ PUSH2 0x624 JUMPI DUP3 PUSH4 0xC76B0888 EQ PUSH2 0x604 JUMPI DUP3 PUSH4 0xC87CBE56 EQ PUSH2 0x5DE JUMPI DUP3 PUSH4 0xC8C8EBE4 EQ PUSH2 0x5BE JUMPI DUP3 PUSH4 0xD01DD6D2 EQ PUSH2 0x53B JUMPI DUP3 PUSH4 0xD505ACCF EQ PUSH2 0x3D5 JUMPI POP DUP2 PUSH4 0xD5391393 EQ PUSH2 0x39A JUMPI DUP2 PUSH4 0xD547741F EQ PUSH2 0x356 JUMPI POP DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xDBAC26E9 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xF5EC2EED EQ PUSH2 0x238 JUMPI PUSH4 0xFDB98082 EQ PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x21A PUSH2 0x121E JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x10 DUP5 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI DUP1 MLOAD PUSH2 0x275 SWAP2 PUSH2 0x263 DUP3 PUSH2 0x25C DUP2 PUSH2 0x1459 JUMP JUMPDEST SUB DUP4 PUSH2 0x1519 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x11DE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x2D0 PUSH2 0x121E JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x234 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP2 PUSH1 0xFF SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x325 PUSH2 0x121E JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x396 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI PUSH2 0x392 SWAP2 CALLDATALOAD PUSH2 0x38D PUSH1 0x1 PUSH2 0x37B PUSH2 0x1239 JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x195E JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 MSTORE RETURN JUMPDEST SWAP1 DUP5 SWAP3 POP CALLVALUE PUSH2 0x396 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI PUSH2 0x3F1 PUSH2 0x121E JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x1239 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x537 JUMPI DUP2 TIMESTAMP GT PUSH2 0x520 JUMPI DUP9 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP8 AND SWAP5 DUP6 DUP12 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP3 DUP12 KECCAK256 SWAP2 DUP3 SLOAD SWAP3 PUSH1 0x1 DUP5 ADD SWAP1 SSTORE DUP4 MLOAD SWAP3 DUP8 PUSH1 0x20 DUP6 ADD SWAP6 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP8 MSTORE DUP6 ADD MSTORE DUP7 DUP12 AND PUSH1 0x60 DUP6 ADD MSTORE DUP12 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 MSTORE DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x50D JUMPI DUP12 MSTORE MLOAD SWAP1 KECCAK256 PUSH2 0x4DB SWAP2 PUSH2 0x4D2 SWAP2 PUSH2 0x4AC PUSH2 0x1833 JUMP JUMPDEST SWAP1 DUP13 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0xC4 CALLDATALOAD SWAP2 PUSH1 0x42 PUSH1 0xA4 CALLDATALOAD SWAP3 KECCAK256 PUSH2 0x1C6D JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x1CFD JUMP JUMPDEST AND DUP2 DUP2 SUB PUSH2 0x4F2 JUMPI DUP7 PUSH2 0x4EF DUP8 DUP8 DUP8 PUSH2 0x19F8 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP8 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP2 POP REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 DUP8 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST DUP9 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH2 0x556 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x5BA JUMPI PUSH32 0xCF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8 SWAP2 PUSH1 0x20 SWAP2 PUSH2 0x591 PUSH2 0x155E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP7 MSTORE PUSH1 0xE DUP4 MSTORE DUP5 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE SWAP4 MLOAD SWAP1 DUP2 MSTORE LOG2 DUP1 RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x12 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI DUP1 MLOAD PUSH2 0x275 SWAP2 PUSH2 0x263 DUP3 PUSH2 0x25C DUP2 PUSH2 0x13CB JUMP JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x11 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP1 DUP6 CALLVALUE PUSH2 0x6EF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6EF JUMPI POP DUP2 MLOAD SWAP2 PUSH2 0x64F DUP4 PUSH2 0x648 DUP2 PUSH2 0x1289 JUMP JUMPDEST SUB DUP5 PUSH2 0x1519 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH2 0x65F DUP3 PUSH2 0x25C DUP2 PUSH2 0x133D JUMP JUMPDEST PUSH2 0x6D9 PUSH1 0x2 SLOAD SWAP3 PUSH2 0x6CB PUSH1 0xD SLOAD SWAP4 DUP1 MLOAD PUSH2 0x683 DUP2 PUSH2 0x67C DUP2 PUSH2 0x13CB JUMP JUMPDEST SUB DUP3 PUSH2 0x1519 JUMP JUMPDEST PUSH2 0x6BE DUP3 MLOAD SWAP5 PUSH2 0x69D DUP7 PUSH2 0x696 DUP2 PUSH2 0x1459 JUMP JUMPDEST SUB DUP8 PUSH2 0x1519 JUMP JUMPDEST PUSH2 0x6B0 DUP5 MLOAD SWAP12 DUP12 DUP14 SWAP13 DUP14 MSTORE DUP13 ADD SWAP1 PUSH2 0x11DE JUMP JUMPDEST SWAP1 DUP11 DUP3 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x11DE JUMP JUMPDEST SWAP2 DUP9 DUP4 SUB SWAP1 DUP10 ADD MSTORE PUSH2 0x11DE JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x11DE JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x12 PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x71D PUSH2 0x713 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x165A JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 POP CALLVALUE PUSH2 0x396 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI PUSH2 0x75B PUSH2 0x121E JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 SWAP3 DUP4 DUP7 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x9 DUP6 MSTORE DUP3 DUP8 KECCAK256 CALLER DUP9 MSTORE DUP6 MSTORE PUSH1 0xFF DUP4 DUP9 KECCAK256 SLOAD AND ISZERO PUSH2 0x90E JUMPI POP PUSH2 0x7A9 PUSH2 0x19D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x8CC JUMPI DUP6 DUP8 MSTORE DUP7 DUP6 MSTORE DUP4 DUP4 DUP9 KECCAK256 SLOAD LT PUSH2 0x88A JUMPI PUSH2 0x7D2 PUSH2 0x1A8B JUMP JUMPDEST DUP6 DUP8 MSTORE DUP7 DUP6 MSTORE DUP3 DUP8 KECCAK256 SLOAD SWAP2 DUP5 DUP4 LT PUSH2 0x856 JUMPI POP POP SWAP1 DUP3 PUSH32 0xFD38818F5291BF0BB3A2A48AADC06BA8757865D1DABD804585338AAB3009DCB6 SWAP5 SWAP4 SWAP3 DUP7 DUP9 MSTORE DUP8 DUP6 MSTORE SUB DUP2 DUP8 KECCAK256 SSTORE DUP2 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE DUP6 DUP6 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 DUP5 MLOAD DUP7 DUP2 MSTORE LOG3 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x1 PUSH1 0xA SSTORE DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST POP DUP4 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E636520746F206275726E00000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP4 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206275726E2066726F6D207A65726F2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP3 MLOAD SWAP2 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI DUP1 MLOAD PUSH2 0x275 SWAP2 PUSH2 0x263 DUP3 PUSH2 0x25C DUP2 PUSH2 0x133D JUMP JUMPDEST POP SWAP1 POP CALLVALUE PUSH2 0x396 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x971 PUSH2 0x1239 JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x9 DUP7 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 DUP4 DUP6 CALLVALUE PUSH2 0x6EF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6EF JUMPI PUSH2 0x9D3 PUSH32 0x0 PUSH2 0x1AA9 JUMP JUMPDEST SWAP1 PUSH2 0x9FD PUSH32 0x0 PUSH2 0x1BAD JUMP JUMPDEST SWAP3 DUP1 MLOAD SWAP4 PUSH1 0x20 SWAP4 PUSH1 0x20 DUP7 ADD SWAP7 DUP7 DUP9 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP10 GT OR PUSH2 0xAA2 JUMPI POP SWAP6 SWAP4 SWAP1 PUSH2 0xA58 DUP4 PUSH1 0x20 SWAP3 DUP8 DUP12 SWAP10 SWAP7 MSTORE DUP7 DUP7 MSTORE PUSH2 0xA4B DUP3 MLOAD SWAP11 DUP12 SWAP11 PUSH1 0xF PUSH1 0xF8 SHL DUP13 MSTORE DUP1 DUP8 DUP14 ADD MSTORE DUP12 ADD SWAP1 PUSH2 0x11DE JUMP JUMPDEST SWAP2 DUP10 DUP4 SUB SWAP1 DUP11 ADD MSTORE PUSH2 0x11DE JUMP JUMPDEST SWAP3 CHAINID PUSH1 0x60 DUP9 ADD MSTORE ADDRESS PUSH1 0x80 DUP9 ADD MSTORE DUP5 PUSH1 0xA0 DUP9 ADD MSTORE DUP7 DUP5 SUB PUSH1 0xC0 DUP9 ADD MSTORE MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0xA8B JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xA7C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH2 0xAF4 PUSH2 0x15D8 JUMP JUMPDEST PUSH2 0xAFC PUSH2 0x1A8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB3A PUSH2 0x121E JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB73 PUSH2 0x121E JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xF DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBAC PUSH2 0x121E JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x8 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP5 DUP3 DUP6 CALLVALUE PUSH2 0x396 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI PUSH2 0xBFB PUSH2 0x121E JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 SWAP3 DUP4 DUP7 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x9 DUP6 MSTORE DUP3 DUP8 KECCAK256 CALLER DUP9 MSTORE DUP6 MSTORE PUSH1 0xFF DUP4 DUP9 KECCAK256 SLOAD AND ISZERO PUSH2 0xD6C JUMPI POP PUSH2 0xC49 PUSH2 0x19D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 ISZERO PUSH2 0xD2B JUMPI PUSH1 0x2 SLOAD SWAP1 PUSH2 0xC67 DUP5 DUP4 PUSH2 0x153B JUMP JUMPDEST PUSH1 0xD SLOAD LT PUSH2 0xCEF JUMPI POP SWAP1 PUSH2 0xCA6 DUP4 PUSH32 0x3F2C9D57C068687834F0DE942A9BABB9E5ACAB57D516D3480A3C16EE165A4273 SWAP6 SWAP5 SWAP4 PUSH2 0xCA1 PUSH2 0x1A8B JUMP JUMPDEST PUSH2 0x153B JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP7 MSTORE DUP6 DUP4 MSTORE DUP1 DUP7 KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE DUP5 DUP7 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 DUP5 MLOAD DUP7 DUP2 MSTORE LOG3 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x1 PUSH1 0xA SSTORE DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x45786365656473206D6178696D756D20737570706C79 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206D696E7420746F207A65726F20616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP9 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST POP SWAP1 POP CALLVALUE PUSH2 0x396 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI PUSH2 0xDA5 PUSH2 0x15D8 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0xDE7 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x8 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0x15180 TIMESTAMP DIV DUP2 MSTORE RETURN JUMPDEST POP DUP4 DUP4 CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH2 0xE31 PUSH2 0x1239 JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0xE4E JUMPI POP PUSH2 0x392 SWAP2 SWAP3 CALLDATALOAD PUSH2 0x195E JUMP JUMPDEST MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xE7B PUSH2 0x1833 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP5 DUP3 DUP6 CALLVALUE PUSH2 0x396 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI PUSH2 0x392 SWAP2 CALLDATALOAD PUSH2 0xEC4 PUSH1 0x1 PUSH2 0x37B PUSH2 0x1239 JUMP JUMPDEST PUSH2 0x17B3 JUMP JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH32 0xD3D22FFD28B02735CF411BD7F925BD8DA01212C7028153E0D632E2953AC3088E PUSH1 0x20 PUSH2 0xF43 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xF4F PUSH2 0x155E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP7 MSTORE PUSH1 0xF DUP4 MSTORE DUP5 DUP7 KECCAK256 DUP3 SWAP1 SSTORE SWAP4 MLOAD SWAP1 DUP2 MSTORE LOG2 DUP1 RETURN JUMPDEST POP SWAP1 POP CALLVALUE PUSH2 0x396 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x396 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x9 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 DUP7 CALLVALUE PUSH2 0x6EF JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x6EF JUMPI PUSH2 0xFB6 PUSH2 0x121E JUMP JUMPDEST PUSH2 0xFBE PUSH2 0x1239 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 LT PUSH2 0xFFA JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x71D DUP10 DUP10 DUP10 PUSH2 0x165A JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x1062 JUMPI DUP2 ISZERO PUSH2 0x104B JUMPI CALLER ISZERO PUSH2 0x1034 JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x71D DUP8 PUSH2 0xFEC JUMP JUMPDEST DUP8 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST POP SWAP1 POP CALLVALUE PUSH2 0x396 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x396 JUMPI PUSH32 0x7C1CB3702D8E1FA6D24B12DD90670AB69C6D66D58233103D37DA8B07D6B850AC SWAP2 PUSH1 0x20 SWAP2 CALLDATALOAD SWAP1 PUSH2 0x10D1 PUSH2 0x155E JUMP JUMPDEST DUP2 PUSH1 0x12 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x71D PUSH2 0x111E PUSH2 0x121E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x19F8 JUMP JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI DUP1 MLOAD PUSH2 0x275 SWAP2 PUSH2 0x263 DUP3 PUSH2 0x25C DUP2 PUSH2 0x1289 JUMP JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x442A94F1A1FAC79AF32856AF2A64F63648CFA2EF3B98610A5BB7CBEC4CEE6985 DUP2 MSTORE RETURN JUMPDEST DUP6 SWAP1 DUP4 CALLVALUE PUSH2 0x396 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x396 JUMPI CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x396 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x11CD JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x11C6 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x120A JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1234 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1234 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x127F JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1269 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1299 DUP3 PUSH2 0x124F JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1318 JUMPI POP PUSH1 0x1 EQ PUSH2 0x12BC JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP3 SWAP4 SWAP5 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP3 PUSH1 0x0 SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x1305 JUMPI POP POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x12B6 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP5 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x12EB JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x12B6 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x134D DUP3 PUSH2 0x124F JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1318 JUMPI POP PUSH1 0x1 EQ PUSH2 0x136F JUMPI POP POP POP POP JUMP JUMPDEST SWAP3 SWAP4 SWAP5 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP3 PUSH1 0x0 SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x13B8 JUMPI POP POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x12B6 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP5 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x139E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x13DB DUP3 PUSH2 0x124F JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1318 JUMPI POP PUSH1 0x1 EQ PUSH2 0x13FD JUMPI POP POP POP POP JUMP JUMPDEST SWAP3 SWAP4 SWAP5 POP PUSH1 0xB PUSH1 0x0 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 SWAP3 PUSH1 0x0 SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x1446 JUMPI POP POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x12B6 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP5 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x142C JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1469 DUP3 PUSH2 0x124F JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1318 JUMPI POP PUSH1 0x1 EQ PUSH2 0x148B JUMPI POP POP POP POP JUMP JUMPDEST SWAP3 SWAP4 SWAP5 POP PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP3 PUSH1 0x0 SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x14D4 JUMPI POP POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x12B6 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP5 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1503 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1503 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1548 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4FCB20797BC22B6BDF05ED948026FDC1B31B30D107AC0811A08B18C975BBD64B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x442A94F1A1FAC79AF32856AF2A64F63648CFA2EF3B98610A5BB7CBEC4CEE6985 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x15BA JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x84574A31E2F767388BFA57BC81FF2590DF95D3022C04C363CCA3E37EE9608631 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x15BA JUMPI POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x15BA JUMPI POP JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP3 SWAP1 DUP4 ISZERO PUSH2 0x179A JUMPI DUP5 AND SWAP4 DUP5 ISZERO PUSH2 0x1781 JUMPI DUP3 PUSH2 0x1683 SWAP2 DUP4 PUSH2 0x1D82 JUMP JUMPDEST ISZERO PUSH2 0x1745 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP2 DUP3 DUP3 KECCAK256 PUSH3 0x15180 TIMESTAMP DIV DUP4 MSTORE PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 PUSH2 0x16B1 DUP6 DUP3 SLOAD PUSH2 0x153B JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x16BB PUSH2 0x1A8B JUMP JUMPDEST DUP5 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SLOAD SWAP1 DUP5 DUP3 LT PUSH2 0x1714 JUMPI POP SWAP2 DUP1 DUP3 DUP6 PUSH1 0x20 SWAP6 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP9 SWAP7 MSTORE DUP3 DUP8 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP8 DUP2 MSTORE KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP4 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151C985B9CD9995C881B9BDD08185B1B1BDDD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x182E JUMPI DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST ADDRESS PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1935 JUMPI JUMPDEST ISZERO PUSH2 0x188E JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP3 MSTORE PUSH32 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1503 JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x1865 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x182E JUMPI DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xA SLOAD EQ PUSH2 0x19E6 JUMPI PUSH1 0x2 PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x1A72 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x1A59 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x8 SLOAD AND PUSH2 0x1A97 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x1AE7 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x1AD5 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1ACB DUP4 PUSH2 0x14E7 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x5 SLOAD DUP2 PUSH1 0x0 PUSH2 0x1AFA DUP4 PUSH2 0x124F JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1B89 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1B28 JUMPI JUMPDEST POP POP PUSH2 0x1B25 SWAP3 POP SUB DUP3 PUSH2 0x1519 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x1B71 JUMPI POP PUSH2 0x1B25 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0x1B17 JUMP JUMPDEST DUP6 SLOAD DUP8 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x1B56 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP3 POP PUSH2 0x1B25 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x1BCF JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x1AD5 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1ACB DUP4 PUSH2 0x14E7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x6 SLOAD DUP2 PUSH1 0x0 PUSH2 0x1BE2 DUP4 PUSH2 0x124F JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1B89 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1C0C JUMPI POP POP PUSH2 0x1B25 SWAP3 POP SUB DUP3 PUSH2 0x1519 JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0x6 PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x1C55 JUMPI POP PUSH2 0x1B25 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0x1B17 JUMP JUMPDEST DUP6 SLOAD DUP8 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x1C3A JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x1CF1 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x1CE5 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1CDC JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x1D6C JUMPI DUP1 PUSH2 0x1D0F JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x1D29 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x1D4A JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0x1D54 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND SWAP1 PUSH1 0x0 SWAP4 DUP3 DUP6 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND SWAP2 DUP3 ISZERO PUSH2 0x1E07 JUMPI JUMPDEST POP POP PUSH2 0x182E JUMPI PUSH1 0x12 SLOAD DUP3 GT PUSH2 0x182E JUMPI DUP3 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1DFA JUMPI PUSH2 0x1DEF SWAP1 SWAP2 JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 PUSH3 0x15180 TIMESTAMP DIV DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD PUSH2 0x153B JUMP JUMPDEST GT PUSH2 0x1B25 JUMPI POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH2 0x1DEF PUSH1 0x11 SLOAD SWAP2 PUSH2 0x1DD1 JUMP JUMPDEST AND DUP5 MSTORE POP PUSH1 0x40 DUP4 KECCAK256 SLOAD PUSH1 0xFF AND CODESIZE DUP1 PUSH2 0x1DAA JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xD7 CALL PUSH8 0x71B70444D4041C0B PUSH8 0x23667F1452CA7001 DUP6 SWAP5 0xB4 MULMOD 0xA9 SWAP2 NOT 0xAD SWAP2 0xF8 SLOAD PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER 0x2F DUP8 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0DA2646970 PUSH7 0x7358221220A021 0xD4 ORIGIN DUP1 0xCB CODECOPY ADDRESS 0x2D 0xEC 0xB8 PUSH1 0x6 PUSH8 0x8E34D4B5DD4014A7 DUP8 BALANCE 0xC6 0xD9 STOP 0xBB LT 0x1E CREATE2 0xB0 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"333:7120:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;333:7120:27;;;;;;:::i;:::-;1500:62:2;;:::i;:::-;-1:-1:-1;;;;;333:7120:27;;;;2627:22:2;;2623:91;;333:7120:27;;;-1:-1:-1;;;;;333:7120:27;;;;;;;;3052:40:2;333:7120:27;3052:40:2;;333:7120:27;2623:91:2;333:7120:27;;-1:-1:-1;;;2672:31:2;;333:7120:27;;2672:31:2;;333:7120:27;;;2672:31:2;333:7120:27;;;;;;;;;;-1:-1:-1;;333:7120:27;;;;-1:-1:-1;;;;;333:7120:27;;:::i;:::-;;;;479:44;333:7120;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;333:7120:27;;;;;;-1:-1:-1;;;;;333:7120:27;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;3521:11;333:7120;;;;;;;;;;;;;;;;-1:-1:-1;;;;;333:7120:27;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;333:7120:27;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;4976:11;333:7120;;;;;;;;;;;;;;-1:-1:-1;;;;;333:7120:27;5019:19;;333:7120;;;;-1:-1:-1;;;5193:17:27;;333:7120;;;;5193:17;;;;;;;;333:7120;5193:17;;;333:7120;-1:-1:-1;333:7120:27;;-1:-1:-1;;;5224:19:27;;333:7120;;;;;5224:19;;;;;;;;333:7120;5224:19;;;333:7120;-1:-1:-1;333:7120:27;;-1:-1:-1;;;5257:24:27;;333:7120;;;;;5257:24;;;;;;;;333:7120;5257:24;;;333:7120;-1:-1:-1;333:7120:27;;-1:-1:-1;;;5295:24:27;;333:7120;5295:24;333:7120;;;5295:24;;;;;;;;333:7120;5295:24;;;333:7120;-1:-1:-1;333:7120:27;;-1:-1:-1;;;5333:22:27;;333:7120;5333:22;333:7120;;;5333:22;;;;;;;;333:7120;5333:22;;;333:7120;-1:-1:-1;333:7120:27;;-1:-1:-1;;;5369:21:27;;333:7120;5369:21;333:7120;;;5369:21;;;;;;;;333:7120;5369:21;;;333:7120;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;5369:21;;;;;;;;;;;;;;;;;:::i;:::-;;;333:7120;;;;;;;;;;;;;5369:21;;333:7120;5369:21;;;;;;;;333:7120;;;;;;;;;5333:22;;;;;;;;;;;;;;;;;:::i;:::-;;;333:7120;;;;;5333:22;;;;;;;;;5295:24;;;;;;;;;;;;;;;;;:::i;:::-;;;333:7120;;;;;5295:24;;;;;;;;;5257;;;;;;;333:7120;5257:24;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;5224:19;;;;;;;333:7120;5224:19;;;;;;:::i;:::-;;;;;5193:17;;;;;;333:7120;5193:17;;;;;;:::i;:::-;;;;333:7120;;;-1:-1:-1;;;333:7120:27;;;;;;;;;;;;;-1:-1:-1;;;333:7120:27;;;;;;;;;;;;;-1:-1:-1;;333:7120:27;;;;;;;;-1:-1:-1;;;;;333:7120:27;;;;;;;;;;;;;;-1:-1:-1;;333:7120:27;;;;;;-1:-1:-1;;;;;333:7120:27;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;333:7120:27;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;333:7120:27;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;333:7120:27;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;333:7120:27;;;;;;1500:62:2;;:::i;:::-;2466:103:15;;:::i;:::-;1575:71:27;333:7120;;1583:30;;1575:71;:::i;:::-;1656:78;333:7120;;;;;;;;;;;:::i;:::-;1664:11;333:7120;;;;;;;;;;;;;;-1:-1:-1;;;;;333:7120:27;1664:39;1656:78;:::i;:::-;1744:61;333:7120;;-1:-1:-1;;;;;333:7120:27;1752:20;;1744:61;:::i;:::-;333:7120;;1874:196;;;;;;;;-1:-1:-1;;;;;1874:196:27;;;;;;;;;;;;333:7120;;;;;;;;;;;1874:196;;:::i;:::-;;;333:7120;1874:196;;;;;;2303:79;;333:7120;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1664:11;333:7120;;;;;;;-1:-1:-1;;;;;333:7120:27;;;;;;;;;;;2216:12;333:7120;;;;;;;;;;;;;;2259:28;;;:::i;:::-;2303:79;:::i;:::-;333:7120;2303:79;333:7120;;;;;;;2303:79;;;:::i;:::-;;;;333:7120;1899:1:15;;333:7120:27;;;;;;1874:196;333:7120;;;;;;;;;;;;;;;;;-1:-1:-1;;333:7120:27;;;;;;;;;;;;;;;;;;;-1:-1:-1;;333:7120:27;;;;1500:62:2;;:::i;:::-;333:7120:27;;;-1:-1:-1;;;;;;333:7120:27;;;;-1:-1:-1;;;;;333:7120:27;3052:40:2;333:7120:27;;3052:40:2;333:7120:27;;;;;;;-1:-1:-1;;333:7120:27;;;;;;-1:-1:-1;;;;;333:7120:27;;;;;;;;;;;:::i;:::-;;;:::i;:::-;1500:62:2;;:::i;:::-;2725:71:27;333:7120;;2733:30;;2725:71;:::i;:::-;-1:-1:-1;;;;;333:7120:27;;;;;;;2814:30;;333:7120;;3171:32;3219:56;333:7120;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2921:11;333:7120;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2921:11;333:7120;;;;;;;-1:-1:-1;;;;;333:7120:27;;;;;;;;3023:24;3019:87;;333:7120;;;;3124:12;333:7120;;;;;3157:4;333:7120;;;;;;;;3171:32;:::i;3219:56::-;;333:7120;3219:56;;333:7120;3019:87;333:7120;;;3063:12;333:7120;;;;;;;;;;;;3019:87;;333:7120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;333:7120:27;;;;;;;;529:26;;;;;333:7120;;;;;;;;-1:-1:-1;;;;;333:7120:27;;;;;;;;;;;;;;-1:-1:-1;;333:7120:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;333:7120:27;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;333:7120:27;;;;;;-1:-1:-1;;;;;333:7120:27;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:2;;;:::i;:::-;2466:103:15;;:::i;:::-;333:7120:27;;5770:21;333:7120;;5828:61;-1:-1:-1;;;;;333:7120:27;;5836:20;;5828:61;:::i;:::-;333:7120;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;6036:3;333:7120;;6013:21;;;;;6089:13;;;;:::i;:::-;;6143:16;6129:75;333:7120;6143:16;;;333:7120;6137:34;;6129:75;:::i;:::-;333:7120;6143:16;;6238;6218:82;;-1:-1:-1;;;;;333:7120:27;;;;:::i;:::-;;;6226:43;6218:82;:::i;:::-;6425:9;;333:7120;6452:11;;;333:7120;6143:16;;6481;6515;333:7120;6515:16;;;6549:14;333:7120;6549:14;;333:7120;;6581:18;;333:7120;;;;6385:252;;;;;;-1:-1:-1;;;;;6385:252:27;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;333:7120;6385:252;;;;;;333:7120;6143:16;;6773;333:7120;;-1:-1:-1;;;;;333:7120:27;;6143:16;333:7120;;;:::i;:::-;;;-1:-1:-1;;;;;;333:7120:27;;;;;-1:-1:-1;333:7120:27;;;6819:12;333:7120;;;;;;;-1:-1:-1;;333:7120:27;;;;;6866:28;333:7120;6866:28;:::i;:::-;6908:32;;;;;:::i;:::-;333:7120;6972:189;333:7120;6143:16;;7008;7072:9;;;6972:189;;333:7120;;6515:16;;7099;6549:14;;333:7120;6972:189;;:::i;:::-;333:7120;;;6972:189;;;;;:::i;:::-;;;;333:7120;5998:13;;6013:21;333:7120;1899:1:15;;333:7120:27;;;;6013:21;333:7120;;:::i;:::-;;;-1:-1:-1;;;333:7120:27;;;;;;;;;;;;-1:-1:-1;;;333:7120:27;;;;;;;;;;-1:-1:-1;;;;;333:7120:27;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;333:7120:27;;;;;;;;;;;-1:-1:-1;;;;;333:7120:27;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;333:7120:27;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;333:7120:27;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;333:7120:27;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;333:7120:27;;;;;;;:::o;:::-;-1:-1:-1;;;;;333:7120:27;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;333:7120:27;;;;;;-1:-1:-1;;333:7120:27;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;333:7120:27;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;333:7120:27;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;333:7120:27;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;333:7120:27;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;333:7120:27;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;333:7120:27;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;6226:11;333:7120;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;333:7120:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;333:7120:27;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;333:7120:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;333:7120:27;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;333:7120:27;;;;;-1:-1:-1;;;;;;333:7120:27;-1:-1:-1;;;;;333:7120:27;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;333:7120:27;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;1796:162:2:-;1710:6;333:7120:27;-1:-1:-1;;;;;333:7120:27;735:10:11;1855:23:2;1851:101;;1796:162::o;1851:101::-;333:7120:27;;-1:-1:-1;;;1901:40:2;;735:10:11;1901:40:2;;;333:7120:27;;;1901:40:2;2575:307:15;1899:1;2702:7;333:7120:27;2702:18:15;2698:86;;1899:1;2702:7;1899:1;2575:307::o;2698:86::-;333:7120:27;;-1:-1:-1;;;2743:30:15;;;;"},"methodIdentifiers":{"allTokens(uint256)":"634282af","batchDeployStockTokens((string,string,string,string,uint256,uint256)[],address)":"0c2c0a53","deployStockToken(string,string,string,string,uint256,uint256,address)":"7b71586b","getAllTokens()":"2a5c792a","getTokenAddress(string)":"c4091236","getTokenCount()":"78a89567","getTokenInfo(string)":"8e0ad1cc","isRegisteredStockToken(address)":"e5b2e3a6","isStockToken(address)":"f1dc8c8b","owner()":"8da5cb5b","renounceOwnership()":"715018a6","stockTokens(string)":"8e445e75","transferOwnership(address)":"f2fde38b","updateStockToken(string,address)":"704f703a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"stockSymbol\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"companyName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"}],\"name\":\"StockTokenDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"stockSymbol\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"TokenUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"stockSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"companyName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"internalType\":\"struct NigerianStockFactory.TokenDeploymentData[]\",\"name\":\"_tokenData\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"batchDeployStockTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_stockSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_companyName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"deployStockToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_stockSymbol\",\"type\":\"string\"}],\"name\":\"getTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_stockSymbol\",\"type\":\"string\"}],\"name\":\"getTokenInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"companyName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"isRegisteredStockToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isStockToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"stockTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_stockSymbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_newTokenAddress\",\"type\":\"address\"}],\"name\":\"updateStockToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Factory contract for deploying Nigerian Stock Exchange tokens on Bitfinity EVM\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"batchDeployStockTokens((string,string,string,string,uint256,uint256)[],address)\":{\"details\":\"Batch deploy multiple stock tokens\",\"params\":{\"_admin\":\"Admin address for all tokens\",\"_tokenData\":\"Array of token deployment data\"}},\"deployStockToken(string,string,string,string,uint256,uint256,address)\":{\"details\":\"Deploy a new Nigerian stock token\",\"params\":{\"_admin\":\"Admin address for the token\",\"_companyName\":\"Company name\",\"_initialSupply\":\"Initial supply\",\"_maxSupply\":\"Maximum supply\",\"_name\":\"Token name\",\"_stockSymbol\":\"NGX stock symbol\",\"_symbol\":\"Token symbol\"}},\"getAllTokens()\":{\"details\":\"Get all deployed token addresses\",\"returns\":{\"_0\":\"Array of token addresses\"}},\"getTokenAddress(string)\":{\"details\":\"Get token address by stock symbol\",\"params\":{\"_stockSymbol\":\"Stock symbol\"},\"returns\":{\"_0\":\"Token address\"}},\"getTokenCount()\":{\"details\":\"Get total number of deployed tokens\",\"returns\":{\"_0\":\"Number of tokens\"}},\"getTokenInfo(string)\":{\"details\":\"Get token information by stock symbol\",\"params\":{\"_stockSymbol\":\"Stock symbol\"},\"returns\":{\"companyName\":\"Company name\",\"decimals\":\"Token decimals\",\"maxSupply\":\"Maximum token supply\",\"name\":\"Token name\",\"symbol\":\"Token symbol\",\"tokenAddress\":\"Token contract address\",\"totalSupply\":\"Total token supply\"}},\"isRegisteredStockToken(address)\":{\"details\":\"Check if address is a registered stock token\",\"params\":{\"_tokenAddress\":\"Token address to check\"},\"returns\":{\"_0\":\"True if registered stock token\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateStockToken(string,address)\":{\"details\":\"Update token address for a stock symbol (in case of redeployment)\",\"params\":{\"_newTokenAddress\":\"New token address\",\"_stockSymbol\":\"Stock symbol\"}}},\"title\":\"NigerianStockFactory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NigerianStockFactory.sol\":\"NigerianStockFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xecd08ad8132d88a5fcfd50f76a18583004fcdab4c33fb86343903ae420ca5a2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02422dce2e5305624e5cec644add1baa44bfa98ea131bf6030069089a2f56ca4\",\"dweb:/ipfs/QmcsSUkX7AYXNZE18LYE6JEmv8zZcCZvKfbUm9cSzNQyNo\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/NigerianStockFactory.sol\":{\"keccak256\":\"0xdcb7d847e42ee1247db7439e6f523de5e591e37ab1098818229ddd747cc84395\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dfe0c7428d58aa712229f34e5501de440b916248dc86bab08dd28ce84d148e0\",\"dweb:/ipfs/QmNp4CTwcpz1NzHjqDvQkHmL8HEUcHLaK7yA4HywaGFoQh\"]},\"contracts/NigerianStockToken.sol\":{\"keccak256\":\"0x82ba5c0a29338162c9b9869680d405552a77eb32ecdc1c1901917bdf8618bff3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd12a1ee7067540b5b97359ab4d7b509d7b0f06d78ebcc7e640604ac7a6a1d92\",\"dweb:/ipfs/QmTQnPKezKUhe3XspCfzscmbUUer3o6HZJAoKgZdAQBnNw\"]}},\"version\":1}"}},"contracts/NigerianStockToken.sol":{"NigerianStockToken":{"abi":[{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"string","name":"_stockSymbol","type":"string"},{"internalType":"string","name":"_companyName","type":"string"},{"internalType":"uint256","name":"_maxSupply","type":"uint256"},{"internalType":"uint256","name":"_initialSupply","type":"uint256"},{"internalType":"address","name":"_admin","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"uint256","name":"deadline","type":"uint256"}],"name":"ERC2612ExpiredSignature","type":"error"},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC2612InvalidSigner","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"currentNonce","type":"uint256"}],"name":"InvalidAccountNonce","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"bool","name":"status","type":"bool"}],"name":"Blacklisted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":false,"internalType":"uint256","name":"limit","type":"uint256"}],"name":"DailyLimitSet","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newAmount","type":"uint256"}],"name":"MaxTransactionAmountUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensBurned","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"BURNER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"COMPLIANCE_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PAUSER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"blacklisted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"companyName","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"dailyTransferAmounts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"dailyTransferLimits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defaultDailyLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentDay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenInfo","outputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"string","name":"_stockSymbol","type":"string"},{"internalType":"string","name":"_companyName","type":"string"},{"internalType":"uint256","name":"_totalSupply","type":"uint256"},{"internalType":"uint256","name":"_maxSupply","type":"uint256"},{"internalType":"uint8","name":"_decimals","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxTransactionAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bool","name":"status","type":"bool"}],"name":"setBlacklisted","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"limit","type":"uint256"}],"name":"setDailyLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"setMaxTransactionAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stockSymbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_string_fromMemory":{"entryPoint":2682,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2645,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":2609,"id":null,"parameterSlots":2,"returnSlots":0},"fun_grantRole":{"entryPoint":3381,"id":257,"parameterSlots":1,"returnSlots":1},"fun_grantRole_16268":{"entryPoint":2773,"id":257,"parameterSlots":1,"returnSlots":1},"fun_grantRole_16269":{"entryPoint":2902,"id":257,"parameterSlots":1,"returnSlots":1},"fun_grantRole_16270":{"entryPoint":3065,"id":257,"parameterSlots":1,"returnSlots":1},"fun_grantRole_16271":{"entryPoint":3223,"id":257,"parameterSlots":1,"returnSlots":1},"fun_toShortStringWithFallback":{"entryPoint":3960,"id":2017,"parameterSlots":1,"returnSlots":1},"fun_toShortStringWithFallback_16266":{"entryPoint":3539,"id":2017,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"610160806040523462000a2c5762002f40803803809162000021828562000a31565b833981019060e08183031262000a2c5780516001600160401b03811162000a2c57826200005091830162000a7a565b60208201516001600160401b03811162000a2c57836200007291840162000a7a565b60408301516001600160401b03811162000a2c57846200009491850162000a7a565b606084015190946001600160401b03821162000a2c57620000b791850162000a7a565b9360808401519160c060a08601519501519360018060a01b038516850362000a2c5760408051929083016001600160401b03811184821017620005fb5760405260018352603160f81b602084015281516001600160401b038111620005fb57600354600181811c9116801562000a21575b6020821014620005da57601f8111620009bb575b50806020601f8211600114620009315760009162000925575b508160011b916000199060031b1c1916176003555b8051906001600160401b038211620005fb5760045490600182811c921680156200091a575b6020831014620005da5781601f849311620008a5575b50602090601f831160011462000816576000926200080a575b50508160011b916000199060031b1c1916176004555b620001df8162000dd3565b61012052620001ee8262000f78565b6101405260208151910120908160e0526020815191012080610100524660a0526040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a0815260c081019181831060018060401b03841117620005fb576040839052815190206080523060c0526001600a5569d3c21bcecceda100000060115569152d02c7e14af68000006012556001600160a01b03851615620007c65750508115620007775781841162000728578051906001600160401b038211620005fb57600b5490600182811c921680156200071d575b6020831014620005da5781601f849311620006a8575b50602090601f83116001146200061d5760009262000611575b50508160011b916000199060031b1c191617600b555b83516001600160401b038111620005fb57600c54600181811c91168015620005f0575b6020821014620005da57601f811162000570575b50602094601f82116001146200050357948192939495600092620004f7575b50508160011b916000199060031b1c191617600c555b600d55620003a18162000ad5565b50620003ad8162000b56565b50620003b98162000bf9565b50620003c58162000c97565b50620003d18162000d35565b50816200042b575b604051611e509081620010d082396080518161186c015260a05181611938015260c05181611836015260e051816118bb015261010051816118e1015261012051816109af015261014051816109d90152f35b60ff60085416620004e557600254828101809111620004cf576002556001600160a01b038116600081815260208181526040808320805487019055518581527f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a42739491939192907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908590a36040519384526001600160a01b031692a23880620003d9565b634e487b7160e01b600052601160045260246000fd5b60405163d93c066560e01b8152600490fd5b0151905038806200037d565b601f19821695600c60005260206000209160005b88811062000557575083600195969798106200053d575b505050811b01600c5562000393565b015160001960f88460031b161c191690553880806200052e565b9192602060018192868501518155019401920162000517565b600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7601f830160051c81019160208410620005cf575b601f0160051c01905b818110620005c257506200035e565b60008155600101620005b3565b9091508190620005aa565b634e487b7160e01b600052602260045260246000fd5b90607f16906200034a565b634e487b7160e01b600052604160045260246000fd5b01519050388062000311565b600b60009081527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db99350601f198516905b8181106200068f575090846001959493921062000675575b505050811b01600b5562000327565b015160001960f88460031b161c1916905538808062000666565b929360206001819287860151815501950193016200064e565b600b6000529091507f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9601f840160051c8101916020851062000712575b90601f859493920160051c01905b818110620007025750620002f8565b60008155849350600101620006f3565b9091508190620006e5565b91607f1691620002e2565b60405162461bcd60e51b815260206004820152602160248201527f496e697469616c20737570706c792065786365656473206d617820737570706c6044820152607960f81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f4d617820737570706c79206d7573742062652067726561746572207468616e206044820152600360fc1b6064820152608490fd5b62461bcd60e51b8252602060c4820152601c60e48201527f41646d696e2063616e6e6f74206265207a65726f20616464726573730000000061010490910152606490fd5b015190503880620001be565b6004600090815293507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b91905b601f198416851062000889576001945083601f198116106200086f575b505050811b01600455620001d4565b015160001960f88460031b161c1916905538808062000860565b8181015183556020948501946001909301929091019062000843565b60046000529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f840160051c810191602085106200090f575b90601f859493920160051c01905b818110620008ff5750620001a5565b60008155849350600101620008f0565b9091508190620008e2565b91607f16916200018f565b90508301513862000155565b6003600090815292507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b905b601f1983168410620009a2576001935082601f1981161062000988575b5050811b016003556200016a565b85015160001960f88460031b161c1916905538806200097a565b858101518255602093840193600190920191016200095d565b60036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c81016020841062000a19575b601f830160051c8201811062000a0c5750506200013c565b60008155600101620009f4565b5080620009f4565b90607f169062000128565b600080fd5b601f909101601f19168101906001600160401b03821190821017620005fb57604052565b60005b83811062000a695750506000910152565b818101518382015260200162000a58565b81601f8201121562000a2c5780516001600160401b038111620005fb576040519262000ab1601f8301601f19166020018562000a31565b8184526020828401011162000a2c5762000ad2916020808501910162000a55565b90565b6001600160a01b031660008181527fec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b602052604081205490919060ff1662000b525781805260096020526040822081835260205260408220600160ff19825416179055339160008051602062002f208339815191528180a4600190565b5090565b6001600160a01b031660008181527fd5d09b8f3165a736d25b1a14611612ac91830c1b82012b1c33b2dac7c90a064960205260408120549091907f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a69060ff1662000bf45780835260096020526040832082845260205260408320600160ff1982541617905560008051602062002f20833981519152339380a4600190565b505090565b6001600160a01b031660008181527fafc27dadd95cc92cc3511384503afbc19841fe8e9d61fefc7f2fb1e6a3bd40c260205260408120549091907f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8489060ff1662000bf45780835260096020526040832082845260205260408320600160ff1982541617905560008051602062002f20833981519152339380a4600190565b6001600160a01b031660008181527f84574a31e2f767388bfa57bc81ff2590df95d3022c04c363cca3e37ee960863160205260408120549091907f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a9060ff1662000bf45780835260096020526040832082845260205260408320600160ff1982541617905560008051602062002f20833981519152339380a4600190565b6001600160a01b031660008181527f4fcb20797bc22b6bdf05ed948026fdc1b31b30d107ac0811a08b18c975bbd64b60205260408120549091907f442a94f1a1fac79af32856af2a64f63648cfa2ef3b98610a5bb7cbec4cee69859060ff1662000bf45780835260096020526040832082845260205260408320600160ff1982541617905560008051602062002f20833981519152339380a4600190565b8051602091908281101562000e53575090601f82511162000e11578082519201519080831062000e0257501790565b82600019910360031b1b161790565b60449062000e459260405193849263305a27a960e01b84528060048501528251928391826024870152868601910162000a55565b601f01601f19168101030190fd5b6001600160401b038111620005fb576005928354926001938481811c9116801562000f6d575b83821014620005da57601f811162000f36575b5081601f841160011462000ecc575092829391839260009462000ec0575b50501b916000199060031b1c191617905560ff90565b01519250388062000eaa565b919083601f1981168760005284600020946000905b8883831062000f1b575050501062000f01575b505050811b01905560ff90565b015160001960f88460031b161c1916905538808062000ef4565b85870151885590960195948501948793509081019062000ee1565b8560005284601f846000209201871c820191601f8601881c015b82811062000f6057505062000e8c565b6000815501859062000f50565b90607f169062000e79565b80516020908181101562000fa55750601f82511162000e11578082519201519080831062000e0257501790565b906001600160401b038211620005fb57600654926001938481811c91168015620010c4575b83821014620005da57601f81116200108a575b5081601f84116001146200101e575092829391839260009462001012575b50501b916000199060031b1c19161760065560ff90565b01519250388062000ffb565b919083601f198116600660005284600020946000905b888383106200106f575050501062001055575b505050811b0160065560ff90565b015160001960f88460031b161c1916905538808062001047565b85870151885590960195948501948793509081019062001034565b600660005284601f84600020920160051c820191601f860160051c015b828110620010b757505062000fdd565b60008155018590620010a7565b90607f169062000fca56fe608060408181526004918236101561001657600080fd5b60009260e08435811c92836301ffc9a71461118a57508263062d3bd71461114e57826306fdde0314611128578263095ea7b3146110fd57826318160ddd146110dd5782631e293c101461108e57826323b872dd14610f9a578263248a9ca314610f6e5782632803212f14610f05578263282c51f314610ec95782632f2ff15d14610e9f578263313ce56714610e825782633644e51514610e5d57826336568abe14610e165782633e6968b614610df55782633f4ba83a14610d8a57826340c10f1914610be05782635c975abb14610bbb57826370a0823114610b835782637d89d05c14610b4a5782637ecebe0014610b115782638456cb5914610ab557826384b0196e1461099757826391d148541461094f57826395d89b41146109295782639dc29fac14610740578263a217fddf14610724578263a9059cbb146106f2578263abb1dc4414610624578263c76b088814610604578263c87cbe56146105de578263c8c8ebe4146105be578263d01dd6d21461053b578263d505accf146103d557508163d53913931461039a578163d547741f1461035657508063d5abeb0114610338578063dbac26e9146102fb578063dd62ed3e146102b3578063e63ab1e914610279578063f5ec2eed146102385763fdb98082146101f557600080fd5b3461023457806003193601126102345760209181906001600160a01b0361021a61121e565b168152601084528181206024358252845220549051908152f35b5080fd5b50346102345781600319360112610234578051610275916102638261025c81611459565b0383611519565b519182916020835260208301906111de565b0390f35b5034610234578160031936011261023457602090517f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8152f35b5034610234578060031936011261023457806020926102d061121e565b6102d8611239565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b50346102345760203660031901126102345760209160ff9082906001600160a01b0361032561121e565b168152600e855220541690519015158152f35b5034610234578160031936011261023457602090600d549051908152f35b91905034610396578060031936011261039657610392913561038d600161037b611239565b93838752600960205286200154611634565b61195e565b5080f35b8280fd5b505034610234578160031936011261023457602090517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b90849250346103965781600319360112610396576103f161121e565b6103f9611239565b916044359360643560843560ff8116810361053757814211610520578860018060a01b039283871694858b526007602052828b20918254926001840190558351928760208501957f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98752850152868b1660608501528b608085015260a084015260c083015260c08252810181811067ffffffffffffffff82111761050d578b525190206104db916104d2916104ac611833565b908c519161190160f01b83526002830152602282015260c43591604260a4359220611c6d565b90929192611cfd565b168181036104f257866104ef8787876119f8565b80f35b87516325c0072360e11b815292830152602482015260449150fd5b634e487b7160e01b8b526041875260248bfd5b885163313c898160e11b8152808501839052602490fd5b8780fd5b5050503461023457806003193601126102345761055661121e565b602435908115158092036105ba577fcf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd89160209161059161155e565b6001600160a01b0316808652600e8352848620805460ff191660ff84161790559351908152a280f35b8380fd5b505050346102345781600319360112610234576020906012549051908152f35b505050346102345781600319360112610234578051610275916102638261025c816113cb565b505050346102345781600319360112610234576020906011549051908152f35b839085346106ef57806003193601126106ef575081519161064f8361064881611289565b0384611519565b80519061065f8261025c8161133d565b6106d9600254926106cb600d549380516106838161067c816113cb565b0382611519565b6106be82519461069d8661069681611459565b0387611519565b6106b084519b8b8d9c8d528c01906111de565b908a820360208c01526111de565b91888303908901526111de565b9085820360608701526111de565b91608084015260a0830152601260c08301520390f35b80fd5b5050503461023457806003193601126102345760209061071d61071361121e565b602435903361165a565b5160018152f35b5050503461023457816003193601126102345751908152602090f35b5090503461039657816003193601126103965761075b61121e565b91602435907f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8489283865260209360098552828720338852855260ff83882054161561090e57506107a96119d5565b6001600160a01b0385169485156108cc5785875286855283838820541061088a576107d2611a8b565b858752868552828720549184831061085657505090827ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb69493928688528785520381872055816002540360025585857fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef858451868152a351908152a26001600a5580f35b835163391434e360e21b81526001600160a01b03909216908201908152602081018390526040810185905281906060010390fd5b5083606492519162461bcd60e51b8352820152601c60248201527f496e73756666696369656e742062616c616e636520746f206275726e000000006044820152fd5b5083606492519162461bcd60e51b8352820152601d60248201527f43616e6e6f74206275726e2066726f6d207a65726f20616464726573730000006044820152fd5b604492519163e2517d3f60e01b835233908301526024820152fd5b505050346102345781600319360112610234578051610275916102638261025c8161133d565b509050346103965781600319360112610396578160209360ff92610971611239565b90358252600986528282206001600160a01b039091168252855220549151911615158152f35b908385346106ef57806003193601126106ef576109d37f0000000000000000000000000000000000000000000000000000000000000000611aa9565b906109fd7f0000000000000000000000000000000000000000000000000000000000000000611bad565b92805193602093602086019686881067ffffffffffffffff891117610aa25750959390610a5883602092878b999652868652610a4b82519a8b9a600f60f81b8c5280878d01528b01906111de565b91898303908a01526111de565b924660608801523060808801528460a088015286840360c088015251928381520193925b828110610a8b57505050500390f35b835185528695509381019392810192600101610a7c565b634e487b7160e01b855260419052602484fd5b5050503461023457816003193601126102345760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25891610af46115d8565b610afc611a8b565b600160ff19600854161760085551338152a180f35b505050346102345760203660031901126102345760209181906001600160a01b03610b3a61121e565b1681526007845220549051908152f35b505050346102345760203660031901126102345760209181906001600160a01b03610b7361121e565b168152600f845220549051908152f35b505050346102345760203660031901126102345760209181906001600160a01b03610bac61121e565b16815280845220549051908152f35b5050503461023457816003193601126102345760209060ff6008541690519015158152f35b84828534610396578060031936011261039657610bfb61121e565b90602435907f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a69283865260209360098552828720338852855260ff838820541615610d6c5750610c496119d5565b6001600160a01b0316938415610d2b5760025490610c67848361153b565b600d5410610cef575090610ca6837f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a4273959493610ca1611a8b565b61153b565b60025584865285835280862082815401905584867fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef858451868152a351908152a26001600a5580f35b825162461bcd60e51b8152908101859052601660248201527545786365656473206d6178696d756d20737570706c7960501b6044820152606490fd5b83606492519162461bcd60e51b8352820152601b60248201527f43616e6e6f74206d696e7420746f207a65726f206164647265737300000000006044820152fd5b825163e2517d3f60e01b815233818801526024810191909152604490fd5b50905034610396578260031936011261039657610da56115d8565b6008549060ff821615610de7575060ff1916600855513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b8251638dfc202b60e01b8152fd5b50505034610234578160031936011261023457602090516201518042048152f35b50838334610234578060031936011261023457610e31611239565b90336001600160a01b03831603610e4e575061039291923561195e565b5163334bd91960e11b81528390fd5b50505034610234578160031936011261023457602090610e7b611833565b9051908152f35b505050346102345781600319360112610234576020905160128152f35b848285346103965780600319360112610396576103929135610ec4600161037b611239565b6117b3565b50505034610234578160031936011261023457602090517f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8488152f35b505050346102345780600319360112610234577fd3d22ffd28b02735cf411bd7f925bd8da01212c7028153e0d632e2953ac3088e6020610f4361121e565b60243590610f4f61155e565b6001600160a01b0316808652600f83528486208290559351908152a280f35b509050346103965760203660031901126103965781602093600192358152600985522001549051908152f35b838286346106ef5760603660031901126106ef57610fb661121e565b610fbe611239565b916044359360018060a01b038316808352600160205286832033845260205286832054916000198310610ffa575b60208861071d89898961165a565b86831061106257811561104b5733156110345750825260016020908152868320338452815291869020908590039055829061071d87610fec565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b50905034610396576020366003190112610396577f7c1cb3702d8e1fa6d24b12dd90670ab69c6d66d58233103d37da8b07d6b850ac9160209135906110d161155e565b8160125551908152a180f35b505050346102345781600319360112610234576020906002549051908152f35b5050503461023457806003193601126102345760209061071d61111e61121e565b60243590336119f8565b505050346102345781600319360112610234578051610275916102638261025c81611289565b50505034610234578160031936011261023457602090517f442a94f1a1fac79af32856af2a64f63648cfa2ef3b98610a5bb7cbec4cee69858152f35b85908334610396576020366003190112610396573563ffffffff60e01b81168091036103965760209250637965db0b60e01b81149081156111cd575b5015158152f35b6301ffc9a760e01b149050836111c6565b919082519283825260005b84811061120a575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016111e9565b600435906001600160a01b038216820361123457565b600080fd5b602435906001600160a01b038216820361123457565b90600182811c9216801561127f575b602083101461126957565b634e487b7160e01b600052602260045260246000fd5b91607f169161125e565b600354600092916112998261124f565b8082529160209060019081811690811561131857506001146112bc575b50505050565b9293945060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b926000935b8585106113055750505060209250010190388080806112b6565b80548585018401529382019381016112eb565b92505050602093945060ff929192191683830152151560051b010190388080806112b6565b6004546000929161134d8261124f565b80825291602090600190818116908115611318575060011461136f5750505050565b9293945060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b926000935b8585106113b85750505060209250010190388080806112b6565b805485850184015293820193810161139e565b600b54600092916113db8261124f565b8082529160209060019081811690811561131857506001146113fd5750505050565b92939450600b6000527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9926000935b8585106114465750505060209250010190388080806112b6565b805485850184015293820193810161142c565b600c54600092916114698261124f565b80825291602090600190818116908115611318575060011461148b5750505050565b92939450600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7926000935b8585106114d45750505060209250010190388080806112b6565b80548585018401529382019381016114ba565b6040810190811067ffffffffffffffff82111761150357604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761150357604052565b9190820180921161154857565b634e487b7160e01b600052601160045260246000fd5b3360009081527f4fcb20797bc22b6bdf05ed948026fdc1b31b30d107ac0811a08b18c975bbd64b60205260409020547f442a94f1a1fac79af32856af2a64f63648cfa2ef3b98610a5bb7cbec4cee69859060ff16156115ba5750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b3360009081527f84574a31e2f767388bfa57bc81ff2590df95d3022c04c363cca3e37ee960863160205260409020547f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a9060ff16156115ba5750565b80600052600960205260406000203360005260205260ff60406000205416156115ba5750565b90916001600160a01b038083169290831561179a57841693841561178157826116839183611d82565b15611745576000838152601060205260409182822062015180420483526020528282206116b185825461153b565b90556116bb611a8b565b848252816020528282205490848210611714575091808285602095887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef98965282875203828220558781522082815401905551908152a3565b835163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101849052606490fd5b60405162461bcd60e51b8152602060048201526014602482015273151c985b9cd9995c881b9bdd08185b1b1bddd95960621b6044820152606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b906000918083526009602052604083209160018060a01b03169182845260205260ff6040842054161560001461182e5780835260096020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611935575b1561188e577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff8211176115035760405251902090565b507f00000000000000000000000000000000000000000000000000000000000000004614611865565b906000918083526009602052604083209160018060a01b03169182845260205260ff60408420541660001461182e578083526009602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b6002600a54146119e6576002600a55565b604051633ee5aeb560e01b8152600490fd5b6001600160a01b03908116918215611a725716918215611a595760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b604051634a1406b160e11b815260006004820152602490fd5b60405163e602df0560e01b815260006004820152602490fd5b60ff60085416611a9757565b60405163d93c066560e01b8152600490fd5b60ff8114611ae75760ff811690601f8211611ad55760405191611acb836114e7565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b50604051600554816000611afa8361124f565b80835292602090600190818116908115611b895750600114611b28575b5050611b2592500382611519565b90565b91509260056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0936000925b828410611b715750611b259450505081016020013880611b17565b85548785018301529485019486945092810192611b56565b91505060209250611b2594915060ff191682840152151560051b8201013880611b17565b60ff8114611bcf5760ff811690601f8211611ad55760405191611acb836114e7565b50604051600654816000611be28361124f565b80835292602090600190818116908115611b895750600114611c0c575050611b2592500382611519565b91509260066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f936000925b828410611c555750611b259450505081016020013880611b17565b85548785018301529485019486945092810192611c3a565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411611cf157926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa15611ce55780516001600160a01b03811615611cdc57918190565b50809160019190565b604051903d90823e3d90fd5b50505060009160039190565b6004811015611d6c5780611d0f575050565b60018103611d295760405163f645eedf60e01b8152600490fd5b60028103611d4a5760405163fce698f760e01b815260048101839052602490fd5b600314611d545750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fd5b919060018060a01b0380931690600093828552600e60205260ff604086205416918215611e07575b505061182e57601254821161182e578252600f60205260408220548015611dfa57611def90915b6010602052604084206201518042048552602052604084205461153b565b11611b255750600190565b50611def60115491611dd1565b16845250604083205460ff163880611daa56fea264697066735822122020d7f16771b70444d4041c0b6723667f1452ca70018594b409a99119ad91f85464736f6c634300081800332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","opcodes":"PUSH2 0x160 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0xA2C JUMPI PUSH3 0x2F40 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH3 0x21 DUP3 DUP6 PUSH3 0xA31 JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0xE0 DUP2 DUP4 SUB SLT PUSH3 0xA2C JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xA2C JUMPI DUP3 PUSH3 0x50 SWAP2 DUP4 ADD PUSH3 0xA7A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xA2C JUMPI DUP4 PUSH3 0x72 SWAP2 DUP5 ADD PUSH3 0xA7A JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0xA2C JUMPI DUP5 PUSH3 0x94 SWAP2 DUP6 ADD PUSH3 0xA7A JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MLOAD SWAP1 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0xA2C JUMPI PUSH3 0xB7 SWAP2 DUP6 ADD PUSH3 0xA7A JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP5 ADD MLOAD SWAP2 PUSH1 0xC0 PUSH1 0xA0 DUP7 ADD MLOAD SWAP6 ADD MLOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP6 SUB PUSH3 0xA2C JUMPI PUSH1 0x40 DUP1 MLOAD SWAP3 SWAP1 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP5 DUP3 LT OR PUSH3 0x5FB JUMPI PUSH1 0x40 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP5 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x5FB JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0xA21 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0x5DA JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x9BB JUMPI JUMPDEST POP DUP1 PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH3 0x931 JUMPI PUSH1 0x0 SWAP2 PUSH3 0x925 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x5FB JUMPI PUSH1 0x4 SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x91A JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x5DA JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x8A5 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x816 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x80A JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH3 0x1DF DUP2 PUSH3 0xDD3 JUMP JUMPDEST PUSH2 0x120 MSTORE PUSH3 0x1EE DUP3 PUSH3 0xF78 JUMP JUMPDEST PUSH2 0x140 MSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 DUP2 PUSH1 0xE0 MSTORE PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 DUP1 PUSH2 0x100 MSTORE CHAINID PUSH1 0xA0 MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP5 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 DUP2 DUP4 LT PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP5 GT OR PUSH3 0x5FB JUMPI PUSH1 0x40 DUP4 SWAP1 MSTORE DUP2 MLOAD SWAP1 KECCAK256 PUSH1 0x80 MSTORE ADDRESS PUSH1 0xC0 MSTORE PUSH1 0x1 PUSH1 0xA SSTORE PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x11 SSTORE PUSH10 0x152D02C7E14AF6800000 PUSH1 0x12 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH3 0x7C6 JUMPI POP POP DUP2 ISZERO PUSH3 0x777 JUMPI DUP2 DUP5 GT PUSH3 0x728 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x5FB JUMPI PUSH1 0xB SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x71D JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x5DA JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x6A8 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x61D JUMPI PUSH1 0x0 SWAP3 PUSH3 0x611 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xB SSTORE JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x5FB JUMPI PUSH1 0xC SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x5F0 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0x5DA JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x570 JUMPI JUMPDEST POP PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH3 0x503 JUMPI SWAP5 DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH3 0x4F7 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xC SSTORE JUMPDEST PUSH1 0xD SSTORE PUSH3 0x3A1 DUP2 PUSH3 0xAD5 JUMP JUMPDEST POP PUSH3 0x3AD DUP2 PUSH3 0xB56 JUMP JUMPDEST POP PUSH3 0x3B9 DUP2 PUSH3 0xBF9 JUMP JUMPDEST POP PUSH3 0x3C5 DUP2 PUSH3 0xC97 JUMP JUMPDEST POP PUSH3 0x3D1 DUP2 PUSH3 0xD35 JUMP JUMPDEST POP DUP2 PUSH3 0x42B JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E50 SWAP1 DUP2 PUSH3 0x10D0 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x186C ADD MSTORE PUSH1 0xA0 MLOAD DUP2 PUSH2 0x1938 ADD MSTORE PUSH1 0xC0 MLOAD DUP2 PUSH2 0x1836 ADD MSTORE PUSH1 0xE0 MLOAD DUP2 PUSH2 0x18BB ADD MSTORE PUSH2 0x100 MLOAD DUP2 PUSH2 0x18E1 ADD MSTORE PUSH2 0x120 MLOAD DUP2 PUSH2 0x9AF ADD MSTORE PUSH2 0x140 MLOAD DUP2 PUSH2 0x9D9 ADD MSTORE RETURN JUMPDEST PUSH1 0xFF PUSH1 0x8 SLOAD AND PUSH3 0x4E5 JUMPI PUSH1 0x2 SLOAD DUP3 DUP2 ADD DUP1 SWAP2 GT PUSH3 0x4CF JUMPI PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE PUSH32 0x3F2C9D57C068687834F0DE942A9BABB9E5ACAB57D516D3480A3C16EE165A4273 SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP6 SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 LOG2 CODESIZE DUP1 PUSH3 0x3D9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x37D JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 PUSH1 0xC PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP9 DUP2 LT PUSH3 0x557 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH3 0x53D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xC SSTORE PUSH3 0x393 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x52E JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0x517 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH3 0x5CF JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x5C2 JUMPI POP PUSH3 0x35E JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x5B3 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x5AA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x34A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x311 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x68F JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH3 0x675 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xB SSTORE PUSH3 0x327 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x666 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH3 0x64E JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 MSTORE SWAP1 SWAP2 POP PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH3 0x712 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x702 JUMPI POP PUSH3 0x2F8 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH3 0x6F3 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x6E5 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x2E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C20737570706C792065786365656473206D617820737570706C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x79 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820737570706C79206D7573742062652067726561746572207468616E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x20 PUSH1 0xC4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0xE4 DUP3 ADD MSTORE PUSH32 0x41646D696E2063616E6E6F74206265207A65726F206164647265737300000000 PUSH2 0x104 SWAP1 SWAP2 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x1BE JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP4 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x889 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x86F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH3 0x1D4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x860 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x843 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE SWAP1 SWAP2 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH3 0x90F JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH3 0x8FF JUMPI POP PUSH3 0x1A5 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH3 0x8F0 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH3 0x8E2 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x18F JUMP JUMPDEST SWAP1 POP DUP4 ADD MLOAD CODESIZE PUSH3 0x155 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 JUMPDEST PUSH1 0x1F NOT DUP4 AND DUP5 LT PUSH3 0x9A2 JUMPI PUSH1 0x1 SWAP4 POP DUP3 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x988 JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH3 0x16A JUMP JUMPDEST DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH3 0x97A JUMP JUMPDEST DUP6 DUP2 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH3 0x95D JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH3 0xA19 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0xA0C JUMPI POP POP PUSH3 0x13C JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x9F4 JUMP JUMPDEST POP DUP1 PUSH3 0x9F4 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x128 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH3 0x5FB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH3 0xA69 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0xA58 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH3 0xA2C JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x5FB JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH3 0xAB1 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH3 0xA31 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH3 0xA2C JUMPI PUSH3 0xAD2 SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH3 0xA55 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xEC8156718A8372B1DB44BB411437D0870F3E3790D4A08526D024CE1B0B668F6B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH1 0xFF AND PUSH3 0xB52 JUMPI DUP2 DUP1 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2F20 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xD5D09B8F3165A736D25B1A14611612AC91830C1B82012B1C33B2DAC7C90A0649 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 SWAP1 PUSH1 0xFF AND PUSH3 0xBF4 JUMPI DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2F20 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0xAFC27DADD95CC92CC3511384503AFBC19841FE8E9D61FEFC7F2FB1E6A3BD40C2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 SWAP1 PUSH1 0xFF AND PUSH3 0xBF4 JUMPI DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2F20 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x84574A31E2F767388BFA57BC81FF2590DF95D3022C04C363CCA3E37EE9608631 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A SWAP1 PUSH1 0xFF AND PUSH3 0xBF4 JUMPI DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2F20 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH32 0x4FCB20797BC22B6BDF05ED948026FDC1B31B30D107AC0811A08B18C975BBD64B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x442A94F1A1FAC79AF32856AF2A64F63648CFA2EF3B98610A5BB7CBEC4CEE6985 SWAP1 PUSH1 0xFF AND PUSH3 0xBF4 JUMPI DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2F20 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP2 SWAP1 DUP3 DUP2 LT ISZERO PUSH3 0xE53 JUMPI POP SWAP1 PUSH1 0x1F DUP3 MLOAD GT PUSH3 0xE11 JUMPI DUP1 DUP3 MLOAD SWAP3 ADD MLOAD SWAP1 DUP1 DUP4 LT PUSH3 0xE02 JUMPI POP OR SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x0 NOT SWAP2 SUB PUSH1 0x3 SHL SHL AND OR SWAP1 JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH3 0xE45 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 PUSH4 0x305A27A9 PUSH1 0xE0 SHL DUP5 MSTORE DUP1 PUSH1 0x4 DUP6 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 SWAP2 DUP3 PUSH1 0x24 DUP8 ADD MSTORE DUP7 DUP7 ADD SWAP2 ADD PUSH3 0xA55 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x5FB JUMPI PUSH1 0x5 SWAP3 DUP4 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0xF6D JUMPI JUMPDEST DUP4 DUP3 LT EQ PUSH3 0x5DA JUMPI PUSH1 0x1F DUP2 GT PUSH3 0xF36 JUMPI JUMPDEST POP DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0xECC JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH3 0xEC0 JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0xEAA JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND DUP8 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0xF1B JUMPI POP POP POP LT PUSH3 0xF01 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0xEF4 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0xEE1 JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE DUP5 PUSH1 0x1F DUP5 PUSH1 0x0 KECCAK256 SWAP3 ADD DUP8 SHR DUP3 ADD SWAP2 PUSH1 0x1F DUP7 ADD DUP9 SHR ADD JUMPDEST DUP3 DUP2 LT PUSH3 0xF60 JUMPI POP POP PUSH3 0xE8C JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0xF50 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xE79 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 SWAP1 DUP2 DUP2 LT ISZERO PUSH3 0xFA5 JUMPI POP PUSH1 0x1F DUP3 MLOAD GT PUSH3 0xE11 JUMPI DUP1 DUP3 MLOAD SWAP3 ADD MLOAD SWAP1 DUP1 DUP4 LT PUSH3 0xE02 JUMPI POP OR SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0x5FB JUMPI PUSH1 0x6 SLOAD SWAP3 PUSH1 0x1 SWAP4 DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x10C4 JUMPI JUMPDEST DUP4 DUP3 LT EQ PUSH3 0x5DA JUMPI PUSH1 0x1F DUP2 GT PUSH3 0x108A JUMPI JUMPDEST POP DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH3 0x101E JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH3 0x1012 JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x6 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0xFFB JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND PUSH1 0x6 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0x106F JUMPI POP POP POP LT PUSH3 0x1055 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x6 SSTORE PUSH1 0xFF SWAP1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x1047 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x1034 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 MSTORE DUP5 PUSH1 0x1F DUP5 PUSH1 0x0 KECCAK256 SWAP3 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 PUSH1 0x1F DUP7 ADD PUSH1 0x5 SHR ADD JUMPDEST DUP3 DUP2 LT PUSH3 0x10B7 JUMPI POP POP PUSH3 0xFDD JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH3 0x10A7 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xFCA JUMP INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 PUSH1 0xE0 DUP5 CALLDATALOAD DUP2 SHR SWAP3 DUP4 PUSH4 0x1FFC9A7 EQ PUSH2 0x118A JUMPI POP DUP3 PUSH4 0x62D3BD7 EQ PUSH2 0x114E JUMPI DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x1128 JUMPI DUP3 PUSH4 0x95EA7B3 EQ PUSH2 0x10FD JUMPI DUP3 PUSH4 0x18160DDD EQ PUSH2 0x10DD JUMPI DUP3 PUSH4 0x1E293C10 EQ PUSH2 0x108E JUMPI DUP3 PUSH4 0x23B872DD EQ PUSH2 0xF9A JUMPI DUP3 PUSH4 0x248A9CA3 EQ PUSH2 0xF6E JUMPI DUP3 PUSH4 0x2803212F EQ PUSH2 0xF05 JUMPI DUP3 PUSH4 0x282C51F3 EQ PUSH2 0xEC9 JUMPI DUP3 PUSH4 0x2F2FF15D EQ PUSH2 0xE9F JUMPI DUP3 PUSH4 0x313CE567 EQ PUSH2 0xE82 JUMPI DUP3 PUSH4 0x3644E515 EQ PUSH2 0xE5D JUMPI DUP3 PUSH4 0x36568ABE EQ PUSH2 0xE16 JUMPI DUP3 PUSH4 0x3E6968B6 EQ PUSH2 0xDF5 JUMPI DUP3 PUSH4 0x3F4BA83A EQ PUSH2 0xD8A JUMPI DUP3 PUSH4 0x40C10F19 EQ PUSH2 0xBE0 JUMPI DUP3 PUSH4 0x5C975ABB EQ PUSH2 0xBBB JUMPI DUP3 PUSH4 0x70A08231 EQ PUSH2 0xB83 JUMPI DUP3 PUSH4 0x7D89D05C EQ PUSH2 0xB4A JUMPI DUP3 PUSH4 0x7ECEBE00 EQ PUSH2 0xB11 JUMPI DUP3 PUSH4 0x8456CB59 EQ PUSH2 0xAB5 JUMPI DUP3 PUSH4 0x84B0196E EQ PUSH2 0x997 JUMPI DUP3 PUSH4 0x91D14854 EQ PUSH2 0x94F JUMPI DUP3 PUSH4 0x95D89B41 EQ PUSH2 0x929 JUMPI DUP3 PUSH4 0x9DC29FAC EQ PUSH2 0x740 JUMPI DUP3 PUSH4 0xA217FDDF EQ PUSH2 0x724 JUMPI DUP3 PUSH4 0xA9059CBB EQ PUSH2 0x6F2 JUMPI DUP3 PUSH4 0xABB1DC44 EQ PUSH2 0x624 JUMPI DUP3 PUSH4 0xC76B0888 EQ PUSH2 0x604 JUMPI DUP3 PUSH4 0xC87CBE56 EQ PUSH2 0x5DE JUMPI DUP3 PUSH4 0xC8C8EBE4 EQ PUSH2 0x5BE JUMPI DUP3 PUSH4 0xD01DD6D2 EQ PUSH2 0x53B JUMPI DUP3 PUSH4 0xD505ACCF EQ PUSH2 0x3D5 JUMPI POP DUP2 PUSH4 0xD5391393 EQ PUSH2 0x39A JUMPI DUP2 PUSH4 0xD547741F EQ PUSH2 0x356 JUMPI POP DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xDBAC26E9 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xF5EC2EED EQ PUSH2 0x238 JUMPI PUSH4 0xFDB98082 EQ PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x21A PUSH2 0x121E JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x10 DUP5 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI DUP1 MLOAD PUSH2 0x275 SWAP2 PUSH2 0x263 DUP3 PUSH2 0x25C DUP2 PUSH2 0x1459 JUMP JUMPDEST SUB DUP4 PUSH2 0x1519 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x11DE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x2D0 PUSH2 0x121E JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x234 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP2 PUSH1 0xFF SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x325 PUSH2 0x121E JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x396 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI PUSH2 0x392 SWAP2 CALLDATALOAD PUSH2 0x38D PUSH1 0x1 PUSH2 0x37B PUSH2 0x1239 JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x195E JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 MSTORE RETURN JUMPDEST SWAP1 DUP5 SWAP3 POP CALLVALUE PUSH2 0x396 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI PUSH2 0x3F1 PUSH2 0x121E JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x1239 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x537 JUMPI DUP2 TIMESTAMP GT PUSH2 0x520 JUMPI DUP9 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP8 AND SWAP5 DUP6 DUP12 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP3 DUP12 KECCAK256 SWAP2 DUP3 SLOAD SWAP3 PUSH1 0x1 DUP5 ADD SWAP1 SSTORE DUP4 MLOAD SWAP3 DUP8 PUSH1 0x20 DUP6 ADD SWAP6 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP8 MSTORE DUP6 ADD MSTORE DUP7 DUP12 AND PUSH1 0x60 DUP6 ADD MSTORE DUP12 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 MSTORE DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x50D JUMPI DUP12 MSTORE MLOAD SWAP1 KECCAK256 PUSH2 0x4DB SWAP2 PUSH2 0x4D2 SWAP2 PUSH2 0x4AC PUSH2 0x1833 JUMP JUMPDEST SWAP1 DUP13 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0xC4 CALLDATALOAD SWAP2 PUSH1 0x42 PUSH1 0xA4 CALLDATALOAD SWAP3 KECCAK256 PUSH2 0x1C6D JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x1CFD JUMP JUMPDEST AND DUP2 DUP2 SUB PUSH2 0x4F2 JUMPI DUP7 PUSH2 0x4EF DUP8 DUP8 DUP8 PUSH2 0x19F8 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP8 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP2 POP REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 DUP8 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST DUP9 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH2 0x556 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x5BA JUMPI PUSH32 0xCF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8 SWAP2 PUSH1 0x20 SWAP2 PUSH2 0x591 PUSH2 0x155E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP7 MSTORE PUSH1 0xE DUP4 MSTORE DUP5 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE SWAP4 MLOAD SWAP1 DUP2 MSTORE LOG2 DUP1 RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x12 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI DUP1 MLOAD PUSH2 0x275 SWAP2 PUSH2 0x263 DUP3 PUSH2 0x25C DUP2 PUSH2 0x13CB JUMP JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x11 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP1 DUP6 CALLVALUE PUSH2 0x6EF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6EF JUMPI POP DUP2 MLOAD SWAP2 PUSH2 0x64F DUP4 PUSH2 0x648 DUP2 PUSH2 0x1289 JUMP JUMPDEST SUB DUP5 PUSH2 0x1519 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH2 0x65F DUP3 PUSH2 0x25C DUP2 PUSH2 0x133D JUMP JUMPDEST PUSH2 0x6D9 PUSH1 0x2 SLOAD SWAP3 PUSH2 0x6CB PUSH1 0xD SLOAD SWAP4 DUP1 MLOAD PUSH2 0x683 DUP2 PUSH2 0x67C DUP2 PUSH2 0x13CB JUMP JUMPDEST SUB DUP3 PUSH2 0x1519 JUMP JUMPDEST PUSH2 0x6BE DUP3 MLOAD SWAP5 PUSH2 0x69D DUP7 PUSH2 0x696 DUP2 PUSH2 0x1459 JUMP JUMPDEST SUB DUP8 PUSH2 0x1519 JUMP JUMPDEST PUSH2 0x6B0 DUP5 MLOAD SWAP12 DUP12 DUP14 SWAP13 DUP14 MSTORE DUP13 ADD SWAP1 PUSH2 0x11DE JUMP JUMPDEST SWAP1 DUP11 DUP3 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x11DE JUMP JUMPDEST SWAP2 DUP9 DUP4 SUB SWAP1 DUP10 ADD MSTORE PUSH2 0x11DE JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x11DE JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x12 PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x71D PUSH2 0x713 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x165A JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 POP CALLVALUE PUSH2 0x396 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI PUSH2 0x75B PUSH2 0x121E JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 SWAP3 DUP4 DUP7 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x9 DUP6 MSTORE DUP3 DUP8 KECCAK256 CALLER DUP9 MSTORE DUP6 MSTORE PUSH1 0xFF DUP4 DUP9 KECCAK256 SLOAD AND ISZERO PUSH2 0x90E JUMPI POP PUSH2 0x7A9 PUSH2 0x19D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x8CC JUMPI DUP6 DUP8 MSTORE DUP7 DUP6 MSTORE DUP4 DUP4 DUP9 KECCAK256 SLOAD LT PUSH2 0x88A JUMPI PUSH2 0x7D2 PUSH2 0x1A8B JUMP JUMPDEST DUP6 DUP8 MSTORE DUP7 DUP6 MSTORE DUP3 DUP8 KECCAK256 SLOAD SWAP2 DUP5 DUP4 LT PUSH2 0x856 JUMPI POP POP SWAP1 DUP3 PUSH32 0xFD38818F5291BF0BB3A2A48AADC06BA8757865D1DABD804585338AAB3009DCB6 SWAP5 SWAP4 SWAP3 DUP7 DUP9 MSTORE DUP8 DUP6 MSTORE SUB DUP2 DUP8 KECCAK256 SSTORE DUP2 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE DUP6 DUP6 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 DUP5 MLOAD DUP7 DUP2 MSTORE LOG3 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x1 PUSH1 0xA SSTORE DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST POP DUP4 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E636520746F206275726E00000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP4 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206275726E2066726F6D207A65726F2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP3 MLOAD SWAP2 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI DUP1 MLOAD PUSH2 0x275 SWAP2 PUSH2 0x263 DUP3 PUSH2 0x25C DUP2 PUSH2 0x133D JUMP JUMPDEST POP SWAP1 POP CALLVALUE PUSH2 0x396 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x971 PUSH2 0x1239 JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x9 DUP7 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 DUP4 DUP6 CALLVALUE PUSH2 0x6EF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6EF JUMPI PUSH2 0x9D3 PUSH32 0x0 PUSH2 0x1AA9 JUMP JUMPDEST SWAP1 PUSH2 0x9FD PUSH32 0x0 PUSH2 0x1BAD JUMP JUMPDEST SWAP3 DUP1 MLOAD SWAP4 PUSH1 0x20 SWAP4 PUSH1 0x20 DUP7 ADD SWAP7 DUP7 DUP9 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP10 GT OR PUSH2 0xAA2 JUMPI POP SWAP6 SWAP4 SWAP1 PUSH2 0xA58 DUP4 PUSH1 0x20 SWAP3 DUP8 DUP12 SWAP10 SWAP7 MSTORE DUP7 DUP7 MSTORE PUSH2 0xA4B DUP3 MLOAD SWAP11 DUP12 SWAP11 PUSH1 0xF PUSH1 0xF8 SHL DUP13 MSTORE DUP1 DUP8 DUP14 ADD MSTORE DUP12 ADD SWAP1 PUSH2 0x11DE JUMP JUMPDEST SWAP2 DUP10 DUP4 SUB SWAP1 DUP11 ADD MSTORE PUSH2 0x11DE JUMP JUMPDEST SWAP3 CHAINID PUSH1 0x60 DUP9 ADD MSTORE ADDRESS PUSH1 0x80 DUP9 ADD MSTORE DUP5 PUSH1 0xA0 DUP9 ADD MSTORE DUP7 DUP5 SUB PUSH1 0xC0 DUP9 ADD MSTORE MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0xA8B JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xA7C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH2 0xAF4 PUSH2 0x15D8 JUMP JUMPDEST PUSH2 0xAFC PUSH2 0x1A8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB3A PUSH2 0x121E JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB73 PUSH2 0x121E JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xF DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBAC PUSH2 0x121E JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x8 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP5 DUP3 DUP6 CALLVALUE PUSH2 0x396 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI PUSH2 0xBFB PUSH2 0x121E JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 SWAP3 DUP4 DUP7 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x9 DUP6 MSTORE DUP3 DUP8 KECCAK256 CALLER DUP9 MSTORE DUP6 MSTORE PUSH1 0xFF DUP4 DUP9 KECCAK256 SLOAD AND ISZERO PUSH2 0xD6C JUMPI POP PUSH2 0xC49 PUSH2 0x19D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 ISZERO PUSH2 0xD2B JUMPI PUSH1 0x2 SLOAD SWAP1 PUSH2 0xC67 DUP5 DUP4 PUSH2 0x153B JUMP JUMPDEST PUSH1 0xD SLOAD LT PUSH2 0xCEF JUMPI POP SWAP1 PUSH2 0xCA6 DUP4 PUSH32 0x3F2C9D57C068687834F0DE942A9BABB9E5ACAB57D516D3480A3C16EE165A4273 SWAP6 SWAP5 SWAP4 PUSH2 0xCA1 PUSH2 0x1A8B JUMP JUMPDEST PUSH2 0x153B JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP7 MSTORE DUP6 DUP4 MSTORE DUP1 DUP7 KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE DUP5 DUP7 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 DUP5 MLOAD DUP7 DUP2 MSTORE LOG3 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x1 PUSH1 0xA SSTORE DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x45786365656473206D6178696D756D20737570706C79 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206D696E7420746F207A65726F20616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP9 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST POP SWAP1 POP CALLVALUE PUSH2 0x396 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI PUSH2 0xDA5 PUSH2 0x15D8 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0xDE7 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x8 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0x15180 TIMESTAMP DIV DUP2 MSTORE RETURN JUMPDEST POP DUP4 DUP4 CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH2 0xE31 PUSH2 0x1239 JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0xE4E JUMPI POP PUSH2 0x392 SWAP2 SWAP3 CALLDATALOAD PUSH2 0x195E JUMP JUMPDEST MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xE7B PUSH2 0x1833 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP5 DUP3 DUP6 CALLVALUE PUSH2 0x396 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI PUSH2 0x392 SWAP2 CALLDATALOAD PUSH2 0xEC4 PUSH1 0x1 PUSH2 0x37B PUSH2 0x1239 JUMP JUMPDEST PUSH2 0x17B3 JUMP JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH32 0xD3D22FFD28B02735CF411BD7F925BD8DA01212C7028153E0D632E2953AC3088E PUSH1 0x20 PUSH2 0xF43 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xF4F PUSH2 0x155E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP7 MSTORE PUSH1 0xF DUP4 MSTORE DUP5 DUP7 KECCAK256 DUP3 SWAP1 SSTORE SWAP4 MLOAD SWAP1 DUP2 MSTORE LOG2 DUP1 RETURN JUMPDEST POP SWAP1 POP CALLVALUE PUSH2 0x396 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x396 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x9 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 DUP7 CALLVALUE PUSH2 0x6EF JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x6EF JUMPI PUSH2 0xFB6 PUSH2 0x121E JUMP JUMPDEST PUSH2 0xFBE PUSH2 0x1239 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 LT PUSH2 0xFFA JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x71D DUP10 DUP10 DUP10 PUSH2 0x165A JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x1062 JUMPI DUP2 ISZERO PUSH2 0x104B JUMPI CALLER ISZERO PUSH2 0x1034 JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x71D DUP8 PUSH2 0xFEC JUMP JUMPDEST DUP8 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST POP SWAP1 POP CALLVALUE PUSH2 0x396 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x396 JUMPI PUSH32 0x7C1CB3702D8E1FA6D24B12DD90670AB69C6D66D58233103D37DA8B07D6B850AC SWAP2 PUSH1 0x20 SWAP2 CALLDATALOAD SWAP1 PUSH2 0x10D1 PUSH2 0x155E JUMP JUMPDEST DUP2 PUSH1 0x12 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x71D PUSH2 0x111E PUSH2 0x121E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x19F8 JUMP JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI DUP1 MLOAD PUSH2 0x275 SWAP2 PUSH2 0x263 DUP3 PUSH2 0x25C DUP2 PUSH2 0x1289 JUMP JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x442A94F1A1FAC79AF32856AF2A64F63648CFA2EF3B98610A5BB7CBEC4CEE6985 DUP2 MSTORE RETURN JUMPDEST DUP6 SWAP1 DUP4 CALLVALUE PUSH2 0x396 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x396 JUMPI CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x396 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x11CD JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x11C6 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x120A JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1234 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1234 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x127F JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1269 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1299 DUP3 PUSH2 0x124F JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1318 JUMPI POP PUSH1 0x1 EQ PUSH2 0x12BC JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP3 SWAP4 SWAP5 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP3 PUSH1 0x0 SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x1305 JUMPI POP POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x12B6 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP5 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x12EB JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x12B6 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x134D DUP3 PUSH2 0x124F JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1318 JUMPI POP PUSH1 0x1 EQ PUSH2 0x136F JUMPI POP POP POP POP JUMP JUMPDEST SWAP3 SWAP4 SWAP5 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP3 PUSH1 0x0 SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x13B8 JUMPI POP POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x12B6 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP5 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x139E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x13DB DUP3 PUSH2 0x124F JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1318 JUMPI POP PUSH1 0x1 EQ PUSH2 0x13FD JUMPI POP POP POP POP JUMP JUMPDEST SWAP3 SWAP4 SWAP5 POP PUSH1 0xB PUSH1 0x0 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 SWAP3 PUSH1 0x0 SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x1446 JUMPI POP POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x12B6 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP5 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x142C JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1469 DUP3 PUSH2 0x124F JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1318 JUMPI POP PUSH1 0x1 EQ PUSH2 0x148B JUMPI POP POP POP POP JUMP JUMPDEST SWAP3 SWAP4 SWAP5 POP PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP3 PUSH1 0x0 SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x14D4 JUMPI POP POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x12B6 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP5 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1503 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1503 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1548 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4FCB20797BC22B6BDF05ED948026FDC1B31B30D107AC0811A08B18C975BBD64B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x442A94F1A1FAC79AF32856AF2A64F63648CFA2EF3B98610A5BB7CBEC4CEE6985 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x15BA JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x84574A31E2F767388BFA57BC81FF2590DF95D3022C04C363CCA3E37EE9608631 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x15BA JUMPI POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x15BA JUMPI POP JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP3 SWAP1 DUP4 ISZERO PUSH2 0x179A JUMPI DUP5 AND SWAP4 DUP5 ISZERO PUSH2 0x1781 JUMPI DUP3 PUSH2 0x1683 SWAP2 DUP4 PUSH2 0x1D82 JUMP JUMPDEST ISZERO PUSH2 0x1745 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP2 DUP3 DUP3 KECCAK256 PUSH3 0x15180 TIMESTAMP DIV DUP4 MSTORE PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 PUSH2 0x16B1 DUP6 DUP3 SLOAD PUSH2 0x153B JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x16BB PUSH2 0x1A8B JUMP JUMPDEST DUP5 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SLOAD SWAP1 DUP5 DUP3 LT PUSH2 0x1714 JUMPI POP SWAP2 DUP1 DUP3 DUP6 PUSH1 0x20 SWAP6 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP9 SWAP7 MSTORE DUP3 DUP8 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP8 DUP2 MSTORE KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP4 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151C985B9CD9995C881B9BDD08185B1B1BDDD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x182E JUMPI DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST ADDRESS PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1935 JUMPI JUMPDEST ISZERO PUSH2 0x188E JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP3 MSTORE PUSH32 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1503 JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x1865 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x182E JUMPI DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xA SLOAD EQ PUSH2 0x19E6 JUMPI PUSH1 0x2 PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x1A72 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x1A59 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x8 SLOAD AND PUSH2 0x1A97 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x1AE7 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x1AD5 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1ACB DUP4 PUSH2 0x14E7 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x5 SLOAD DUP2 PUSH1 0x0 PUSH2 0x1AFA DUP4 PUSH2 0x124F JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1B89 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1B28 JUMPI JUMPDEST POP POP PUSH2 0x1B25 SWAP3 POP SUB DUP3 PUSH2 0x1519 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x1B71 JUMPI POP PUSH2 0x1B25 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0x1B17 JUMP JUMPDEST DUP6 SLOAD DUP8 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x1B56 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP3 POP PUSH2 0x1B25 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x1BCF JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x1AD5 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1ACB DUP4 PUSH2 0x14E7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x6 SLOAD DUP2 PUSH1 0x0 PUSH2 0x1BE2 DUP4 PUSH2 0x124F JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1B89 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1C0C JUMPI POP POP PUSH2 0x1B25 SWAP3 POP SUB DUP3 PUSH2 0x1519 JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0x6 PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x1C55 JUMPI POP PUSH2 0x1B25 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0x1B17 JUMP JUMPDEST DUP6 SLOAD DUP8 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x1C3A JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x1CF1 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x1CE5 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1CDC JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x1D6C JUMPI DUP1 PUSH2 0x1D0F JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x1D29 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x1D4A JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0x1D54 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND SWAP1 PUSH1 0x0 SWAP4 DUP3 DUP6 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND SWAP2 DUP3 ISZERO PUSH2 0x1E07 JUMPI JUMPDEST POP POP PUSH2 0x182E JUMPI PUSH1 0x12 SLOAD DUP3 GT PUSH2 0x182E JUMPI DUP3 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1DFA JUMPI PUSH2 0x1DEF SWAP1 SWAP2 JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 PUSH3 0x15180 TIMESTAMP DIV DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD PUSH2 0x153B JUMP JUMPDEST GT PUSH2 0x1B25 JUMPI POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH2 0x1DEF PUSH1 0x11 SLOAD SWAP2 PUSH2 0x1DD1 JUMP JUMPDEST AND DUP5 MSTORE POP PUSH1 0x40 DUP4 KECCAK256 SLOAD PUSH1 0xFF AND CODESIZE DUP1 PUSH2 0x1DAA JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xD7 CALL PUSH8 0x71B70444D4041C0B PUSH8 0x23667F1452CA7001 DUP6 SWAP5 0xB4 MULMOD 0xA9 SWAP2 NOT 0xAD SWAP2 0xF8 SLOAD PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER 0x2F DUP8 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D00000000 ","sourceMap":"742:7136:28:-:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;742:7136:28;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;742:7136:28;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;742:7136:28;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;742:7136:28;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;742:7136:28;;;;;;;;;;;;;-1:-1:-1;;;742:7136:28;;;;;;-1:-1:-1;;;;;742:7136:28;;;;1648:13:5;742:7136:28;;;;;;;;;;;-1:-1:-1;742:7136:28;;;;;;;;;;;-1:-1:-1;742:7136:28;;;;;;;;;;-1:-1:-1;742:7136:28;;;;;;;;;;;;1648:13:5;742:7136:28;;;;;1648:13:5;742:7136:28;;;;;-1:-1:-1;;;;;742:7136:28;;;;1671:17:5;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;742:7136:28;;;;;;;;;;;;;1648:13:5;742:7136:28;;;;;1671:17:5;742:7136:28;;3501:45:20;;;:::i;:::-;3493:53;;3567:51;;;:::i;:::-;3556:62;;742:7136:28;;;;;3642:22:20;3628:36;;742:7136:28;3628:36:20;742:7136:28;;;;;3691:25:20;3674:42;;;3744:13;742:7136:28;3727:30:20;742:7136:28;;4304:80:20;742:7136:28;4304:80:20;;1115:28:28;2079:95:20;1115:28:28;;742:7136;2079:95:20;;1115:28:28;742:7136;2079:95:20;;1115:28:28;3744:13:20;742:7136:28;2079:95:20;;1115:28:28;4378:4:20;742:7136:28;2079:95:20;;742:7136:28;;4304:80:20;;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;4294:91:20;;742:7136:28;3767:48:20;4378:4;742:7136:28;3825:27:20;742:7136:28;2061:21:15;742:7136:28;1539:16;;742:7136;1620:15;;742:7136;-1:-1:-1;;;;;742:7136:28;;2692:20;742:7136;;2763:14;;;;742:7136;;2833:28;;;742:7136;;;;;-1:-1:-1;;;;;742:7136:28;;;;2918:26;742:7136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;742:7136:28;;;;;;;;;;;;;1648:13:5;742:7136:28;;;;;2918:26;742:7136;;;;-1:-1:-1;;;;;742:7136:28;;;;2954:26;742:7136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;742:7136:28;;;;;;;;;;;;;1648:13:5;742:7136:28;;;;;2954:26;742:7136;;2990:22;742:7136;3054:38;;;:::i;:::-;;3102:31;;;:::i;:::-;;3143;;;:::i;:::-;;3184;;;:::i;:::-;;3225:35;;;:::i;:::-;;3314:18;3310:133;;742:7136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3674:42:20;742:7136:28;;;;;3493:53:20;742:7136:28;;;;;3556:62:20;742:7136:28;;;;;;3310:133;742:7136;1796:7:14;742:7136:28;;1939:61:14;;6137:21:5;742:7136:28;;;;;;;;;6137:21:5;742:7136:28;-1:-1:-1;;;;;742:7136:28;;-1:-1:-1;742:7136:28;;;;;;;;;;;;;;;;;;1115:28;;;3396:36;;742:7136;;;;-1:-1:-1;6987:25:5;;742:7136:28;;6987:25:5;742:7136:28;;1115:28;;;-1:-1:-1;;;;;742:7136:28;;3396:36;3310:133;;;;742:7136;;;;-1:-1:-1;742:7136:28;1539:16;1671:17:5;742:7136:28;;-1:-1:-1;742:7136:28;1939:61:14;742:7136:28;;-1:-1:-1;;;1974:15:14;;1671:17:5;;1974:15:14;742:7136:28;;;;-1:-1:-1;742:7136:28;;;;;;;;;;2954:26;-1:-1:-1;742:7136:28;;-1:-1:-1;742:7136:28;;-1:-1:-1;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;2954:26;742:7136;;;;;;;;;;1648:13:5;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2954:26;-1:-1:-1;742:7136:28;;;;;3532:13:20;742:7136:28;;;;;;;;;;;;3532:13:20;742:7136:28;;;;;;;;;;;;;-1:-1:-1;742:7136:28;;;;;;;;;-1:-1:-1;742:7136:28;;;;;;;;-1:-1:-1;742:7136:28;;1671:17:5;742:7136:28;;-1:-1:-1;742:7136:28;;;;;;;;;;;;-1:-1:-1;742:7136:28;;1671:17:5;742:7136:28;;-1:-1:-1;742:7136:28;;;;;-1:-1:-1;742:7136:28;;;;;2918:26;-1:-1:-1;742:7136:28;;;;;-1:-1:-1;;;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;;;2918:26;742:7136;;;;;;;;;;1648:13:5;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2918:26;-1:-1:-1;742:7136:28;;;-1:-1:-1;742:7136:28;;;;3532:13:20;742:7136:28;;;;;;;;;;;;;;;;;3532:13:20;742:7136:28;;;;;;;;;;;;;-1:-1:-1;742:7136:28;;;;-1:-1:-1;742:7136:28;;;;;;;-1:-1:-1;742:7136:28;;;;;;;;;;;;;;-1:-1:-1;;;742:7136:28;;;1671:17:5;742:7136:28;;;;;;;;;;;;;-1:-1:-1;;;742:7136:28;;;;;;;;;;-1:-1:-1;;;742:7136:28;;;1671:17:5;742:7136:28;;;;;;;;;;;;;-1:-1:-1;;;742:7136:28;;;;;;;;-1:-1:-1;;;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;742:7136:28;;;;;1671:17:5;-1:-1:-1;742:7136:28;;;-1:-1:-1;;742:7136:28;;;;-1:-1:-1;;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;1671:17:5;742:7136:28;;;;;;;;;;1648:13:5;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:17:5;-1:-1:-1;742:7136:28;;;-1:-1:-1;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;742:7136:28;;;;-1:-1:-1;742:7136:28;;;;;;;-1:-1:-1;742:7136:28;;;;;;;;;;;;;;;;;;;;;1648:13:5;-1:-1:-1;742:7136:28;;;-1:-1:-1;;742:7136:28;;;-1:-1:-1;;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;1648:13:5;742:7136:28;;;;;;;;;;;1648:13:5;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:13:5;-1:-1:-1;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;742:7136:28;;;;;;;-1:-1:-1;742:7136:28;;;;;;;;;;;-1:-1:-1;742:7136:28;;;;;;;-1:-1:-1;;742:7136:28;;;;-1:-1:-1;;;;;742:7136:28;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;742:7136:28;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;742:7136:28;;;;;;;;;;;-1:-1:-1;;742:7136:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;6155:316:0:-;-1:-1:-1;;;;;742:7136:28;;;;;;;;;;;;;;;;;;;;;;2930:6:0;742:7136:28;;;;;;;;;;;;;6323:4:0;742:7136:28;;;;;;;;735:10:11;6346:40:0;-1:-1:-1;;;;;;;;;;;6346:40:0;;;6323:4;6400:11;:::o;6248:217::-;6442:12;;:::o;6155:316::-;-1:-1:-1;;;;;742:7136:28;-1:-1:-1;742:7136:28;;;;;;;;;;-1:-1:-1;;742:7136:28;907:24;;742:7136;;;;;;;2930:6:0;742:7136:28;;;;;;;;;;;;;6323:4:0;742:7136:28;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:11;6346:40:0;;;6323:4;6400:11;:::o;6248:217::-;6442:12;;;:::o;6155:316::-;-1:-1:-1;;;;;742:7136:28;-1:-1:-1;742:7136:28;;;;;;;;;;-1:-1:-1;;742:7136:28;975:24;;742:7136;;;;;;;2930:6:0;742:7136:28;;;;;;;;;;;;;6323:4:0;742:7136:28;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:11;6346:40:0;;;6323:4;6400:11;:::o;6155:316::-;-1:-1:-1;;;;;742:7136:28;-1:-1:-1;742:7136:28;;;;;;;;;;-1:-1:-1;;742:7136:28;1043:24;;742:7136;;;;;;;2930:6:0;742:7136:28;;;;;;;;;;;;;6323:4:0;742:7136:28;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:11;6346:40:0;;;6323:4;6400:11;:::o;6155:316::-;-1:-1:-1;;;;;742:7136:28;-1:-1:-1;742:7136:28;;;;;;;;;;-1:-1:-1;;742:7136:28;1115:28;;742:7136;;;;;;;2930:6:0;742:7136:28;;;;;;;;;;;;;6323:4:0;742:7136:28;;;;;;;;-1:-1:-1;;;;;;;;;;;735:10:11;6346:40:0;;;6323:4;6400:11;:::o;2887:340:16:-;742:7136:28;;3032:2:16;;742:7136:28;3010:24:16;;;3032:2;;;742:7136:28;;1854:2:16;742:7136:28;;1840:16:16;1836:72;;742:7136:28;;;;;2079:95:20;742:7136:28;;;;;;1949:36:16;;3050:27;:::o;742:7136:28:-;;;;;;;;;;1949:36:16;3050:27;:::o;1836:72::-;742:7136:28;;;;;;1879:18:16;;;;;;;;;;;;742:7136:28;;;;;;;;;;;;;;;;;:::i;:::-;1854:2:16;742:7136:28;-1:-1:-1;;742:7136:28;;;1879:18:16;;;;3006:215;-1:-1:-1;;;;;742:7136:28;;;;3532:13:20;742:7136:28;;;;;;;;;;;;;;;;3006:215:16;742:7136:28;;;;;;;;;;;3006:215:16;742:7136:28;;;;;;;;;;;;;;;;-1:-1:-1;742:7136:28;;;;;;;;;;;;;;;;;;;1390:66:16;3168:42;:::o;742:7136:28:-;;;;-1:-1:-1;742:7136:28;;;;;;;;;;;;;-1:-1:-1;742:7136:28;;-1:-1:-1;742:7136:28;;-1:-1:-1;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;1390:66:16;3168:42;:::o;742:7136:28:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;742:7136:28;;;;;;;;-1:-1:-1;742:7136:28;;;;-1:-1:-1;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;742:7136:28;;;;;;;;;;;;;;2887:340:16;742:7136:28;;3032:2:16;;3010:24;;;3032:2;;;742:7136:28;1854:2:16;742:7136:28;;1840:16:16;1836:72;;742:7136:28;;;;;2079:95:20;742:7136:28;;;;;;1949:36:16;;3050:27;:::o;3006:215::-;742:7136:28;-1:-1:-1;;;;;742:7136:28;;;;3601:16:20;742:7136:28;;;;;;;;;;;;;;3006:215:16;742:7136:28;;;;;;;;;;;3006:215:16;742:7136:28;;;;;;;;;;;;;;;;-1:-1:-1;742:7136:28;;;;;;;;;;;;;;;;;3601:16:20;742:7136:28;1390:66:16;3168:42;:::o;742:7136:28:-;;;;-1:-1:-1;742:7136:28;;;;;;;;;;;;3601:16:20;-1:-1:-1;742:7136:28;;-1:-1:-1;742:7136:28;;-1:-1:-1;742:7136:28;;;;;;;;;;;;;;;;;;;;;3601:16:20;742:7136:28;1390:66:16;3168:42;:::o;742:7136:28:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;742:7136:28;;;;;;;3601:16:20;-1:-1:-1;742:7136:28;;;;-1:-1:-1;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;742:7136:28;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":4665,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_15956":{"entryPoint":4638,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_string":{"entryPoint":4574,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":5067,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string_storage_15955":{"entryPoint":4745,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string_storage_15979":{"entryPoint":4925,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string_storage_15987":{"entryPoint":5209,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":5435,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":4687,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":5401,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_30744":{"entryPoint":5351,"id":null,"parameterSlots":1,"returnSlots":0},"fun_approve":{"entryPoint":6648,"id":1155,"parameterSlots":3,"returnSlots":0},"fun_checkRole":{"entryPoint":5684,"id":94,"parameterSlots":1,"returnSlots":0},"fun_checkRole_15958":{"entryPoint":5470,"id":94,"parameterSlots":0,"returnSlots":0},"fun_checkRole_15966":{"entryPoint":5592,"id":94,"parameterSlots":0,"returnSlots":0},"fun_domainSeparatorV4":{"entryPoint":6195,"id":4073,"parameterSlots":0,"returnSlots":1},"fun_grantRole":{"entryPoint":6067,"id":257,"parameterSlots":2,"returnSlots":1},"fun_isTransferAllowed":{"entryPoint":7554,"id":8802,"parameterSlots":3,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":6613,"id":1839,"parameterSlots":0,"returnSlots":0},"fun_requireNotPaused":{"entryPoint":6795,"id":1744,"parameterSlots":0,"returnSlots":0},"fun_revokeRole":{"entryPoint":6494,"id":295,"parameterSlots":2,"returnSlots":1},"fun_throwError":{"entryPoint":7421,"id":3949,"parameterSlots":2,"returnSlots":0},"fun_toStringWithFallback":{"entryPoint":6825,"id":2044,"parameterSlots":1,"returnSlots":1},"fun_toStringWithFallback_15975":{"entryPoint":7085,"id":2044,"parameterSlots":1,"returnSlots":1},"fun_transfer":{"entryPoint":5722,"id":934,"parameterSlots":3,"returnSlots":0},"fun_tryRecover":{"entryPoint":7277,"id":3864,"parameterSlots":4,"returnSlots":3}},"generatedSources":[],"immutableReferences":{"3971":[{"length":32,"start":6252}],"3973":[{"length":32,"start":6456}],"3975":[{"length":32,"start":6198}],"3977":[{"length":32,"start":6331}],"3979":[{"length":32,"start":6369}],"3982":[{"length":32,"start":2479}],"3985":[{"length":32,"start":2521}]},"linkReferences":{},"object":"608060408181526004918236101561001657600080fd5b60009260e08435811c92836301ffc9a71461118a57508263062d3bd71461114e57826306fdde0314611128578263095ea7b3146110fd57826318160ddd146110dd5782631e293c101461108e57826323b872dd14610f9a578263248a9ca314610f6e5782632803212f14610f05578263282c51f314610ec95782632f2ff15d14610e9f578263313ce56714610e825782633644e51514610e5d57826336568abe14610e165782633e6968b614610df55782633f4ba83a14610d8a57826340c10f1914610be05782635c975abb14610bbb57826370a0823114610b835782637d89d05c14610b4a5782637ecebe0014610b115782638456cb5914610ab557826384b0196e1461099757826391d148541461094f57826395d89b41146109295782639dc29fac14610740578263a217fddf14610724578263a9059cbb146106f2578263abb1dc4414610624578263c76b088814610604578263c87cbe56146105de578263c8c8ebe4146105be578263d01dd6d21461053b578263d505accf146103d557508163d53913931461039a578163d547741f1461035657508063d5abeb0114610338578063dbac26e9146102fb578063dd62ed3e146102b3578063e63ab1e914610279578063f5ec2eed146102385763fdb98082146101f557600080fd5b3461023457806003193601126102345760209181906001600160a01b0361021a61121e565b168152601084528181206024358252845220549051908152f35b5080fd5b50346102345781600319360112610234578051610275916102638261025c81611459565b0383611519565b519182916020835260208301906111de565b0390f35b5034610234578160031936011261023457602090517f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a8152f35b5034610234578060031936011261023457806020926102d061121e565b6102d8611239565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b50346102345760203660031901126102345760209160ff9082906001600160a01b0361032561121e565b168152600e855220541690519015158152f35b5034610234578160031936011261023457602090600d549051908152f35b91905034610396578060031936011261039657610392913561038d600161037b611239565b93838752600960205286200154611634565b61195e565b5080f35b8280fd5b505034610234578160031936011261023457602090517f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a68152f35b90849250346103965781600319360112610396576103f161121e565b6103f9611239565b916044359360643560843560ff8116810361053757814211610520578860018060a01b039283871694858b526007602052828b20918254926001840190558351928760208501957f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98752850152868b1660608501528b608085015260a084015260c083015260c08252810181811067ffffffffffffffff82111761050d578b525190206104db916104d2916104ac611833565b908c519161190160f01b83526002830152602282015260c43591604260a4359220611c6d565b90929192611cfd565b168181036104f257866104ef8787876119f8565b80f35b87516325c0072360e11b815292830152602482015260449150fd5b634e487b7160e01b8b526041875260248bfd5b885163313c898160e11b8152808501839052602490fd5b8780fd5b5050503461023457806003193601126102345761055661121e565b602435908115158092036105ba577fcf3473b85df1594d47b6958f29a32bea0abff9dd68296f7bf33443646793cfd89160209161059161155e565b6001600160a01b0316808652600e8352848620805460ff191660ff84161790559351908152a280f35b8380fd5b505050346102345781600319360112610234576020906012549051908152f35b505050346102345781600319360112610234578051610275916102638261025c816113cb565b505050346102345781600319360112610234576020906011549051908152f35b839085346106ef57806003193601126106ef575081519161064f8361064881611289565b0384611519565b80519061065f8261025c8161133d565b6106d9600254926106cb600d549380516106838161067c816113cb565b0382611519565b6106be82519461069d8661069681611459565b0387611519565b6106b084519b8b8d9c8d528c01906111de565b908a820360208c01526111de565b91888303908901526111de565b9085820360608701526111de565b91608084015260a0830152601260c08301520390f35b80fd5b5050503461023457806003193601126102345760209061071d61071361121e565b602435903361165a565b5160018152f35b5050503461023457816003193601126102345751908152602090f35b5090503461039657816003193601126103965761075b61121e565b91602435907f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8489283865260209360098552828720338852855260ff83882054161561090e57506107a96119d5565b6001600160a01b0385169485156108cc5785875286855283838820541061088a576107d2611a8b565b858752868552828720549184831061085657505090827ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb69493928688528785520381872055816002540360025585857fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef858451868152a351908152a26001600a5580f35b835163391434e360e21b81526001600160a01b03909216908201908152602081018390526040810185905281906060010390fd5b5083606492519162461bcd60e51b8352820152601c60248201527f496e73756666696369656e742062616c616e636520746f206275726e000000006044820152fd5b5083606492519162461bcd60e51b8352820152601d60248201527f43616e6e6f74206275726e2066726f6d207a65726f20616464726573730000006044820152fd5b604492519163e2517d3f60e01b835233908301526024820152fd5b505050346102345781600319360112610234578051610275916102638261025c8161133d565b509050346103965781600319360112610396578160209360ff92610971611239565b90358252600986528282206001600160a01b039091168252855220549151911615158152f35b908385346106ef57806003193601126106ef576109d37f0000000000000000000000000000000000000000000000000000000000000000611aa9565b906109fd7f0000000000000000000000000000000000000000000000000000000000000000611bad565b92805193602093602086019686881067ffffffffffffffff891117610aa25750959390610a5883602092878b999652868652610a4b82519a8b9a600f60f81b8c5280878d01528b01906111de565b91898303908a01526111de565b924660608801523060808801528460a088015286840360c088015251928381520193925b828110610a8b57505050500390f35b835185528695509381019392810192600101610a7c565b634e487b7160e01b855260419052602484fd5b5050503461023457816003193601126102345760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25891610af46115d8565b610afc611a8b565b600160ff19600854161760085551338152a180f35b505050346102345760203660031901126102345760209181906001600160a01b03610b3a61121e565b1681526007845220549051908152f35b505050346102345760203660031901126102345760209181906001600160a01b03610b7361121e565b168152600f845220549051908152f35b505050346102345760203660031901126102345760209181906001600160a01b03610bac61121e565b16815280845220549051908152f35b5050503461023457816003193601126102345760209060ff6008541690519015158152f35b84828534610396578060031936011261039657610bfb61121e565b90602435907f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a69283865260209360098552828720338852855260ff838820541615610d6c5750610c496119d5565b6001600160a01b0316938415610d2b5760025490610c67848361153b565b600d5410610cef575090610ca6837f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a4273959493610ca1611a8b565b61153b565b60025584865285835280862082815401905584867fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef858451868152a351908152a26001600a5580f35b825162461bcd60e51b8152908101859052601660248201527545786365656473206d6178696d756d20737570706c7960501b6044820152606490fd5b83606492519162461bcd60e51b8352820152601b60248201527f43616e6e6f74206d696e7420746f207a65726f206164647265737300000000006044820152fd5b825163e2517d3f60e01b815233818801526024810191909152604490fd5b50905034610396578260031936011261039657610da56115d8565b6008549060ff821615610de7575060ff1916600855513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b8251638dfc202b60e01b8152fd5b50505034610234578160031936011261023457602090516201518042048152f35b50838334610234578060031936011261023457610e31611239565b90336001600160a01b03831603610e4e575061039291923561195e565b5163334bd91960e11b81528390fd5b50505034610234578160031936011261023457602090610e7b611833565b9051908152f35b505050346102345781600319360112610234576020905160128152f35b848285346103965780600319360112610396576103929135610ec4600161037b611239565b6117b3565b50505034610234578160031936011261023457602090517f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a8488152f35b505050346102345780600319360112610234577fd3d22ffd28b02735cf411bd7f925bd8da01212c7028153e0d632e2953ac3088e6020610f4361121e565b60243590610f4f61155e565b6001600160a01b0316808652600f83528486208290559351908152a280f35b509050346103965760203660031901126103965781602093600192358152600985522001549051908152f35b838286346106ef5760603660031901126106ef57610fb661121e565b610fbe611239565b916044359360018060a01b038316808352600160205286832033845260205286832054916000198310610ffa575b60208861071d89898961165a565b86831061106257811561104b5733156110345750825260016020908152868320338452815291869020908590039055829061071d87610fec565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b50905034610396576020366003190112610396577f7c1cb3702d8e1fa6d24b12dd90670ab69c6d66d58233103d37da8b07d6b850ac9160209135906110d161155e565b8160125551908152a180f35b505050346102345781600319360112610234576020906002549051908152f35b5050503461023457806003193601126102345760209061071d61111e61121e565b60243590336119f8565b505050346102345781600319360112610234578051610275916102638261025c81611289565b50505034610234578160031936011261023457602090517f442a94f1a1fac79af32856af2a64f63648cfa2ef3b98610a5bb7cbec4cee69858152f35b85908334610396576020366003190112610396573563ffffffff60e01b81168091036103965760209250637965db0b60e01b81149081156111cd575b5015158152f35b6301ffc9a760e01b149050836111c6565b919082519283825260005b84811061120a575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016111e9565b600435906001600160a01b038216820361123457565b600080fd5b602435906001600160a01b038216820361123457565b90600182811c9216801561127f575b602083101461126957565b634e487b7160e01b600052602260045260246000fd5b91607f169161125e565b600354600092916112998261124f565b8082529160209060019081811690811561131857506001146112bc575b50505050565b9293945060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b926000935b8585106113055750505060209250010190388080806112b6565b80548585018401529382019381016112eb565b92505050602093945060ff929192191683830152151560051b010190388080806112b6565b6004546000929161134d8261124f565b80825291602090600190818116908115611318575060011461136f5750505050565b9293945060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b926000935b8585106113b85750505060209250010190388080806112b6565b805485850184015293820193810161139e565b600b54600092916113db8261124f565b8082529160209060019081811690811561131857506001146113fd5750505050565b92939450600b6000527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9926000935b8585106114465750505060209250010190388080806112b6565b805485850184015293820193810161142c565b600c54600092916114698261124f565b80825291602090600190818116908115611318575060011461148b5750505050565b92939450600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7926000935b8585106114d45750505060209250010190388080806112b6565b80548585018401529382019381016114ba565b6040810190811067ffffffffffffffff82111761150357604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761150357604052565b9190820180921161154857565b634e487b7160e01b600052601160045260246000fd5b3360009081527f4fcb20797bc22b6bdf05ed948026fdc1b31b30d107ac0811a08b18c975bbd64b60205260409020547f442a94f1a1fac79af32856af2a64f63648cfa2ef3b98610a5bb7cbec4cee69859060ff16156115ba5750565b6044906040519063e2517d3f60e01b82523360048301526024820152fd5b3360009081527f84574a31e2f767388bfa57bc81ff2590df95d3022c04c363cca3e37ee960863160205260409020547f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a9060ff16156115ba5750565b80600052600960205260406000203360005260205260ff60406000205416156115ba5750565b90916001600160a01b038083169290831561179a57841693841561178157826116839183611d82565b15611745576000838152601060205260409182822062015180420483526020528282206116b185825461153b565b90556116bb611a8b565b848252816020528282205490848210611714575091808285602095887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef98965282875203828220558781522082815401905551908152a3565b835163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101849052606490fd5b60405162461bcd60e51b8152602060048201526014602482015273151c985b9cd9995c881b9bdd08185b1b1bddd95960621b6044820152606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b906000918083526009602052604083209160018060a01b03169182845260205260ff6040842054161560001461182e5780835260096020526040832082845260205260408320600160ff198254161790557f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a4600190565b505090565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611935575b1561188e577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff8211176115035760405251902090565b507f00000000000000000000000000000000000000000000000000000000000000004614611865565b906000918083526009602052604083209160018060a01b03169182845260205260ff60408420541660001461182e578083526009602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b339380a4600190565b6002600a54146119e6576002600a55565b604051633ee5aeb560e01b8152600490fd5b6001600160a01b03908116918215611a725716918215611a595760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b604051634a1406b160e11b815260006004820152602490fd5b60405163e602df0560e01b815260006004820152602490fd5b60ff60085416611a9757565b60405163d93c066560e01b8152600490fd5b60ff8114611ae75760ff811690601f8211611ad55760405191611acb836114e7565b8252602082015290565b604051632cd44ac360e21b8152600490fd5b50604051600554816000611afa8361124f565b80835292602090600190818116908115611b895750600114611b28575b5050611b2592500382611519565b90565b91509260056000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0936000925b828410611b715750611b259450505081016020013880611b17565b85548785018301529485019486945092810192611b56565b91505060209250611b2594915060ff191682840152151560051b8201013880611b17565b60ff8114611bcf5760ff811690601f8211611ad55760405191611acb836114e7565b50604051600654816000611be28361124f565b80835292602090600190818116908115611b895750600114611c0c575050611b2592500382611519565b91509260066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f936000925b828410611c555750611b259450505081016020013880611b17565b85548785018301529485019486945092810192611c3a565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411611cf157926020929160ff608095604051948552168484015260408301526060820152600092839182805260015afa15611ce55780516001600160a01b03811615611cdc57918190565b50809160019190565b604051903d90823e3d90fd5b50505060009160039190565b6004811015611d6c5780611d0f575050565b60018103611d295760405163f645eedf60e01b8152600490fd5b60028103611d4a5760405163fce698f760e01b815260048101839052602490fd5b600314611d545750565b602490604051906335e2f38360e21b82526004820152fd5b634e487b7160e01b600052602160045260246000fd5b919060018060a01b0380931690600093828552600e60205260ff604086205416918215611e07575b505061182e57601254821161182e578252600f60205260408220548015611dfa57611def90915b6010602052604084206201518042048552602052604084205461153b565b11611b255750600190565b50611def60115491611dd1565b16845250604083205460ff163880611daa56fea264697066735822122020d7f16771b70444d4041c0b6723667f1452ca70018594b409a99119ad91f85464736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 SWAP2 DUP3 CALLDATASIZE LT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 PUSH1 0xE0 DUP5 CALLDATALOAD DUP2 SHR SWAP3 DUP4 PUSH4 0x1FFC9A7 EQ PUSH2 0x118A JUMPI POP DUP3 PUSH4 0x62D3BD7 EQ PUSH2 0x114E JUMPI DUP3 PUSH4 0x6FDDE03 EQ PUSH2 0x1128 JUMPI DUP3 PUSH4 0x95EA7B3 EQ PUSH2 0x10FD JUMPI DUP3 PUSH4 0x18160DDD EQ PUSH2 0x10DD JUMPI DUP3 PUSH4 0x1E293C10 EQ PUSH2 0x108E JUMPI DUP3 PUSH4 0x23B872DD EQ PUSH2 0xF9A JUMPI DUP3 PUSH4 0x248A9CA3 EQ PUSH2 0xF6E JUMPI DUP3 PUSH4 0x2803212F EQ PUSH2 0xF05 JUMPI DUP3 PUSH4 0x282C51F3 EQ PUSH2 0xEC9 JUMPI DUP3 PUSH4 0x2F2FF15D EQ PUSH2 0xE9F JUMPI DUP3 PUSH4 0x313CE567 EQ PUSH2 0xE82 JUMPI DUP3 PUSH4 0x3644E515 EQ PUSH2 0xE5D JUMPI DUP3 PUSH4 0x36568ABE EQ PUSH2 0xE16 JUMPI DUP3 PUSH4 0x3E6968B6 EQ PUSH2 0xDF5 JUMPI DUP3 PUSH4 0x3F4BA83A EQ PUSH2 0xD8A JUMPI DUP3 PUSH4 0x40C10F19 EQ PUSH2 0xBE0 JUMPI DUP3 PUSH4 0x5C975ABB EQ PUSH2 0xBBB JUMPI DUP3 PUSH4 0x70A08231 EQ PUSH2 0xB83 JUMPI DUP3 PUSH4 0x7D89D05C EQ PUSH2 0xB4A JUMPI DUP3 PUSH4 0x7ECEBE00 EQ PUSH2 0xB11 JUMPI DUP3 PUSH4 0x8456CB59 EQ PUSH2 0xAB5 JUMPI DUP3 PUSH4 0x84B0196E EQ PUSH2 0x997 JUMPI DUP3 PUSH4 0x91D14854 EQ PUSH2 0x94F JUMPI DUP3 PUSH4 0x95D89B41 EQ PUSH2 0x929 JUMPI DUP3 PUSH4 0x9DC29FAC EQ PUSH2 0x740 JUMPI DUP3 PUSH4 0xA217FDDF EQ PUSH2 0x724 JUMPI DUP3 PUSH4 0xA9059CBB EQ PUSH2 0x6F2 JUMPI DUP3 PUSH4 0xABB1DC44 EQ PUSH2 0x624 JUMPI DUP3 PUSH4 0xC76B0888 EQ PUSH2 0x604 JUMPI DUP3 PUSH4 0xC87CBE56 EQ PUSH2 0x5DE JUMPI DUP3 PUSH4 0xC8C8EBE4 EQ PUSH2 0x5BE JUMPI DUP3 PUSH4 0xD01DD6D2 EQ PUSH2 0x53B JUMPI DUP3 PUSH4 0xD505ACCF EQ PUSH2 0x3D5 JUMPI POP DUP2 PUSH4 0xD5391393 EQ PUSH2 0x39A JUMPI DUP2 PUSH4 0xD547741F EQ PUSH2 0x356 JUMPI POP DUP1 PUSH4 0xD5ABEB01 EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xDBAC26E9 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0xF5EC2EED EQ PUSH2 0x238 JUMPI PUSH4 0xFDB98082 EQ PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x21A PUSH2 0x121E JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x10 DUP5 MSTORE DUP2 DUP2 KECCAK256 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI DUP1 MLOAD PUSH2 0x275 SWAP2 PUSH2 0x263 DUP3 PUSH2 0x25C DUP2 PUSH2 0x1459 JUMP JUMPDEST SUB DUP4 PUSH2 0x1519 JUMP JUMPDEST MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x11DE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI DUP1 PUSH1 0x20 SWAP3 PUSH2 0x2D0 PUSH2 0x121E JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP4 MSTORE PUSH1 0x1 DUP7 MSTORE DUP4 DUP4 KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x234 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP2 PUSH1 0xFF SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x325 PUSH2 0x121E JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xE DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x396 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI PUSH2 0x392 SWAP2 CALLDATALOAD PUSH2 0x38D PUSH1 0x1 PUSH2 0x37B PUSH2 0x1239 JUMP JUMPDEST SWAP4 DUP4 DUP8 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE DUP7 KECCAK256 ADD SLOAD PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x195E JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 MSTORE RETURN JUMPDEST SWAP1 DUP5 SWAP3 POP CALLVALUE PUSH2 0x396 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI PUSH2 0x3F1 PUSH2 0x121E JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x1239 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x537 JUMPI DUP2 TIMESTAMP GT PUSH2 0x520 JUMPI DUP9 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP8 AND SWAP5 DUP6 DUP12 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP3 DUP12 KECCAK256 SWAP2 DUP3 SLOAD SWAP3 PUSH1 0x1 DUP5 ADD SWAP1 SSTORE DUP4 MLOAD SWAP3 DUP8 PUSH1 0x20 DUP6 ADD SWAP6 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP8 MSTORE DUP6 ADD MSTORE DUP7 DUP12 AND PUSH1 0x60 DUP6 ADD MSTORE DUP12 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 MSTORE DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x50D JUMPI DUP12 MSTORE MLOAD SWAP1 KECCAK256 PUSH2 0x4DB SWAP2 PUSH2 0x4D2 SWAP2 PUSH2 0x4AC PUSH2 0x1833 JUMP JUMPDEST SWAP1 DUP13 MLOAD SWAP2 PUSH2 0x1901 PUSH1 0xF0 SHL DUP4 MSTORE PUSH1 0x2 DUP4 ADD MSTORE PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0xC4 CALLDATALOAD SWAP2 PUSH1 0x42 PUSH1 0xA4 CALLDATALOAD SWAP3 KECCAK256 PUSH2 0x1C6D JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x1CFD JUMP JUMPDEST AND DUP2 DUP2 SUB PUSH2 0x4F2 JUMPI DUP7 PUSH2 0x4EF DUP8 DUP8 DUP8 PUSH2 0x19F8 JUMP JUMPDEST DUP1 RETURN JUMPDEST DUP8 MLOAD PUSH4 0x25C00723 PUSH1 0xE1 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP2 POP REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x41 DUP8 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST DUP9 MLOAD PUSH4 0x313C8981 PUSH1 0xE1 SHL DUP2 MSTORE DUP1 DUP6 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH2 0x556 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x5BA JUMPI PUSH32 0xCF3473B85DF1594D47B6958F29A32BEA0ABFF9DD68296F7BF33443646793CFD8 SWAP2 PUSH1 0x20 SWAP2 PUSH2 0x591 PUSH2 0x155E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP7 MSTORE PUSH1 0xE DUP4 MSTORE DUP5 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE SWAP4 MLOAD SWAP1 DUP2 MSTORE LOG2 DUP1 RETURN JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x12 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI DUP1 MLOAD PUSH2 0x275 SWAP2 PUSH2 0x263 DUP3 PUSH2 0x25C DUP2 PUSH2 0x13CB JUMP JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x11 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 SWAP1 DUP6 CALLVALUE PUSH2 0x6EF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6EF JUMPI POP DUP2 MLOAD SWAP2 PUSH2 0x64F DUP4 PUSH2 0x648 DUP2 PUSH2 0x1289 JUMP JUMPDEST SUB DUP5 PUSH2 0x1519 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH2 0x65F DUP3 PUSH2 0x25C DUP2 PUSH2 0x133D JUMP JUMPDEST PUSH2 0x6D9 PUSH1 0x2 SLOAD SWAP3 PUSH2 0x6CB PUSH1 0xD SLOAD SWAP4 DUP1 MLOAD PUSH2 0x683 DUP2 PUSH2 0x67C DUP2 PUSH2 0x13CB JUMP JUMPDEST SUB DUP3 PUSH2 0x1519 JUMP JUMPDEST PUSH2 0x6BE DUP3 MLOAD SWAP5 PUSH2 0x69D DUP7 PUSH2 0x696 DUP2 PUSH2 0x1459 JUMP JUMPDEST SUB DUP8 PUSH2 0x1519 JUMP JUMPDEST PUSH2 0x6B0 DUP5 MLOAD SWAP12 DUP12 DUP14 SWAP13 DUP14 MSTORE DUP13 ADD SWAP1 PUSH2 0x11DE JUMP JUMPDEST SWAP1 DUP11 DUP3 SUB PUSH1 0x20 DUP13 ADD MSTORE PUSH2 0x11DE JUMP JUMPDEST SWAP2 DUP9 DUP4 SUB SWAP1 DUP10 ADD MSTORE PUSH2 0x11DE JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x11DE JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x12 PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x71D PUSH2 0x713 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x165A JUMP JUMPDEST MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP SWAP1 POP CALLVALUE PUSH2 0x396 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI PUSH2 0x75B PUSH2 0x121E JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 SWAP3 DUP4 DUP7 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x9 DUP6 MSTORE DUP3 DUP8 KECCAK256 CALLER DUP9 MSTORE DUP6 MSTORE PUSH1 0xFF DUP4 DUP9 KECCAK256 SLOAD AND ISZERO PUSH2 0x90E JUMPI POP PUSH2 0x7A9 PUSH2 0x19D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP5 DUP6 ISZERO PUSH2 0x8CC JUMPI DUP6 DUP8 MSTORE DUP7 DUP6 MSTORE DUP4 DUP4 DUP9 KECCAK256 SLOAD LT PUSH2 0x88A JUMPI PUSH2 0x7D2 PUSH2 0x1A8B JUMP JUMPDEST DUP6 DUP8 MSTORE DUP7 DUP6 MSTORE DUP3 DUP8 KECCAK256 SLOAD SWAP2 DUP5 DUP4 LT PUSH2 0x856 JUMPI POP POP SWAP1 DUP3 PUSH32 0xFD38818F5291BF0BB3A2A48AADC06BA8757865D1DABD804585338AAB3009DCB6 SWAP5 SWAP4 SWAP3 DUP7 DUP9 MSTORE DUP8 DUP6 MSTORE SUB DUP2 DUP8 KECCAK256 SSTORE DUP2 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE DUP6 DUP6 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 DUP5 MLOAD DUP7 DUP2 MSTORE LOG3 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x1 PUSH1 0xA SSTORE DUP1 RETURN JUMPDEST DUP4 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD DUP6 SWAP1 MSTORE DUP2 SWAP1 PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST POP DUP4 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E636520746F206275726E00000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP4 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206275726E2066726F6D207A65726F2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x44 SWAP3 MLOAD SWAP2 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP4 MSTORE CALLER SWAP1 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI DUP1 MLOAD PUSH2 0x275 SWAP2 PUSH2 0x263 DUP3 PUSH2 0x25C DUP2 PUSH2 0x133D JUMP JUMPDEST POP SWAP1 POP CALLVALUE PUSH2 0x396 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 PUSH2 0x971 PUSH2 0x1239 JUMP JUMPDEST SWAP1 CALLDATALOAD DUP3 MSTORE PUSH1 0x9 DUP7 MSTORE DUP3 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP3 MSTORE DUP6 MSTORE KECCAK256 SLOAD SWAP2 MLOAD SWAP2 AND ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 DUP4 DUP6 CALLVALUE PUSH2 0x6EF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6EF JUMPI PUSH2 0x9D3 PUSH32 0x0 PUSH2 0x1AA9 JUMP JUMPDEST SWAP1 PUSH2 0x9FD PUSH32 0x0 PUSH2 0x1BAD JUMP JUMPDEST SWAP3 DUP1 MLOAD SWAP4 PUSH1 0x20 SWAP4 PUSH1 0x20 DUP7 ADD SWAP7 DUP7 DUP9 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP10 GT OR PUSH2 0xAA2 JUMPI POP SWAP6 SWAP4 SWAP1 PUSH2 0xA58 DUP4 PUSH1 0x20 SWAP3 DUP8 DUP12 SWAP10 SWAP7 MSTORE DUP7 DUP7 MSTORE PUSH2 0xA4B DUP3 MLOAD SWAP11 DUP12 SWAP11 PUSH1 0xF PUSH1 0xF8 SHL DUP13 MSTORE DUP1 DUP8 DUP14 ADD MSTORE DUP12 ADD SWAP1 PUSH2 0x11DE JUMP JUMPDEST SWAP2 DUP10 DUP4 SUB SWAP1 DUP11 ADD MSTORE PUSH2 0x11DE JUMP JUMPDEST SWAP3 CHAINID PUSH1 0x60 DUP9 ADD MSTORE ADDRESS PUSH1 0x80 DUP9 ADD MSTORE DUP5 PUSH1 0xA0 DUP9 ADD MSTORE DUP7 DUP5 SUB PUSH1 0xC0 DUP9 ADD MSTORE MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP4 SWAP3 JUMPDEST DUP3 DUP2 LT PUSH2 0xA8B JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xA7C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 SWAP1 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP2 PUSH2 0xAF4 PUSH2 0x15D8 JUMP JUMPDEST PUSH2 0xAFC PUSH2 0x1A8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB3A PUSH2 0x121E JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x7 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xB73 PUSH2 0x121E JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xF DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBAC PUSH2 0x121E JUMP JUMPDEST AND DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF PUSH1 0x8 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP5 DUP3 DUP6 CALLVALUE PUSH2 0x396 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI PUSH2 0xBFB PUSH2 0x121E JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 SWAP3 DUP4 DUP7 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x9 DUP6 MSTORE DUP3 DUP8 KECCAK256 CALLER DUP9 MSTORE DUP6 MSTORE PUSH1 0xFF DUP4 DUP9 KECCAK256 SLOAD AND ISZERO PUSH2 0xD6C JUMPI POP PUSH2 0xC49 PUSH2 0x19D5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP5 ISZERO PUSH2 0xD2B JUMPI PUSH1 0x2 SLOAD SWAP1 PUSH2 0xC67 DUP5 DUP4 PUSH2 0x153B JUMP JUMPDEST PUSH1 0xD SLOAD LT PUSH2 0xCEF JUMPI POP SWAP1 PUSH2 0xCA6 DUP4 PUSH32 0x3F2C9D57C068687834F0DE942A9BABB9E5ACAB57D516D3480A3C16EE165A4273 SWAP6 SWAP5 SWAP4 PUSH2 0xCA1 PUSH2 0x1A8B JUMP JUMPDEST PUSH2 0x153B JUMP JUMPDEST PUSH1 0x2 SSTORE DUP5 DUP7 MSTORE DUP6 DUP4 MSTORE DUP1 DUP7 KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE DUP5 DUP7 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP6 DUP5 MLOAD DUP7 DUP2 MSTORE LOG3 MLOAD SWAP1 DUP2 MSTORE LOG2 PUSH1 0x1 PUSH1 0xA SSTORE DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x45786365656473206D6178696D756D20737570706C79 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206D696E7420746F207A65726F20616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE CALLER DUP2 DUP9 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 SWAP1 REVERT JUMPDEST POP SWAP1 POP CALLVALUE PUSH2 0x396 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI PUSH2 0xDA5 PUSH2 0x15D8 JUMP JUMPDEST PUSH1 0x8 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO PUSH2 0xDE7 JUMPI POP PUSH1 0xFF NOT AND PUSH1 0x8 SSTORE MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 SWAP1 LOG1 DUP1 RETURN JUMPDEST DUP3 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH3 0x15180 TIMESTAMP DIV DUP2 MSTORE RETURN JUMPDEST POP DUP4 DUP4 CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH2 0xE31 PUSH2 0x1239 JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SUB PUSH2 0xE4E JUMPI POP PUSH2 0x392 SWAP2 SWAP3 CALLDATALOAD PUSH2 0x195E JUMP JUMPDEST MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE DUP4 SWAP1 REVERT JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH2 0xE7B PUSH2 0x1833 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST DUP5 DUP3 DUP6 CALLVALUE PUSH2 0x396 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x396 JUMPI PUSH2 0x392 SWAP2 CALLDATALOAD PUSH2 0xEC4 PUSH1 0x1 PUSH2 0x37B PUSH2 0x1239 JUMP JUMPDEST PUSH2 0x17B3 JUMP JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH32 0xD3D22FFD28B02735CF411BD7F925BD8DA01212C7028153E0D632E2953AC3088E PUSH1 0x20 PUSH2 0xF43 PUSH2 0x121E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xF4F PUSH2 0x155E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP7 MSTORE PUSH1 0xF DUP4 MSTORE DUP5 DUP7 KECCAK256 DUP3 SWAP1 SSTORE SWAP4 MLOAD SWAP1 DUP2 MSTORE LOG2 DUP1 RETURN JUMPDEST POP SWAP1 POP CALLVALUE PUSH2 0x396 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x396 JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0x1 SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x9 DUP6 MSTORE KECCAK256 ADD SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP4 DUP3 DUP7 CALLVALUE PUSH2 0x6EF JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x6EF JUMPI PUSH2 0xFB6 PUSH2 0x121E JUMP JUMPDEST PUSH2 0xFBE PUSH2 0x1239 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x20 MSTORE DUP7 DUP4 KECCAK256 SLOAD SWAP2 PUSH1 0x0 NOT DUP4 LT PUSH2 0xFFA JUMPI JUMPDEST PUSH1 0x20 DUP9 PUSH2 0x71D DUP10 DUP10 DUP10 PUSH2 0x165A JUMP JUMPDEST DUP7 DUP4 LT PUSH2 0x1062 JUMPI DUP2 ISZERO PUSH2 0x104B JUMPI CALLER ISZERO PUSH2 0x1034 JUMPI POP DUP3 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP7 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP2 MSTORE SWAP2 DUP7 SWAP1 KECCAK256 SWAP1 DUP6 SWAP1 SUB SWAP1 SSTORE DUP3 SWAP1 PUSH2 0x71D DUP8 PUSH2 0xFEC JUMP JUMPDEST DUP8 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP8 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE DUP3 SWAP2 POP PUSH1 0x60 ADD SUB SWAP1 REVERT JUMPDEST POP SWAP1 POP CALLVALUE PUSH2 0x396 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x396 JUMPI PUSH32 0x7C1CB3702D8E1FA6D24B12DD90670AB69C6D66D58233103D37DA8B07D6B850AC SWAP2 PUSH1 0x20 SWAP2 CALLDATALOAD SWAP1 PUSH2 0x10D1 PUSH2 0x155E JUMP JUMPDEST DUP2 PUSH1 0x12 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x71D PUSH2 0x111E PUSH2 0x121E JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x19F8 JUMP JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI DUP1 MLOAD PUSH2 0x275 SWAP2 PUSH2 0x263 DUP3 PUSH2 0x25C DUP2 PUSH2 0x1289 JUMP JUMPDEST POP POP POP CALLVALUE PUSH2 0x234 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x234 JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH32 0x442A94F1A1FAC79AF32856AF2A64F63648CFA2EF3B98610A5BB7CBEC4CEE6985 DUP2 MSTORE RETURN JUMPDEST DUP6 SWAP1 DUP4 CALLVALUE PUSH2 0x396 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x396 JUMPI CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x396 JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x11CD JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x11C6 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x120A JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x11E9 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1234 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1234 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x127F JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1269 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1299 DUP3 PUSH2 0x124F JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1318 JUMPI POP PUSH1 0x1 EQ PUSH2 0x12BC JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP3 SWAP4 SWAP5 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP3 PUSH1 0x0 SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x1305 JUMPI POP POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x12B6 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP5 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x12EB JUMP JUMPDEST SWAP3 POP POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF SWAP3 SWAP2 SWAP3 NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x12B6 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x134D DUP3 PUSH2 0x124F JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1318 JUMPI POP PUSH1 0x1 EQ PUSH2 0x136F JUMPI POP POP POP POP JUMP JUMPDEST SWAP3 SWAP4 SWAP5 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP3 PUSH1 0x0 SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x13B8 JUMPI POP POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x12B6 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP5 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x139E JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x13DB DUP3 PUSH2 0x124F JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1318 JUMPI POP PUSH1 0x1 EQ PUSH2 0x13FD JUMPI POP POP POP POP JUMP JUMPDEST SWAP3 SWAP4 SWAP5 POP PUSH1 0xB PUSH1 0x0 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 SWAP3 PUSH1 0x0 SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x1446 JUMPI POP POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x12B6 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP5 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x142C JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x1469 DUP3 PUSH2 0x124F JUMP JUMPDEST DUP1 DUP3 MSTORE SWAP2 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1318 JUMPI POP PUSH1 0x1 EQ PUSH2 0x148B JUMPI POP POP POP POP JUMP JUMPDEST SWAP3 SWAP4 SWAP5 POP PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP3 PUSH1 0x0 SWAP4 JUMPDEST DUP6 DUP6 LT PUSH2 0x14D4 JUMPI POP POP POP PUSH1 0x20 SWAP3 POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x12B6 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP6 ADD DUP5 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1503 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1503 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1548 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4FCB20797BC22B6BDF05ED948026FDC1B31B30D107AC0811A08B18C975BBD64B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x442A94F1A1FAC79AF32856AF2A64F63648CFA2EF3B98610A5BB7CBEC4CEE6985 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x15BA JUMPI POP JUMP JUMPDEST PUSH1 0x44 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x84574A31E2F767388BFA57BC81FF2590DF95D3022C04C363CCA3E37EE9608631 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x15BA JUMPI POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x15BA JUMPI POP JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND SWAP3 SWAP1 DUP4 ISZERO PUSH2 0x179A JUMPI DUP5 AND SWAP4 DUP5 ISZERO PUSH2 0x1781 JUMPI DUP3 PUSH2 0x1683 SWAP2 DUP4 PUSH2 0x1D82 JUMP JUMPDEST ISZERO PUSH2 0x1745 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP2 DUP3 DUP3 KECCAK256 PUSH3 0x15180 TIMESTAMP DIV DUP4 MSTORE PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 PUSH2 0x16B1 DUP6 DUP3 SLOAD PUSH2 0x153B JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x16BB PUSH2 0x1A8B JUMP JUMPDEST DUP5 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 SLOAD SWAP1 DUP5 DUP3 LT PUSH2 0x1714 JUMPI POP SWAP2 DUP1 DUP3 DUP6 PUSH1 0x20 SWAP6 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP9 SWAP7 MSTORE DUP3 DUP8 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP8 DUP2 MSTORE KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST DUP4 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151C985B9CD9995C881B9BDD08185B1B1BDDD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x182E JUMPI DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST ADDRESS PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1935 JUMPI JUMPDEST ISZERO PUSH2 0x188E JUMPI PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP3 MSTORE PUSH32 0x0 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH1 0xC0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1503 JUMPI PUSH1 0x40 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST POP PUSH32 0x0 CHAINID EQ PUSH2 0x1865 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND PUSH1 0x0 EQ PUSH2 0x182E JUMPI DUP1 DUP4 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B CALLER SWAP4 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0xA SLOAD EQ PUSH2 0x19E6 JUMPI PUSH1 0x2 PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x1A72 JUMPI AND SWAP2 DUP3 ISZERO PUSH2 0x1A59 JUMPI PUSH1 0x20 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x8 SLOAD AND PUSH2 0x1A97 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x1AE7 JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x1AD5 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1ACB DUP4 PUSH2 0x14E7 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2CD44AC3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x5 SLOAD DUP2 PUSH1 0x0 PUSH2 0x1AFA DUP4 PUSH2 0x124F JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1B89 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1B28 JUMPI JUMPDEST POP POP PUSH2 0x1B25 SWAP3 POP SUB DUP3 PUSH2 0x1519 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0x5 PUSH1 0x0 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x1B71 JUMPI POP PUSH2 0x1B25 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0x1B17 JUMP JUMPDEST DUP6 SLOAD DUP8 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x1B56 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP3 POP PUSH2 0x1B25 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1B17 JUMP JUMPDEST PUSH1 0xFF DUP2 EQ PUSH2 0x1BCF JUMPI PUSH1 0xFF DUP2 AND SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x1AD5 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1ACB DUP4 PUSH2 0x14E7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x6 SLOAD DUP2 PUSH1 0x0 PUSH2 0x1BE2 DUP4 PUSH2 0x124F JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1B89 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1C0C JUMPI POP POP PUSH2 0x1B25 SWAP3 POP SUB DUP3 PUSH2 0x1519 JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0x6 PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x1C55 JUMPI POP PUSH2 0x1B25 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0x1B17 JUMP JUMPDEST DUP6 SLOAD DUP8 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x1C3A JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x1CF1 JUMPI SWAP3 PUSH1 0x20 SWAP3 SWAP2 PUSH1 0xFF PUSH1 0x80 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP5 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP2 DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x1CE5 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1CDC JUMPI SWAP2 DUP2 SWAP1 JUMP JUMPDEST POP DUP1 SWAP2 PUSH1 0x1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x1D6C JUMPI DUP1 PUSH2 0x1D0F JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x1D29 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x1D4A JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 EQ PUSH2 0x1D54 JUMPI POP JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND SWAP1 PUSH1 0x0 SWAP4 DUP3 DUP6 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP7 KECCAK256 SLOAD AND SWAP2 DUP3 ISZERO PUSH2 0x1E07 JUMPI JUMPDEST POP POP PUSH2 0x182E JUMPI PUSH1 0x12 SLOAD DUP3 GT PUSH2 0x182E JUMPI DUP3 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x1DFA JUMPI PUSH2 0x1DEF SWAP1 SWAP2 JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 PUSH3 0x15180 TIMESTAMP DIV DUP6 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD PUSH2 0x153B JUMP JUMPDEST GT PUSH2 0x1B25 JUMPI POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH2 0x1DEF PUSH1 0x11 SLOAD SWAP2 PUSH2 0x1DD1 JUMP JUMPDEST AND DUP5 MSTORE POP PUSH1 0x40 DUP4 KECCAK256 SLOAD PUSH1 0xFF AND CODESIZE DUP1 PUSH2 0x1DAA JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0xD7 CALL PUSH8 0x71B70444D4041C0B PUSH8 0x23667F1452CA7001 DUP6 SWAP5 0xB4 MULMOD 0xA9 SWAP2 NOT 0xAD SWAP2 0xF8 SLOAD PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"742:7136:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;742:7136:28;;:::i;:::-;;;;1418:75;742:7136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1043:24;742:7136;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;742:7136:28;;;;;;;;;;-1:-1:-1;;;;;742:7136:28;;:::i;:::-;;;;1309:43;742:7136;;;;;;;;;;;;;;;;;;;;;;;;;;;;1234:24;742:7136;;;;;;;;;;;;;;;;;;;;;;4723:26:0;742:7136:28;;2484:4:0;742:7136:28;;;:::i;:::-;;;;;3877:6:0;742:7136:28;;;;3877:22:0;742:7136:28;2484:4:0;:::i;:::-;4723:26;:::i;:::-;;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;907:24;742:7136;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;1871:15:8;;:26;1867:97;;742:7136:28;;;;;;;;;;;;;;1121:7:12;742:7136:28;;;;;;;;;;;;;;;;2005:78:8;;742:7136:28;2005:78:8;;742:7136:28;1024:95:8;742:7136:28;;1024:95:8;;742:7136:28;;;;;1024:95:8;;742:7136:28;1024:95:8;742:7136:28;1024:95:8;;742:7136:28;;1024:95:8;;742:7136:28;;1024:95:8;;742:7136:28;;2005:78:8;;742:7136:28;;;;;;;;;;;;;;1995:89:8;;7105:8:19;;7051:25;;5153:20:20;;:::i;:::-;3993:249:21;;;;-1:-1:-1;;;3993:249:21;;;;;;;;;;742:7136:28;;;3993:249:21;742:7136:28;;3993:249:21;;7051:25:19;:::i;:::-;7105:8;;;;;:::i;:::-;742:7136:28;2208:15:8;;;2204:88;;8746:4:5;;;;;;:::i;:::-;742:7136:28;;2204:88:8;742:7136:28;;-1:-1:-1;;;2246:35:8;;;;;742:7136:28;;1024:95:8;;742:7136:28;;;-1:-1:-1;2246:35:8;742:7136:28;-1:-1:-1;;;742:7136:28;;;;;;;;1867:97:8;742:7136:28;;-1:-1:-1;;;1920:33:8;;;;;742:7136:28;;;;;1920:33:8;742:7136:28;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;5000:28;2484:4:0;742:7136:28;2484:4:0;;;:::i;:::-;-1:-1:-1;;;;;742:7136:28;;;;4956:11;742:7136;;;;;;;-1:-1:-1;;742:7136:28;;;;;;;;;;;;5000:28;742:7136;;;;;;;;;;;;;;;;;;;;;;;1582:53;742:7136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1504:51;742:7136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;2881:12:5;742:7136:28;;;7826:9;742:7136;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;2761:2:5;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;;;3388:5:5;742:7136:28;;:::i;:::-;;;735:10:11;;3388:5:5;:::i;:::-;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;975:24;;742:7136;;;;;;2930:6:0;742:7136:28;;;;;735:10:11;742:7136:28;;;;;;;;;;3495:23:0;3491:108;;2466:103:15;;;:::i;:::-;-1:-1:-1;;;;;742:7136:28;;;4187:18;;742:7136;;;;;;;;;;;;;4257:25;742:7136;;1315:72:14;;:::i;:::-;742:7136:28;;;;;;;;;;6244:19:5;;;;6240:115;;742:7136:28;;;;4368:26;742:7136;;;;;;;;;;;;;;;6714:21:5;742:7136:28;;6714:21:5;742:7136:28;;;6987:25:5;742:7136:28;;;;;;6987:25:5;742:7136:28;;;;4368:26;6996:18;3068:21:15;742:7136:28;;;6240:115:5;742:7136:28;;-1:-1:-1;;;6290:50:5;;-1:-1:-1;;;;;742:7136:28;;;6290:50:5;;;742:7136:28;;;;;;;;;;;;;;;;;;;6290:50:5;;;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3491:108:0;742:7136:28;;;3541:47:0;;;;;;735:10:11;3541:47:0;;;742:7136:28;;;;;3541:47:0;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;2930:6:0;742:7136:28;;;;;-1:-1:-1;;;;;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6183:41:20;:5;:41;:::i;:::-;6638:8;:47;:8;:47;:::i;:::-;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;5674:13:20;;742:7136:28;;;;5709:4:20;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;742:7136:28;;;;;;;;;;;;;-1:-1:-1;;;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;2427:20:14;2484:4:0;;;:::i;:::-;1315:72:14;;:::i;:::-;2408:4;742:7136:28;;2398:14:14;742:7136:28;;;2398:14:14;742:7136:28;;735:10:11;742:7136:28;;2427:20:14;742:7136:28;;;;;;;;;;;-1:-1:-1;;742:7136:28;;;;;;;;-1:-1:-1;;;;;742:7136:28;;:::i;:::-;;;;624:7:12;742:7136:28;;;;;;;;;;;;;;;;;;;-1:-1:-1;;742:7136:28;;;;;;;;-1:-1:-1;;;;;742:7136:28;;:::i;:::-;;;;1358:54;742:7136;;;;;;;;;;;;;;;;;;;-1:-1:-1;;742:7136:28;;;;;;;;-1:-1:-1;;;;;742:7136:28;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1796:7:14;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;907:24;;742:7136;;;;;;2930:6:0;742:7136:28;;;;;735:10:11;742:7136:28;;;;;;;;;;3495:23:0;3491:108;;2466:103:15;;;:::i;:::-;-1:-1:-1;;;;;742:7136:28;;3709:16;;742:7136;;2881:12:5;742:7136:28;3775:22;;;;;:::i;:::-;3801:9;742:7136;-1:-1:-1;742:7136:28;;1315:72:14;;6137:21:5;1315:72:14;3888:24:28;1315:72:14;;;;;:::i;:::-;6137:21:5;:::i;:::-;2881:12;742:7136:28;;;;;;;;;;;;;;;;;;6987:25:5;742:7136:28;;;;;;6987:25:5;742:7136:28;;;;3888:24;742:7136;3068:21:15;742:7136:28;;;;;;-1:-1:-1;;;742:7136:28;;;;;;;;;;;;;-1:-1:-1;;;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3491:108:0;742:7136:28;;-1:-1:-1;;;3541:47:0;;735:10:11;3541:47:0;;;742:7136:28;;;;;;;;;;3541:47:0;742:7136:28;;;;;;;;;;;;;;;2484:4:0;;:::i;:::-;1796:7:14;742:7136:28;;;;;2140:9:14;2136:62;;-1:-1:-1;;;742:7136:28;1796:7:14;742:7136:28;;735:10:11;742:7136:28;;2674:22:14;;742:7136:28;;2674:22:14;742:7136:28;;2136:62:14;742:7136:28;;-1:-1:-1;;;2172:15:14;;;742:7136:28;;;;;;;;;;;;;;;;;;5840:6;5822:15;742:7136;;;;;;;;;;;;;;;;;;;;;:::i;:::-;735:10:11;;-1:-1:-1;;;;;742:7136:28;;5397:34:0;5393:102;;742:7136:28;5505:37:0;742:7136:28;;;5505:37:0;:::i;5393:102::-;742:7136:28;-1:-1:-1;;;5454:30:0;;742:7136:28;;5454:30:0;742:7136:28;;;;;;;;;;;;;;;;2699:20:8;;;:::i;:::-;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;2761:2:5;742:7136:28;;;;;;;;;;;;;;;;;;4306:25:0;742:7136:28;;2484:4:0;742:7136:28;;;:::i;2484:4:0:-;4306:25;:::i;742:7136:28:-;;;;;;;;;;;;;;;;;;975:24;742:7136;;;;;;;;;;;;;;;;;;5348:29;742:7136;;;:::i;:::-;;;2484:4:0;;;:::i;:::-;-1:-1:-1;;;;;742:7136:28;;;;5297:19;742:7136;;;;;;;;;;;;;5348:29;742:7136;;;;;;;;;;;-1:-1:-1;;742:7136:28;;;;;;;;;;;;3877:6:0;742:7136:28;;;3877:22:0;742:7136:28;;;;;;;;;;;;;;;;-1:-1:-1;;742:7136:28;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;735:10:11;742:7136:28;;;;;;;;10503:17:5;;;10484:36;;10480:309;;742:7136:28;;4890:5:5;;;;;;:::i;10480:309::-;10540:24;;;10536:130;;9717:19;;9713:89;;735:10:11;9815:21:5;9811:90;;-1:-1:-1;742:7136:28;;;;;;;;;;735:10:11;742:7136:28;;;;;;;;;;;;;;;;4890:5:5;10480:309;;;9811:90;742:7136:28;;-1:-1:-1;;;9859:31:5;;;;;742:7136:28;;;;;9859:31:5;9713:89;742:7136:28;;-1:-1:-1;;;9759:32:5;;;;;742:7136:28;;;;;9759:32:5;10536:130;742:7136:28;;-1:-1:-1;;;10591:60:5;;735:10:11;10591:60:5;;;742:7136:28;;;;;;;;;;;;;;;;;;-1:-1:-1;742:7136:28;;6290:50:5;;;742:7136:28;;;;;;;;;-1:-1:-1;;742:7136:28;;;;5639:35;742:7136;;;;2484:4:0;;;:::i;:::-;742:7136:28;5595:29;742:7136;;;;;5639:35;742:7136;;;;;;;;;;;;;;;;;;;2881:12:5;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;8746:4:5;742:7136:28;;:::i;:::-;;;735:10:11;;8746:4:5;:::i;742:7136:28:-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1115:28;742:7136;;;;;;;;;;;;-1:-1:-1;;742:7136:28;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2649:47:0;;;:87;;;;742:7136:28;;;;;;;2649:87:0;-1:-1:-1;;;829:40:22;;-1:-1:-1;2649:87:0;;;742:7136:28;;;;;;;;;-1:-1:-1;742:7136:28;;;;;;;;;-1:-1:-1;742:7136:28;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;742:7136:28;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;742:7136:28;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;1837:5:5;742:7136:28;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;1837:5:5;-1:-1:-1;742:7136:28;;;-1:-1:-1;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;742:7136:28;;;-1:-1:-1;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7749:11;742:7136;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;7749:11;-1:-1:-1;742:7136:28;;;-1:-1:-1;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7774:11;742:7136;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;7774:11;-1:-1:-1;742:7136:28;;;-1:-1:-1;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;3175:103:0;735:10:11;-1:-1:-1;742:7136:28;;;;;;;;;;1115:28;;742:7136;;3495:23:0;3491:108;;3175:103;:::o;3491:108::-;742:7136:28;;;;3541:47:0;;;;;;735:10:11;3541:47:0;;;742:7136:28;;;;;3541:47:0;3175:103;735:10:11;-1:-1:-1;742:7136:28;;;;;;;;;;1043:24;;742:7136;;3495:23:0;3491:108;;3175:103;:::o;:::-;742:7136:28;-1:-1:-1;742:7136:28;2930:6:0;742:7136:28;;;-1:-1:-1;742:7136:28;735:10:11;-1:-1:-1;742:7136:28;;;;;-1:-1:-1;742:7136:28;;;3495:23:0;3491:108;;3175:103;:::o;5297:300:5:-;;;-1:-1:-1;;;;;742:7136:28;;;;5297:300:5;5380:18;;5376:86;;742:7136:28;;5475:16:5;;;5471:86;;7058:35:28;;;;;:::i;:::-;742:7136;;;-1:-1:-1;742:7136:28;;;7239:20;742:7136;;;;;;;5840:6;5822:15;742:7136;;;;;;;;7239:47;742:7136;;;7239:47;:::i;:::-;742:7136;;1315:72:14;;:::i;:::-;742:7136:28;;;;;;;;;;6244:19:5;;;;6240:115;;742:7136:28;;;;;;;;6987:25:5;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;6987:25:5;5297:300::o;6240:115::-;742:7136:28;;-1:-1:-1;;;6290:50:5;;-1:-1:-1;;;;;742:7136:28;;;;6290:50:5;;;742:7136:28;;;;;;;;;;;;;;;;6290:50:5;742:7136:28;;;-1:-1:-1;;;742:7136:28;;;;;;;;;;;;-1:-1:-1;;;742:7136:28;;;;;;;5471:86:5;742:7136:28;;-1:-1:-1;;;5514:32:5;;5396:1;5514:32;;;742:7136:28;;;5514:32:5;5376:86;742:7136:28;;-1:-1:-1;;;5421:30:5;;5396:1;5421:30;;;742:7136:28;;;5421:30:5;6155:316:0;;-1:-1:-1;742:7136:28;;;;2930:6:0;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;6252:23:0;6248:217;742:7136:28;;;;;;2930:6:0;742:7136:28;;;;;;;;;;;;;6323:4:0;742:7136:28;;;;;;;;6346:40:0;735:10:11;6346:40:0;;;6323:4;6400:11;:::o;6248:217::-;6442:12;;;:::o;3945:262:20:-;4029:4;4038:11;-1:-1:-1;;;;;742:7136:28;4021:28:20;;:63;;3945:262;4017:184;;;4107:22;4100:29;:::o;4017:184::-;742:7136:28;;4304:80:20;;;742:7136:28;2079:95:20;742:7136:28;;4326:11:20;742:7136:28;2079:95:20;;742:7136:28;4339:14:20;2079:95;;;742:7136:28;4355:13:20;2079:95;;;742:7136:28;4029:4:20;2079:95;;;742:7136:28;2079:95:20;4304:80;;2079:95;742:7136:28;;;;;;;;;;;;;;4294:91:20;;4160:30;:::o;4021:63::-;4070:14;;4053:13;:31;4021:63;;6708:317:0;;-1:-1:-1;742:7136:28;;;;2930:6:0;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;6802:217:0;742:7136:28;;;;;;2930:6:0;742:7136:28;;;;;;;;;;;;;;;;;;;;6900:40:0;735:10:11;6900:40:0;;;742:7136:28;6954:11:0;:::o;2575:307:15:-;1899:1;2702:7;742:7136:28;2702:18:15;2698:86;;1899:1;2702:7;742:7136:28;2575:307:15:o;2698:86::-;742:7136:28;;-1:-1:-1;;;2743:30:15;;;;;9605:432:5;-1:-1:-1;;;;;742:7136:28;;;;9717:19:5;;9713:89;;742:7136:28;9815:21:5;;;9811:90;;742:7136:28;9989:31:5;742:7136:28;;9734:1:5;742:7136:28;8746:4:5;742:7136:28;;;9734:1:5;742:7136:28;;9734:1:5;742:7136:28;;;;;9734:1:5;742:7136:28;;;;;;;9989:31:5;9605:432::o;9811:90::-;742:7136:28;;-1:-1:-1;;;9859:31:5;;9734:1;9859:31;;;742:7136:28;;;9859:31:5;9713:89;742:7136:28;;-1:-1:-1;;;9759:32:5;;9734:1;9759:32;;;742:7136:28;;;9759:32:5;1878:128:14;742:7136:28;1796:7:14;742:7136:28;;1939:61:14;;1878:128::o;1939:61::-;742:7136:28;;-1:-1:-1;;;1974:15:14;;;;;3368:267:16;1390:66;3491:46;;1390:66;;;2625:40;;2679:11;2688:2;2679:11;;2675:69;;742:7136:28;;;;;;:::i;:::-;2324:106:16;;2311:2;742:7136:28;;2324:106:16;3553:22;:::o;2675:69::-;742:7136:28;;-1:-1:-1;;;2713:20:16;;;;;3487:142;-1:-1:-1;742:7136:28;;6210:13:20;742:7136:28;;-1:-1:-1;742:7136:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1390:66:16;;;;;;;;:::i;:::-;3606:12;:::o;742:7136:28:-;;;;6210:13:20;-1:-1:-1;742:7136:28;;;-1:-1:-1;742:7136:28;;;;;;;-1:-1:-1;1390:66:16;;-1:-1:-1;;;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;742:7136:28;;;;;;;;;;;;;1390:66:16;742:7136:28;;;;;;;;;;;;6210:13:20;742:7136:28;;;;;;;;3368:267:16;1390:66;3491:46;;1390:66;;;2625:40;;2679:11;2688:2;2679:11;;2675:69;;742:7136:28;;;;;;:::i;3487:142:16:-;-1:-1:-1;742:7136:28;;6668:16:20;742:7136:28;;-1:-1:-1;742:7136:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1390:66:16;;;;;;;;:::i;742:7136:28:-;;;;6668:16:20;-1:-1:-1;742:7136:28;;;-1:-1:-1;742:7136:28;;;;;;;-1:-1:-1;1390:66:16;;-1:-1:-1;;;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;742:7136:28;;;;;;5203:1551:19;;;6283:66;6270:79;;6266:164;;742:7136:28;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6541:24:19;;;;;;;;;;;;;;-1:-1:-1;;;;;742:7136:28;;6579:20:19;6575:113;;6698:49;;5203:1551;:::o;6575:113::-;6615:62;;;6541:24;6615:62;;:::o;6541:24::-;742:7136:28;;;;;;;;;;6266:164:19;6365:54;;;6381:1;6365:54;6385:30;6365:54;;:::o;7280:532::-;742:7136:28;;;;;;7366:29:19;;;7411:7;;:::o;7362:444::-;742:7136:28;7462:38:19;;742:7136:28;;;;-1:-1:-1;;;7523:23:19;;742:7136:28;;7523:23:19;7458:348;7576:35;7567:44;;7576:35;;742:7136:28;;-1:-1:-1;;;7634:46:19;;742:7136:28;7634:46:19;;742:7136:28;;;;;7634:46:19;7563:243;7710:30;7701:39;7697:109;;7563:243;7280:532::o;7697:109::-;742:7136:28;;;;7763:32:19;;;;;;742:7136:28;7763:32:19;;742:7136:28;7763:32:19;742:7136:28;;;;7375:20:19;742:7136:28;;;;;7375:20:19;742:7136:28;6022:738;;;742:7136;;;;;;;;-1:-1:-1;;742:7136:28;;;;6162:11;742:7136;;;;;;;;6162:36;;;;;6022:738;6158:79;;;;6308:20;742:7136;6299:29;;6295:72;;742:7136;;6482:19;742:7136;;;;;;6482:29;;;;6652:20;6482:77;;;6591:20;742:7136;;;;;5840:6;5822:15;742:7136;;;;;;;;;6652:20;:::i;:::-;:33;6648:76;;6742:11;6749:4;6022:738;:::o;6482:77::-;742:7136;6652:20;6542:17;742:7136;6482:77;;;6162:36;742:7136;;;-1:-1:-1;742:7136:28;;;;;;6162:36;;;"},"methodIdentifiers":{"BURNER_ROLE()":"282c51f3","COMPLIANCE_ROLE()":"062d3bd7","DEFAULT_ADMIN_ROLE()":"a217fddf","DOMAIN_SEPARATOR()":"3644e515","MINTER_ROLE()":"d5391393","PAUSER_ROLE()":"e63ab1e9","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","blacklisted(address)":"dbac26e9","burn(address,uint256)":"9dc29fac","companyName()":"f5ec2eed","dailyTransferAmounts(address,uint256)":"fdb98082","dailyTransferLimits(address)":"7d89d05c","decimals()":"313ce567","defaultDailyLimit()":"c76b0888","eip712Domain()":"84b0196e","getCurrentDay()":"3e6968b6","getRoleAdmin(bytes32)":"248a9ca3","getTokenInfo()":"abb1dc44","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","maxSupply()":"d5abeb01","maxTransactionAmount()":"c8c8ebe4","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","pause()":"8456cb59","paused()":"5c975abb","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","setBlacklisted(address,bool)":"d01dd6d2","setDailyLimit(address,uint256)":"2803212f","setMaxTransactionAmount(uint256)":"1e293c10","stockSymbol()":"c87cbe56","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_stockSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_companyName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"Blacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"DailyLimitSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"MaxTransactionAmountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMPLIANCE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"companyName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dailyTransferAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"dailyTransferLimits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultDailyLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_stockSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_companyName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTransactionAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setBlacklisted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"setDailyLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setMaxTransactionAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stockSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token representing Nigerian Stock Exchange (NGX) stocks on Bitfinity EVM  Features: - ERC20 compliant with permit functionality - Role-based access control - Pausable for emergency stops - Reentrancy protection - Minting and burning capabilities - Transfer restrictions for compliance\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burn(address,uint256)\":{\"details\":\"Burn tokens from specified address\",\"params\":{\"amount\":\"Amount of tokens to burn\",\"from\":\"Address to burn tokens from\"}},\"constructor\":{\"details\":\"Constructor\",\"params\":{\"_admin\":\"Admin address\",\"_companyName\":\"Full company name\",\"_initialSupply\":\"Initial token supply to mint\",\"_maxSupply\":\"Maximum token supply\",\"_name\":\"Token name (e.g., \\\"Dangote Cement Token\\\")\",\"_stockSymbol\":\"NGX stock symbol (e.g., \\\"DANGCEM\\\")\",\"_symbol\":\"Token symbol (e.g., \\\"DANGCEM\\\")\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"getCurrentDay()\":{\"details\":\"Get current day (for daily limits)\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getTokenInfo()\":{\"details\":\"Get token information\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"mint(address,uint256)\":{\"details\":\"Mint tokens to specified address\",\"params\":{\"amount\":\"Amount of tokens to mint\",\"to\":\"Address to mint tokens to\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"pause()\":{\"details\":\"Pause all token transfers\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setBlacklisted(address,bool)\":{\"details\":\"Add/remove address from blacklist\",\"params\":{\"account\":\"Address to blacklist/unblacklist\",\"status\":\"True to blacklist, false to unblacklist\"}},\"setDailyLimit(address,uint256)\":{\"details\":\"Set daily transfer limit for an address\",\"params\":{\"account\":\"Address to set limit for\",\"limit\":\"Daily transfer limit\"}},\"setMaxTransactionAmount(uint256)\":{\"details\":\"Set maximum transaction amount\",\"params\":{\"amount\":\"New maximum transaction amount\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"unpause()\":{\"details\":\"Unpause all token transfers\"}},\"title\":\"NigerianStockToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NigerianStockToken.sol\":\"NigerianStockToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xfb223a85dd0b2175cfbbaa325a744e2cd74ecd17c3df2b77b0722f991d2725ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84bf1dea0589ec49c8d15d559cc6d86ee493048a89b2d4adb60fbe705a3d89ae\",\"dweb:/ipfs/Qmd56n556d529wk2pRMhYhm5nhMDhviwereodDikjs68w1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Permit.sol\":{\"keccak256\":\"0xecd08ad8132d88a5fcfd50f76a18583004fcdab4c33fb86343903ae420ca5a2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02422dce2e5305624e5cec644add1baa44bfa98ea131bf6030069089a2f56ca4\",\"dweb:/ipfs/QmcsSUkX7AYXNZE18LYE6JEmv8zZcCZvKfbUm9cSzNQyNo\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x17fc4574e07105b0180ef61f1b3cacd1820a3d37f29a4af1018d0a253c6399b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be46b3e1362dbcadbbb45ec92cdea849dceccea3e2795237f00c123aeae44746\",\"dweb:/ipfs/QmSpyB8mud6xKiZaQnVtEPrxtTHGtyBgjs1PCYk4f2gesd\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/NigerianStockToken.sol\":{\"keccak256\":\"0x82ba5c0a29338162c9b9869680d405552a77eb32ecdc1c1901917bdf8618bff3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd12a1ee7067540b5b97359ab4d7b509d7b0f06d78ebcc7e640604ac7a6a1d92\",\"dweb:/ipfs/QmTQnPKezKUhe3XspCfzscmbUUer3o6HZJAoKgZdAQBnNw\"]}},\"version\":1}"}}}}}